%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: rails-mvc.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Sarah Allen
%%CreationDate: 1/1/11
%%BoundingBox: 0 0 728 191
%%HiResBoundingBox: 0 0 728 190.0449
%%CropBox: 0 0 728 190.0449
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 36 8%%BeginData: 4332 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD75FFA8FFA8FFA8FD78FFA8FFA8FFA8FFA8FFA8A8A8FD74FFA8FD%0BFFA8FD28FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFAFFD0BFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFD09FFA8FD0DFFA8FD26FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD09FFA9FFAFFFA9FFAFFFA9FFAFFF%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD07FFA8FD34FFA9FD1FFFA9FD07FF%A9FD1BFFA9FD05FFA87DFD0EFF7DFD16FF7DFD04A8FFA8A8A87D7DFD4FFF%527DFD0CFFA87DA8FD14FFA852F82727525227F827F87DFD04FFA8FD09FF%52A8FFFFFFA8A8FFA87DA8FD0BFFA8FD07FFA9FD09FF7DA87DFFFFA8A8FF%A8FD09FFA8FD06FF7D277D7DFFA8FD05FFA8A87D7D52FD12FFA8FFA8FFFD%047D527D527D527D7DFFFFA852FD09FF7DA87D7D5252277D7D7D277D527D%FD10FFA8FD0AFF5227527D7D5252527DFD09FFAFA8FFA8FF52FF527D527D%7DFD04A8FFA8FFA8A87D7DA8FD10FFA8FFFFFFA8FFFFFFA8FD07FFA8FFA8%7DA8FD08FF7D7D7D52525227527DFD042752FD09FFA8FFA8FFA8FFFF5252%FD09FF522752522752272752FD09FFA8FFFFFFA87DFF7D27FD047DA87DA8%A8FFFFFF7D7D52FD2FFFA8FFA8A8FFA8FFA8FFA8FFA8FD12FFAFFD0AFFA8%FFA8FFA8FFA8FD11FF7D52527D7DA87DA8A8FFFFFFA8A87D7DFD11FFA8FD%13FFA9FD1FFFA9FD07FFA9FD1BFFA9FD06FF52527D52FD047DFD05A87D7D%52FD70FF52527DA87DA87DA8A8FFFFFFA8A87D7DFD09FF7DA1A8FD05FFA8%FD13FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA8FFA8FFA9AFA8FFA9AFA8%FFA9AFA8FFA9FD07FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9%AFA8FFA9AFA8FFA9FD06FF7D5252527D7DA8A8FFA8FFFFA87D7D52FD08FF%A87E2F7D7DCAFD62FF7D7D527D527D7DFD04A8FFA8A87D7DFD08FFA82E0D%0C53527DA8FD25FFA8FD3AFFA852FD047DA87DA8A8FFFFFF7D7D7DFD08FF%A8350D350D352E527DFD61FF7D7D7DFD04A8FFFFFFA8A8A8FD09FF7D0C2F%0D2F0C350C2E27FD23FFA8FD3DFFA8A87DA87DA8A8FFA8A8A8FD0AFF590D%0D350D350D350C7CFD1EFFA8A8A8FFA8A87DA8A8A8FD4DFFA8350C0D0C2F%0C0D0C2E7DFD1EFF7D272727522752F8277DFD38FF7D7DFD05FFA8FD0EFF%2F0D0D350D350D3528FD1FFFA8A852FD067DFD39FF527D7D7D52A8FD067D%52FD07FFA87D84532F0C2F0D0D0C52A8A8FD5EFFA8525227F852F8525227%F827F8F87DFD04FFA8A852527DA17D590D350D2E7DA852FD5FFF7DFD0CA8%FD04FFA87D27522752527D52520C0D27A8FD24FFA8FD4CFFA8A87DFD0852%7D2E52FD71FF7D7DA8A87D7D52522752272727527DFFA8FD22FF7D52FD4C%FFA87D7DA87D7D52522752275252FFFFFFA8FD13FFA9FFAFFFA9FFAFFFA9%FFAFFFA9FF7E7EAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFD3EFFA8A8527D7D%7D525227527DFFFFFFA8FD13FFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA9FFFF%FFA8FFAFFFA8FFAFFFA8FFAFFFA9AFAFFD40FFFD047D527DA8FD05FFA8FF%A87D52FD097D527DFD22FFAFFD42FF7D7D527DFD09FFA852FD0627525252%F82752FFFFFFA9FD0BFFA8A87DA8A8FFA8FD5AFFA8FFFD04A87D7DA8A87D%FFA8A87DA8FFFFA8FD0DFF277D272752277DFD0BFFA9FD4EFFA8FFA8FFA8%FF7DA8A8FFA8FFA8FFA8FFA8AFA8FD0CFF7D7D52527D27A8FD0BFFAFA8FD%50FF52FD057D5252A8A8A8FD23FFAFFD50FFA85252527DA852F8277D7D7D%FD04FFA8FD1FFFA9FD50FF52FFFD04A87DA87D7DA8FD23FFA9FD5AFFA8FD%05FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FF%A9AFA8FD3CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-01-01T17:36:42-08:00</xmp:CreateDate>
         <xmp:MetadataDate>2011-01-01T17:36:42-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-01-01T17:36:42-08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>68</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgARAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqsmmSGJ5ZDREFT3O3gMVUPSvZ/ik&#xA;lNuh6RRcS1P8t2Df8KBTxOKu/Rlt/PP/ANJE/wDzXirv0ci7xTzxN/N6rSbf6svqL+GKtxzTxSpD&#xA;clW9WoilQFQWALFWUlqGgJG+9D07qonFXYq7FXYq7FXnHmX86tP0DzP+g7jSLucHUYtMS7hKMrSP&#xA;b21zIeJIPwLfxUXq3xU+zuqk6f8AOSfln6rPPNYSo0QZoo457eYy8LaW5YRsjFWKiIK1D8JYVxVb&#xA;pH/ORen61rem6TYaPNBPez2sczXcsaKkc8qwyMpQtUq8i8FajPWtKEVVevvJGlC7BQxCrUgVJ2AF&#xA;e5xVCWVlZtZwM0EZYxoSSikklR7ZZOZs7tcYChsrfULH/lni/wCAX+mR45d7LgHclGo695P03Vbf&#xA;Sb2SCLULr0zFB6RagmcxRGRlUrGJJFKIXI5NsN8eOXevAO5fda35MtLU3dxeWEdsE9T1S8XHhz9P&#xA;kCD05/DXxx45d68A7lPVPMXkjS7CS/vryyitIgjSSAo9FkmFurUTk1DMwStOu2PHLvXgHcjYbny5&#xA;OyJDJaSPIxSNFMZYuqhyoXryCmpGPHLvXgHci/qFj/yzxf8AAL/THjl3rwDud9Qsf+WeL/gF/pjx&#xA;y714B3OsP94bf/jEn/ERjP6isOQV8iyQdtaWsiO8kMbuZZasygk/vG7kZZKRHXuYRiD0VfqFj/yz&#xA;xf8AAL/TI8cu9PAO5Aanf+WdLnsoNQa2tZdSmNvZLIqj1JRG0pQGlK8I2O+PHLvXgHchbTzH5Iu9&#xA;H/TNveWT6Z6IufrPwAeixorkEBqMRQbb9seOXevAO5EQap5VuJ7WCCS2lmvAWt40VWZgqCQ1AHwn&#xA;gwNGpjxy714B3Jj9Qsf+WeL/AIBf6Y8cu9eAdzvqFj/yzxf8Av8ATHjl3rwDudYbWNsB/vpP+IjG&#xA;f1FYcgkf5g6hLZeT9TvLWcQ3Vp6TxSbHhKsqMlQdjvT4T1yLJL/LP5qeW9Xto/rso0u9p+8iuTxi&#xA;qB1Sc0jIPYEhvbFWYQXEFxCs1vIs0LiqSRsGUj2IqDiqjd6pp1oeNzcxxPxLCNmAcgfyr9o/QMVY&#xA;fcedRqHnbQdKsUeOzM87zzSAo0pWzn4oqN8QUH4jyoajpTqqznFXYq7FXYqlmm6bp0unWsklrC8j&#xA;wxs7tGpZmKgkkkbk4qrtomjMQWsLYkHkCYk2alK9OtMVQ9v5W8tW7yvBpdrG07tLKRCm7sqox6d1&#xA;RQfliqsNC0MUpp1sKBQP3MewQ1UdP2T0xVAeYPIvlHzDYDT9X0uG5tFljnEQBi/eRNyQloijGh7V&#xA;oe+Kprpyqun2qqAqrFGFUbAAKNhkp/UWMOQRGRZMY17yHBq+pXN2NTvbCLUbaO01W1tGiVbmKAyN&#xA;EGdo3ljI9Zw3psvJdjirEH/5x18pyI7y39295IYXNx6dooDW8V3EnGJYBEq0vyzKFozIp61qq7Uv&#xA;+cc/KF/aLaNf3sNssduOMQtgxltmQiUyejz+IRUZK8K1anLfFU18ofkp5Y8r+ZpvMVrc3VzfTPcP&#xA;/pJiZQbluTH4UU8gS3xV6HFXoOKuxVLrHTbf6jb/ABz/AN0n/HxP/KP8vJT+osYcgp6t5dtdR0u8&#xA;09rq8tlvIJLc3NvdTJNGJUKc4mZmAda1UkHfIslXQLEWGkwWQnmuRbF4hcXLmWaTjIw5SSHdmPc5&#xA;KfP5MY8kwyLJiv5g/l1o3niwtLPU57i3WymNxBJasqOshQoGDFWoV5VFMVYnP/zjp5RkFI767hSM&#xA;EWqKloREXjihfZ4G9RTFAqqknJVPxKOVCFU28mfkt5a8p+YJ9csLq7lup5HkZJmjKfvPUqPhRT9q&#xA;dyN/DFXoGKuxVLrHStLNlbk2cBJjQkmNP5R7ZKf1FjDkGH/mF5W8taT5R826taaekV3q8MJ1SWOp&#xA;MiwhIk+EmihY16IBXruciyeP+Xmuo1TiBdRbFXUgSUPTr8LfOoxV6Doi6czAz2JEh68oPUJ/2SBx&#xA;+OKs6heOLSJVs7FkQgCoVYVr7g0f/hcVeeaOH/5WloDXDAyNLdelEn2VpZT1bfcnty9/fFXtOKob&#xA;VLv6pp1zchgrRRsyFunOnwj6Wpir5x0b83tX0m9lW1bhYiVjFDTnCU5fCGiY/Dt1MbL8jmfLQmrH&#xA;N00O1o8REhtexD1Pyx+dnlfVOEOosNNuWoA7NygYn/LoCpPgw28cwpwMTRDtceWMxcTYZ3pYQaba&#xA;qkiSqsSKJIzyRuKgVUjqNsi2InFXYq7FXYqoCxgUBVMiqNgBLIAB7ANkuMseAO+pQ/zS/wDI2X/m&#xA;rHjP4C8Id9Sh/ml/5Gy/81Y8Z/AXhDvqUP8ANL/yNl/5qx4z+AvCEPptukunWskjys7wxs7GWTcl&#xA;QSftY8Z/AXhCI+pQ/wA0v/I2X/mrHjP4C8Id9Sh/ml/5Gy/81Y8Z/AXhDvqUP80v/I2X/mrHjP4C&#xA;8IVkRURUQUVQFUeAGwwE2yAbwKoGzgqSC61JYhZJFFSanYMB1yXGWPCHfUof5pf+Rsv/ADVjxn8B&#xA;eEO+pQ/zS/8AI2X/AJqx4z+AvCHfUof5pf8AkbL/AM1Y8Z/AXhDvqUP80v8AyNl/5qx4z+AvCHfU&#xA;of5pf+Rsv/NWPGfwF4Q76lD/ADS/8jZf+aseM/gLwhWjRY0WNBREAVR4AbDATbICkp83aRNrHlrU&#xA;dNgYLPcwssJb7PMfEoPgCRQnAr5907RbzTbx7VxJY3MRpLayLVQa/wAh6A/5BAPXFXoOgjUgVo8L&#xA;+/Fk/wCNnxVmzR37aTIGmRARvwjPIfJmYj/hcVYb5T8t3U/na31aJGNtYGVp7qSp5u8TwiNW7ker&#xA;yoNh7VFVXqmKsN/NnVJbDyXemGpllQqAoqwFPtD/AFHKk5ZijcgGjUzMcciOdPlbN88cslYLE7Ho&#xA;Aa0ynUVwElytGJHLERNbvr38vdAk0DyVo+kzchcQW4a5VjUieYmWZa+AkdgPbNG9cyHFXYq7FXYq&#xA;7FXYqgddvrqw0PUb60gN1dWltNPb2oBJlkjjLJGAtW+JhTbFXlN1+bf5owX9/Zr5JeX6jyb1gt1w&#xA;kEFhPduEpG1TPJbiOHwLAN8W2KoZPzX/ADKs9TS2i8oT3FhLc/VY4RDdJ9UjiEalGkaEeq3xsxdS&#xA;UPA8TvUKvYNDudQutGsrnUYkgvp4UkuIY+QVHdQxUc/i+GtN8VRuKuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KsI17zr5IOr3Wla9ZyJDYXAsX1W4iT6qLt7RL4QRyqxlWRoJFI+EVPwglqDFUtsvOP5Pkz&#xA;fVL4coW4R0luFEzfVo7oCEswViY50pv9rbriqPt/zG/Kp7OCZtbtkhnhM6wXE714gMSrxuxHL4Go&#xA;p3NKiuKsg0Lzf5T1i5l0/RdSt7q4s4opJbaFhySKVQ0Z47bcSOnToaYqlvmXzlPa2c50i3N1NGGU&#xA;OCu7LsRGGIBINd28OjYq+etY8++Z59ae7vRxlB4m3kB5r0NOZo3IdqUHhiqXXl3pOpln9P6redXC&#xA;gCp71Hwq2/fY/PMnFqpQ8w4Gp7Ox5Nx6ZIz8vfLn6c886VprhZbdZxcXYIJUwwfvWVhSoD8eG/8A&#xA;Nlup1InEAONoNDLFkJl3bPp/RNLey1DWZ2vrm6F7dib0rhkZIf3MY4QhUQqtKChJ6eNScF3Cb4q7&#xA;FXYq7FXYq7FXYq7FUNpjvJptpI5LO8MbMx6klQSTiqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KsR1z8qvJuuXeo3OqQT3A1RvVurc3U625m+rLZ+ssCuIxJ9XQR8uPT5nFUsT8hvyxSW2kXTJAbST&#xA;1bdfrVwQr+nFFXeT/fdtGvyXFWpfyE/LGa4juZtPnluYongW4kvLt5CkiPGeTtKWakchQV/ZoO2K&#xA;pv5O/K7yR5NuZrny7pwsZJ4kgekkjqESmyq7MAWKhmPc74qv1zyJZXkkt3pkx0y/lJeRkHO3lc9T&#xA;NBUAk92Qq3iTiryfzt5fuLUen5jsBAK8YdRiJe3Yk0HGYAFCf5ZAD4VxVhmjflpqXmXUXs9LRry2&#xA;iYLLOT6VvFuCfWlH2iK/YT4iOopir6D/AC9/LXS/J0Erxytd6ldKiXN0yhVCpUhIkFeCVNTuSe/Q&#xA;UVZKk0cB1CaQ0jik5uetAsKE4q89b/nIn8s05CW5uomRYXYPbPRUnVXDM4qihVkXlyYbkD7W2Kpg&#xA;Pzs8jG4e3LXizR/FIhtZfhhaZbdJyaU9J53Eat3PtviqFuP+cgPy3tQv1y5ubWR4DOkU9u6Of3hi&#xA;WNVP2nZugHYitK4qzjQdb07XdGs9Y05zJY30SzW7srI3Fv5lYAgjuMVVLaOeW3ila5kDSIrEAR0q&#xA;RXaqZZIgGqYRBIu1T6vN/wAtUv3Rf80ZHiHd96eE97vq83/LVL90X/NGPEO7714T3pbqa6JfWc2m&#xA;ahqMcttqIlsZbZ3gHrch6UsNOIJb4uJA3x4h3fevCe9W0fQLXR9Js9J06WSCwsIY7a1hAj+GOJQq&#xA;ivDfYdceId33rR70Z9Xm/wCWqX7ov+aMeId33rwnvd9Xm/5apfui/wCaMeId33rwnvU7mOeK3llW&#xA;5kLRozAER0qBXeiZKJBNUiQIF2i8rZuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbLFFLG0U&#xA;qLJG4o6MAVIPYg4q1BBBbxLDBGsUS/ZjRQqiprsBtiq/FUHLpxkeYi5lRJzWSILEyH4AhHxxsaEL&#xA;44q8b856t+WWg6trFjqHl5bpdNsZ5nnWztpfUn0y1tJltuKW0npr9Xv4R6rUSnwtsMVS99R8leWY&#xA;ox5i8sRWdlFqd7Cb5Gtb51uoYvVlmcvaRN+8cRopruxXwGKp9or+RfMOk2Gt3Xl2OFb25tdKlEsF&#xA;k8kJ1C0injqfq4qBJdLFtQipI7jFXqVnoy2VpDZ2dzJb2tugjggiS3RERRQKqiKgAxVE6eKWFsK1&#xA;pEm5/wBUZKf1FjDkFfIsnYq8x83fk1d63qOtXlhr82ktqQiey9CP4rSZmhN5IjB1P+kCzg6UoQx6&#xA;tXFUJ5d/JLX9KvtJuJPOd/NbWU0dxe2HKQxXDLMZWX4pGKp+4tUA6BY22/eHFXrOKuxVQv8A/eG4&#xA;/wCMT/8AETkofUGM+RV8iydirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirDrn/lX&#xA;X+IPMP1/6r9d+oyfpz63w9L6r6MP1vl6n7P1f6r9Y/Z4+lyxVFav/wAq49Jv0t+jPS+tPy+s+jT6&#xA;3zj9SvL/AHZz9OvetMVSCL/lTH+I9P8A0f8AUP0v69t6f1Dj9r6uPqvren+xx9PhXblw70xV6Niq&#xA;W2/r/V4vS+telwX0/wDeb7NNuvtl0qvevtao3W1/Yqf6Z/y8/wDTtkdvL7U7+f2O/wBM/wCXn/p2&#xA;x28vtXfz+x3+mf8ALz/07Y7eX2rv5/Y7/TP+Xn/p2x28vtXfz+x3+mf8vP8A07Y7eX2rv5/Y7/TP&#xA;+Xn/AKdsdvL7V38/sU7j1/q8vq/WvS4N6n+832ab9PbJRq9q+1Erre/sTLKW12KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>415.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:F77F117407206811BEDCF869FFD0140E</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F77F117407206811BEDCF869FFD0140E</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:F77F117407206811BEDCF869FFD0140E</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BEDCF869FFD0140E</stEvt:instanceID>
                  <stEvt:when>2011-01-01T17:36:42-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -190.045 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 190.045 li
728 190.045 li
728 0 li
cp
clp
[1 0 0 1 0 0 ]ct
91.6376 95.8418 mo
79.5995 133.686 li
39.2696 111.341 li
48.8012 74.7744 li
91.6376 95.8418 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.888609 .448371 .305943 .055024 cmyk
f
15.9224 129.443 mo
34.5063 118.932 li
70.9937 138.992 li
53.3134 149.372 li
15.9224 129.443 li
.75021 .679683 .670222 .90164 cmyk
f
15.9224 129.443 mo
15.7992 129.226 li
34.5047 118.645 li
71.4995 138.985 li
53.3194 149.658 li
15.4031 129.45 li
15.7992 129.226 li
15.9224 129.443 li
16.04 129.223 li
53.3076 149.086 li
70.4878 138.999 li
34.5081 119.218 li
16.0454 129.661 li
15.9224 129.443 li
16.04 129.223 li
15.9224 129.443 li
.310948 .246555 .251835 3.0518e-05 cmyk
f
35.6674 141.504 mo
28.2631 137.496 li
28.1139 137.409 27.7309 137.426 27.4813 137.443 cv
27.3344 137.452 27.2337 137.462 27.2534 137.451 cv
22.353 140.3 li
22.1021 140.448 22.1334 140.712 22.4331 140.885 cv
29.8863 145.189 li
30.1855 145.362 30.6383 145.375 30.8892 145.231 cv
35.7905 142.379 li
36.2763 142.075 36.0395 141.713 35.7402 141.539 cv
35.6674 141.504 li
.67718 .608667 .59826 .476326 cmyk
f
35.596 141.636 mo
28.1897 137.627 li
28.1879 137.626 li
28.158 137.602 27.9903 137.576 27.8232 137.579 cv
27.5911 137.579 27.3574 137.605 27.2686 137.606 cv
27.2344 137.604 li
27.1924 137.592 li
27.1441 137.559 li
27.1009 137.454 li
27.1468 137.345 li
27.1792 137.321 li
27.3288 137.581 li
22.4288 140.429 li
22.4293 140.429 li
22.3343 140.551 li
22.3322 140.59 22.3696 140.675 22.508 140.755 cv
29.9612 145.058 li
29.9615 145.059 li
30.0945 145.137 30.2803 145.18 30.4525 145.18 cv
30.5976 145.18 30.7323 145.149 30.8143 145.1 cv
30.8146 145.1 li
35.715 142.249 li
35.7905 142.379 li
35.711 142.252 li
35.8878 142.138 35.9182 142.052 35.9193 141.988 cv
35.9259 141.897 35.8169 141.754 35.6649 141.669 cv
35.8156 141.409 li
36.014 141.528 36.2125 141.717 36.2192 141.988 cv
36.2203 142.182 36.0962 142.368 35.87 142.506 cv
35.8681 142.507 li
30.9646 145.36 li
30.964 145.36 li
30.8166 145.444 30.6377 145.479 30.4525 145.48 cv
30.2327 145.479 30.0031 145.429 29.8108 145.318 cv
22.358 141.015 li
22.1665 140.904 22.0366 140.743 22.0344 140.551 cv
22.0333 140.394 22.1325 140.253 22.2766 140.171 cv
22.2774 140.17 li
27.1779 137.322 li
27.3275 137.581 li
27.2577 137.459 li
27.3561 137.56 li
27.3275 137.581 li
27.2577 137.459 li
27.3561 137.56 li
27.2527 137.454 li
27.401 137.454 li
27.3561 137.56 li
27.2527 137.454 li
27.401 137.454 li
27.2519 137.454 li
27.3583 137.349 li
27.401 137.454 li
27.2519 137.454 li
27.3583 137.349 li
27.2575 137.448 li
27.2731 137.307 li
27.3583 137.349 li
27.2575 137.448 li
27.2731 137.307 li
27.2686 137.347 li
27.2686 137.306 li
27.2731 137.307 li
27.2686 137.347 li
27.2686 137.306 li
27.3142 137.307 27.577 137.279 27.8232 137.279 cv
28.0119 137.283 28.1899 137.286 28.3386 137.366 cv
28.2631 137.496 li
28.3346 137.364 li
35.7389 141.372 li
35.596 141.636 li
.310948 .246555 .251835 3.0518e-05 cmyk
f
80.042 138.238 mo
80.0167 138.1 80.2636 138.762 78.0346 140.017 cv
76.5908 140.885 49.5347 157.37 49.5347 157.37 cv
49.5347 157.378 li
48.9747 157.705 46.7217 158.878 43.6456 157.482 cv
43.6456 157.5 li
4.91107 135.609 li
4.91107 135.609 3.52398 134.79 3.08296 134.484 cv
2.64213 134.181 2.47516 133.159 2.47516 133.159 cv
2.50284 136.582 li
2.50284 136.582 2.5591 137.106 3.13814 137.494 cv
3.71826 137.882 4.89606 138.55 4.89606 138.55 cv
43.7143 160.454 li
43.7143 160.435 li
46.4306 162.017 49.1015 160.452 49.1015 160.452 cv
78.0688 142.703 li
78.0688 142.703 78.0829 142.669 78.9527 142.165 cv
79.8208 141.659 80.0699 138.377 80.042 138.238 cv
.657282 .585107 .572351 .380926 cmyk
f
34.5684 124.064 mo
32.9531 123.132 li
32.5835 122.918 31.9741 122.918 31.6064 123.132 cv
30.3384 123.869 li
29.9702 124.082 29.9731 124.436 30.3433 124.649 cv
31.9565 125.578 li
32.3281 125.796 32.9365 125.796 33.3042 125.581 cv
34.5723 124.845 li
34.9404 124.631 34.9385 124.277 34.5684 124.064 cv
.67718 .608667 .59826 .476326 cmyk
f
34.1743 123.831 mo
32.8291 123.055 li
32.5215 122.876 32.0142 122.876 31.7075 123.055 cv
30.6523 123.668 li
30.3442 123.846 30.3481 124.142 30.6563 124.318 cv
31.9985 125.092 li
32.3081 125.274 32.8154 125.274 33.1211 125.093 cv
34.1782 124.481 li
34.4854 124.304 34.4824 124.008 34.1743 123.831 cv
.579889 .495216 .490028 .168276 cmyk
f
37.6152 125.776 mo
36.0015 124.843 li
35.6323 124.629 35.0225 124.629 34.6543 124.843 cv
33.3862 125.579 li
33.0186 125.793 33.0215 126.147 33.3911 126.357 cv
35.0044 127.285 li
35.3765 127.504 35.9844 127.504 36.3516 127.289 cv
37.6206 126.555 li
37.9902 126.34 37.9863 125.986 37.6152 125.776 cv
.67718 .608667 .59826 .476326 cmyk
f
37.2222 125.541 mo
35.8784 124.766 li
35.5693 124.586 35.0625 124.586 34.7554 124.766 cv
33.7012 125.378 li
33.3945 125.557 33.3975 125.852 33.7056 126.028 cv
35.0474 126.802 li
35.3584 126.984 35.8633 126.984 36.1704 126.805 cv
37.2275 126.193 li
37.5332 126.013 37.5303 125.718 37.2222 125.541 cv
.579889 .495216 .490028 .168276 cmyk
f
40.6655 127.484 mo
39.0503 126.553 li
38.6802 126.339 38.0713 126.339 37.7046 126.553 cv
36.4355 127.289 li
36.0674 127.503 36.0703 127.856 36.4395 128.069 cv
38.0522 128.996 li
38.4243 129.215 39.0332 129.215 39.4004 129.001 cv
40.6694 128.265 li
41.0386 128.053 41.0356 127.698 40.6655 127.484 cv
.67718 .608667 .59826 .476326 cmyk
f
40.2705 127.252 mo
38.9263 126.475 li
38.6182 126.297 38.1113 126.297 37.8042 126.475 cv
36.7495 127.087 li
36.4424 127.266 36.4453 127.561 36.7524 127.738 cv
38.0952 128.513 li
38.4053 128.696 38.9116 128.696 39.2173 128.514 cv
40.2744 127.901 li
40.5815 127.723 40.5806 127.427 40.2705 127.252 cv
.579889 .495216 .490028 .168276 cmyk
f
43.5654 129.121 mo
41.9502 128.189 li
41.5806 127.976 40.9712 127.976 40.6025 128.189 cv
39.3354 128.924 li
38.9673 129.139 38.9702 129.493 39.3394 129.704 cv
40.9526 130.633 li
41.3232 130.853 41.9346 130.853 42.2993 130.636 cv
43.5684 129.901 li
43.9385 129.688 43.9355 129.334 43.5654 129.121 cv
.67718 .608667 .59826 .476326 cmyk
f
43.1714 128.889 mo
41.8286 128.111 li
41.5195 127.934 41.0122 127.934 40.7056 128.111 cv
39.6504 128.724 li
39.3423 128.904 39.3462 129.199 39.6543 129.375 cv
40.9966 130.148 li
41.3076 130.33 41.8125 130.33 42.1187 130.149 cv
43.1753 129.537 li
43.4814 129.359 43.4795 129.063 43.1714 128.889 cv
.579889 .495216 .490028 .168276 cmyk
f
46.6885 130.83 mo
45.0732 129.899 li
44.7036 129.686 44.0942 129.686 43.7256 129.899 cv
42.4585 130.634 li
42.0903 130.848 42.0933 131.2 42.4644 131.415 cv
44.0776 132.342 li
44.4492 132.561 45.0576 132.561 45.4253 132.345 cv
46.6943 131.609 li
47.0615 131.396 47.0596 131.045 46.6885 130.83 cv
.67718 .608667 .59826 .476326 cmyk
f
46.2935 130.598 mo
44.9507 129.82 li
44.6416 129.641 44.1353 129.641 43.8286 129.82 cv
42.7725 130.432 li
42.4653 130.613 42.4683 130.906 42.7773 131.081 cv
44.1196 131.856 li
44.4297 132.038 44.9346 132.038 45.2427 131.857 cv
46.2993 131.246 li
46.6045 131.068 46.6025 130.772 46.2935 130.598 cv
.579889 .495216 .490028 .168276 cmyk
f
49.8115 132.465 mo
48.1963 131.535 li
47.8276 131.321 47.2173 131.321 46.8486 131.535 cv
45.5815 132.27 li
45.2124 132.485 45.2163 132.838 45.5864 133.051 cv
47.1997 133.977 li
47.5703 134.197 48.1807 134.197 48.5474 133.982 cv
49.8154 133.246 li
50.1846 133.032 50.1826 132.679 49.8115 132.465 cv
.67718 .608667 .59826 .476326 cmyk
f
49.4175 132.231 mo
48.0723 131.455 li
47.7656 131.277 47.2573 131.277 46.9507 131.455 cv
45.8945 132.068 li
45.5874 132.249 45.5903 132.543 45.8994 132.718 cv
47.2402 133.493 li
47.5522 133.676 48.0576 133.676 48.3633 133.495 cv
49.4204 132.882 li
49.7266 132.705 49.7246 132.41 49.4175 132.231 cv
.579889 .495216 .490028 .168276 cmyk
f
53.0083 134.177 mo
51.3945 133.246 li
51.0244 133.032 50.4146 133.032 50.0464 133.246 cv
48.7793 133.982 li
48.4116 134.195 48.4146 134.549 48.7856 134.762 cv
50.3975 135.689 li
50.7686 135.908 51.3774 135.908 51.7466 135.692 cv
53.0137 134.956 li
53.3813 134.742 53.3784 134.389 53.0083 134.177 cv
.67718 .608667 .59826 .476326 cmyk
f
52.6133 133.942 mo
51.2695 133.166 li
50.9604 132.988 50.4556 132.988 50.1475 133.166 cv
49.0913 133.779 li
48.7847 133.958 48.7876 134.252 49.0967 134.43 cv
50.4385 135.204 li
50.7476 135.385 51.2554 135.385 51.5615 135.206 cv
52.6187 134.592 li
52.9243 134.416 52.9224 134.121 52.6133 133.942 cv
.579889 .495216 .490028 .168276 cmyk
f
56.0566 135.961 mo
54.4404 135.03 li
54.0728 134.817 53.4614 134.817 53.0947 135.03 cv
51.8257 135.766 li
51.4585 135.981 51.4614 136.333 51.8306 136.546 cv
53.4453 137.474 li
53.8164 137.693 54.4243 137.693 54.7925 137.477 cv
56.0615 136.74 li
56.4307 136.526 56.4268 136.174 56.0566 135.961 cv
.67718 .608667 .59826 .476326 cmyk
f
55.6616 135.729 mo
54.3184 134.952 li
54.0107 134.774 53.5024 134.774 53.1963 134.952 cv
52.1406 135.566 li
51.8325 135.744 51.8364 136.038 52.1445 136.216 cv
53.4863 136.988 li
53.7993 137.17 54.3037 137.17 54.6104 136.993 cv
55.6675 136.378 li
55.9736 136.201 55.9707 135.905 55.6616 135.729 cv
.579889 .495216 .490028 .168276 cmyk
f
59.2544 137.672 mo
57.6396 136.74 li
57.2725 136.526 56.6616 136.526 56.2915 136.74 cv
55.0254 137.477 li
54.6567 137.692 54.6606 138.043 55.0317 138.259 cv
56.6426 139.184 li
57.0137 139.403 57.6235 139.403 57.9917 139.19 cv
59.2598 138.45 li
59.6265 138.238 59.6255 137.886 59.2544 137.672 cv
.67718 .608667 .59826 .476326 cmyk
f
58.8584 137.439 mo
57.5156 136.661 li
57.2065 136.485 56.7007 136.485 56.3936 136.661 cv
55.3374 137.276 li
55.0308 137.454 55.0337 137.75 55.3428 137.925 cv
56.6855 138.7 li
56.9937 138.881 57.5005 138.881 57.8066 138.703 cv
58.8638 138.088 li
59.1704 137.911 59.1685 137.615 58.8584 137.439 cv
.579889 .495216 .490028 .168276 cmyk
f
62.6006 139.456 mo
60.9888 138.526 li
60.6167 138.312 60.0078 138.312 59.6396 138.526 cv
58.3706 139.262 li
58.0024 139.477 58.0044 139.827 58.3755 140.042 cv
59.9878 140.968 li
60.3608 141.188 60.9697 141.188 61.3374 140.972 cv
62.6035 140.237 li
62.9746 140.025 62.9688 139.671 62.6006 139.456 cv
.67718 .608667 .59826 .476326 cmyk
f
62.2065 139.225 mo
60.8618 138.448 li
60.5508 138.27 60.0454 138.27 59.7397 138.448 cv
58.6865 139.061 li
58.3755 139.238 58.3794 139.534 58.6885 139.71 cv
60.0308 140.485 li
60.3408 140.668 60.8477 140.668 61.1528 140.487 cv
62.2095 139.874 li
62.5176 139.696 62.5146 139.399 62.2065 139.225 cv
.579889 .495216 .490028 .168276 cmyk
f
37.6543 121.704 mo
36.0405 120.773 li
35.6704 120.559 35.0615 120.559 34.6924 120.773 cv
33.4243 121.509 li
33.0562 121.724 33.0596 122.076 33.4292 122.288 cv
35.0435 123.217 li
35.4146 123.436 36.0234 123.436 36.3901 123.22 cv
37.6592 122.484 li
38.0283 122.27 38.0254 121.917 37.6543 121.704 cv
.67718 .608667 .59826 .476326 cmyk
f
37.2603 121.472 mo
35.9165 120.694 li
35.6074 120.518 35.1006 120.518 34.7935 120.694 cv
33.7383 121.308 li
33.4312 121.487 33.4346 121.782 33.7422 121.958 cv
35.0854 122.733 li
35.3945 122.912 35.9004 122.912 36.2075 122.734 cv
37.2632 122.121 li
37.5713 121.944 37.5693 121.648 37.2603 121.472 cv
.579889 .495216 .490028 .168276 cmyk
f
40.7036 123.414 mo
39.0884 122.482 li
38.7183 122.268 38.1094 122.268 37.7402 122.482 cv
36.4731 123.219 li
36.1055 123.435 36.1084 123.787 36.4785 123.999 cv
38.0913 124.925 li
38.4634 125.145 39.0713 125.145 39.4395 124.931 cv
40.7075 124.194 li
41.0762 123.979 41.0732 123.627 40.7036 123.414 cv
.67718 .608667 .59826 .476326 cmyk
f
40.3096 123.181 mo
38.9653 122.404 li
38.6563 122.228 38.1504 122.228 37.8433 122.404 cv
36.7876 123.016 li
36.4795 123.198 36.4834 123.492 36.7915 123.668 cv
38.1343 124.442 li
38.4434 124.623 38.9492 124.623 39.2563 124.445 cv
40.3135 123.831 li
40.6196 123.652 40.6162 123.356 40.3096 123.181 cv
.579889 .495216 .490028 .168276 cmyk
f
43.7524 125.124 mo
42.1372 124.192 li
41.7666 123.979 41.1582 123.979 40.7896 124.192 cv
39.5215 124.931 li
39.1533 125.144 39.1563 125.496 39.5273 125.709 cv
41.1406 126.638 li
41.5112 126.856 42.1206 126.856 42.4873 126.641 cv
43.7563 125.904 li
44.1255 125.69 44.1216 125.337 43.7524 125.124 cv
.67718 .608667 .59826 .476326 cmyk
f
43.3574 124.892 mo
42.0146 124.117 li
41.7056 123.937 41.1982 123.937 40.8916 124.117 cv
39.8354 124.729 li
39.5283 124.907 39.5313 125.201 39.8394 125.378 cv
41.1826 126.153 li
41.4912 126.334 41.9985 126.334 42.3032 126.156 cv
43.3613 125.542 li
43.6675 125.362 43.6665 125.067 43.3574 124.892 cv
.579889 .495216 .490028 .168276 cmyk
f
46.6514 126.761 mo
45.0376 125.829 li
44.6675 125.616 44.0586 125.616 43.6904 125.829 cv
42.4214 126.564 li
42.0532 126.779 42.0566 127.132 42.4282 127.346 cv
44.0405 128.272 li
44.4126 128.491 45.0205 128.491 45.3877 128.274 cv
46.6563 127.54 li
47.0254 127.327 47.0225 126.974 46.6514 126.761 cv
.67718 .608667 .59826 .476326 cmyk
f
46.2573 126.527 mo
44.9136 125.751 li
44.6045 125.572 44.0977 125.572 43.7915 125.751 cv
42.7354 126.364 li
42.4282 126.541 42.4316 126.836 42.7393 127.015 cv
44.0815 127.786 li
44.3916 127.969 44.8975 127.969 45.2036 127.79 cv
46.2612 127.177 li
46.5684 126.999 46.5664 126.704 46.2573 126.527 cv
.579889 .495216 .490028 .168276 cmyk
f
49.7754 128.47 mo
48.1606 127.539 li
47.7905 127.324 47.1816 127.324 46.8135 127.539 cv
45.5464 128.273 li
45.1772 128.487 45.1807 128.84 45.5503 129.055 cv
47.1626 129.983 li
47.5347 130.202 48.1436 130.202 48.5103 129.987 cv
49.7803 129.25 li
50.1484 129.037 50.1445 128.684 49.7754 128.47 cv
.67718 .608667 .59826 .476326 cmyk
f
49.3813 128.237 mo
48.0356 127.461 li
47.7285 127.282 47.2207 127.282 46.9146 127.461 cv
45.8594 128.072 li
45.5513 128.251 45.5557 128.547 45.8623 128.722 cv
47.2056 129.498 li
47.5156 129.68 48.0215 129.68 48.3276 129.499 cv
49.3843 128.887 li
49.6904 128.709 49.6885 128.413 49.3813 128.237 cv
.579889 .495216 .490028 .168276 cmyk
f
52.8975 130.105 mo
51.2827 129.174 li
50.9126 128.959 50.3037 128.959 49.9355 129.174 cv
48.6685 129.909 li
48.2993 130.124 48.3022 130.476 48.6724 130.69 cv
50.2856 131.618 li
50.6577 131.837 51.2666 131.837 51.6333 131.622 cv
52.9014 130.885 li
53.2715 130.672 53.2676 130.318 52.8975 130.105 cv
.67718 .608667 .59826 .476326 cmyk
f
52.5034 129.872 mo
51.1606 129.095 li
50.8496 128.916 50.3447 128.916 50.0366 129.095 cv
48.9805 129.709 li
48.6743 129.886 48.6772 130.182 48.9854 130.358 cv
50.3276 131.133 li
50.6377 131.315 51.1436 131.315 51.4507 131.133 cv
52.5073 130.521 li
52.8154 130.345 52.8125 130.047 52.5034 129.872 cv
.579889 .495216 .490028 .168276 cmyk
f
56.0957 131.815 mo
54.4805 130.885 li
54.1113 130.671 53.5015 130.671 53.1333 130.885 cv
51.8647 131.622 li
51.4976 131.833 51.5005 132.187 51.8716 132.402 cv
53.4834 133.33 li
53.8545 133.547 54.4634 133.547 54.8296 133.332 cv
56.1006 132.596 li
56.4678 132.385 56.4653 132.031 56.0957 131.815 cv
.67718 .608667 .59826 .476326 cmyk
f
55.7017 131.585 mo
54.3545 130.81 li
54.0474 130.626 53.5396 130.626 53.2344 130.81 cv
52.1777 131.421 li
51.8716 131.597 51.8755 131.893 52.1826 132.068 cv
53.5264 132.845 li
53.8364 133.025 54.3394 133.025 54.6465 132.845 cv
55.7046 132.231 li
56.0107 132.055 56.0073 131.761 55.7017 131.585 cv
.579889 .495216 .490028 .168276 cmyk
f
59.1445 133.601 mo
57.5298 132.669 li
57.1597 132.458 56.5508 132.458 56.1836 132.669 cv
54.9146 133.408 li
54.5454 133.618 54.5493 133.972 54.9185 134.188 cv
56.5317 135.115 li
56.9038 135.334 57.5137 135.334 57.8794 135.119 cv
59.1494 134.38 li
59.5176 134.167 59.5137 133.815 59.1445 133.601 cv
.67718 .608667 .59826 .476326 cmyk
f
58.7505 133.368 mo
57.4067 132.592 li
57.0957 132.413 56.5894 132.413 56.2837 132.592 cv
55.2275 133.206 li
54.9204 133.381 54.9224 133.678 55.2314 133.854 cv
56.5757 134.63 li
56.8848 134.81 57.3906 134.81 57.6978 134.63 cv
58.7534 134.016 li
59.0625 133.841 59.0586 133.546 58.7505 133.368 cv
.579889 .495216 .490028 .168276 cmyk
f
62.3418 135.311 mo
60.7275 134.38 li
60.3574 134.167 59.7476 134.167 59.3794 134.38 cv
58.1128 135.119 li
57.7437 135.33 57.7476 135.683 58.1157 135.898 cv
59.7285 136.826 li
60.0996 137.046 60.7085 137.046 61.0747 136.831 cv
62.3457 136.09 li
62.7148 135.879 62.7085 135.525 62.3418 135.311 cv
.67718 .608667 .59826 .476326 cmyk
f
61.9458 135.079 mo
60.6006 134.303 li
60.2944 134.122 59.7876 134.122 59.4805 134.303 cv
58.4248 134.916 li
58.1167 135.092 58.1206 135.388 58.4277 135.565 cv
59.7725 136.341 li
60.0815 136.521 60.5864 136.521 60.8906 136.341 cv
61.9517 135.728 li
62.2578 135.553 62.2524 135.256 61.9458 135.079 cv
.579889 .495216 .490028 .168276 cmyk
f
65.6865 137.096 mo
64.0728 136.164 li
63.7026 135.952 63.0938 135.952 62.7236 136.164 cv
61.4575 136.902 li
61.0898 137.115 61.0928 137.466 61.4624 137.684 cv
63.0757 138.611 li
63.4468 138.831 64.0557 138.831 64.4248 138.614 cv
65.6904 137.875 li
66.0596 137.664 66.0576 137.312 65.6865 137.096 cv
.67718 .608667 .59826 .476326 cmyk
f
65.2935 136.865 mo
63.9478 136.089 li
63.6396 135.908 63.1318 135.908 62.8276 136.089 cv
61.7695 136.701 li
61.4634 136.876 61.4688 137.171 61.7744 137.349 cv
63.1177 138.127 li
63.4268 138.305 63.9336 138.305 64.2388 138.127 cv
65.2959 137.513 li
65.6035 137.337 65.6006 137.042 65.2935 136.865 cv
.579889 .495216 .490028 .168276 cmyk
f
30.6265 124.733 mo
29.0122 123.802 li
28.6421 123.588 28.0332 123.588 27.6641 123.802 cv
26.3975 124.536 li
26.0293 124.75 26.0322 125.105 26.4023 125.317 cv
28.0142 126.244 li
28.3862 126.464 28.9951 126.464 29.3623 126.247 cv
30.6313 125.513 li
31.0005 125.301 30.9985 124.945 30.6265 124.733 cv
.67718 .608667 .59826 .476326 cmyk
f
30.2344 124.5 mo
28.8882 123.724 li
28.5801 123.544 28.0732 123.544 27.7671 123.724 cv
26.7114 124.338 li
26.4043 124.515 26.4072 124.81 26.7163 124.987 cv
28.0581 125.76 li
28.3691 125.942 28.8745 125.942 29.1812 125.763 cv
30.2383 125.149 li
30.5444 124.973 30.5425 124.678 30.2344 124.5 cv
.579889 .495216 .490028 .168276 cmyk
f
33.8994 126.443 mo
32.2842 125.511 li
31.9146 125.299 31.3052 125.299 30.9375 125.511 cv
29.6694 126.247 li
29.3003 126.461 29.3042 126.814 29.6743 127.029 cv
31.2871 127.955 li
31.6592 128.174 32.2671 128.174 32.6353 127.959 cv
33.9043 127.224 li
34.2725 127.011 34.2695 126.657 33.8994 126.443 cv
.67718 .608667 .59826 .476326 cmyk
f
33.5063 126.211 mo
32.1611 125.435 li
31.8535 125.256 31.3462 125.256 31.0396 125.435 cv
29.9834 126.047 li
29.6763 126.226 29.6792 126.522 29.9873 126.696 cv
31.3301 127.472 li
31.6392 127.654 32.1465 127.654 32.4521 127.473 cv
33.5103 126.859 li
33.8164 126.684 33.8145 126.387 33.5063 126.211 cv
.579889 .495216 .490028 .168276 cmyk
f
37.0225 128.151 mo
35.4072 127.22 li
35.0386 127.008 34.4292 127.008 34.0605 127.22 cv
32.7935 127.958 li
32.4253 128.171 32.4272 128.523 32.7974 128.737 cv
34.4102 129.665 li
34.7813 129.884 35.3901 129.884 35.7573 129.668 cv
37.0273 128.931 li
37.3965 128.719 37.3926 128.365 37.0225 128.151 cv
.67718 .608667 .59826 .476326 cmyk
f
36.6284 127.92 mo
35.2832 127.144 li
34.9756 126.964 34.4683 126.964 34.1611 127.144 cv
33.1064 127.756 li
32.7993 127.935 32.8022 128.23 33.1094 128.405 cv
34.4521 129.18 li
34.7632 129.362 35.2686 129.362 35.5742 129.184 cv
36.6313 128.568 li
36.9385 128.392 36.9365 128.098 36.6284 127.92 cv
.579889 .495216 .490028 .168276 cmyk
f
40.1455 129.862 mo
38.5313 128.93 li
38.1592 128.716 37.5513 128.716 37.1836 128.93 cv
35.9165 129.666 li
35.5483 129.881 35.5513 130.234 35.9214 130.447 cv
37.5342 131.373 li
37.9063 131.593 38.5142 131.593 38.8813 131.376 cv
40.1504 130.64 li
40.5186 130.429 40.5156 130.075 40.1455 129.862 cv
.67718 .608667 .59826 .476326 cmyk
f
39.7505 129.631 mo
38.4063 128.853 li
38.0981 128.675 37.5903 128.675 37.2842 128.853 cv
36.2285 129.466 li
35.9204 129.645 35.9243 129.94 36.2324 130.115 cv
37.5742 130.891 li
37.8853 131.073 38.3916 131.073 38.6963 130.892 cv
39.7544 130.279 li
40.0615 130.103 40.0596 129.807 39.7505 129.631 cv
.579889 .495216 .490028 .168276 cmyk
f
43.2676 131.571 mo
41.6533 130.639 li
41.2832 130.426 40.6743 130.426 40.3052 130.639 cv
39.0386 131.374 li
38.6704 131.589 38.6733 131.941 39.0425 132.156 cv
40.6553 133.084 li
41.0273 133.302 41.6353 133.302 42.0034 133.087 cv
43.2725 132.351 li
43.6406 132.138 43.6372 131.785 43.2676 131.571 cv
.67718 .608667 .59826 .476326 cmyk
f
42.8745 131.339 mo
41.5293 130.564 li
41.2212 130.384 40.7144 130.384 40.4072 130.564 cv
39.3516 131.176 li
39.0444 131.353 39.0474 131.649 39.3555 131.825 cv
40.6973 132.599 li
41.0073 132.783 41.5132 132.783 41.8193 132.601 cv
42.8755 131.987 li
43.1846 131.811 43.1816 131.513 42.8745 131.339 cv
.579889 .495216 .490028 .168276 cmyk
f
46.3906 133.28 mo
44.7754 132.349 li
44.4063 132.136 43.7964 132.136 43.4282 132.349 cv
42.1616 133.085 li
41.7935 133.297 41.7964 133.65 42.1655 133.864 cv
43.7783 134.792 li
44.1514 135.012 44.7593 135.012 45.1274 134.795 cv
46.3965 134.061 li
46.7637 133.848 46.7603 133.494 46.3906 133.28 cv
.67718 .608667 .59826 .476326 cmyk
f
45.9966 133.048 mo
44.6523 132.271 li
44.3433 132.093 43.8364 132.093 43.5303 132.271 cv
42.4746 132.885 li
42.1675 133.064 42.1704 133.359 42.4775 133.534 cv
43.8213 134.308 li
44.1313 134.49 44.6362 134.49 44.9434 134.309 cv
46.0005 133.697 li
46.3066 133.519 46.3057 133.225 45.9966 133.048 cv
.579889 .495216 .490028 .168276 cmyk
f
49.5137 134.991 mo
47.8984 134.059 li
47.5283 133.845 46.9204 133.845 46.5503 134.059 cv
45.2822 134.795 li
44.9155 135.009 44.9175 135.361 45.2876 135.573 cv
46.9014 136.503 li
47.2734 136.721 47.8823 136.721 48.2485 136.505 cv
49.5186 135.77 li
49.8857 135.556 49.8823 135.203 49.5137 134.991 cv
.67718 .608667 .59826 .476326 cmyk
f
49.1187 134.759 mo
47.7754 133.981 li
47.4663 133.802 46.9604 133.802 46.6533 133.981 cv
45.5977 134.593 li
45.2905 134.773 45.2925 135.066 45.6025 135.243 cv
46.9443 136.018 li
47.2544 136.201 47.7603 136.201 48.0664 136.019 cv
49.1245 135.407 li
49.4307 135.229 49.4277 134.933 49.1187 134.759 cv
.579889 .495216 .490028 .168276 cmyk
f
52.6357 136.7 mo
51.0225 135.769 li
50.6514 135.554 50.0415 135.554 49.6733 135.769 cv
48.4063 136.504 li
48.0386 136.717 48.0415 137.07 48.4126 137.284 cv
50.0244 138.211 li
50.3955 138.43 51.0034 138.43 51.3726 138.215 cv
52.6406 137.48 li
53.0098 137.268 53.0054 136.914 52.6357 136.7 cv
.67718 .608667 .59826 .476326 cmyk
f
52.2427 136.468 mo
50.8984 135.69 li
50.5894 135.513 50.0825 135.513 49.7754 135.69 cv
48.7207 136.303 li
48.4136 136.48 48.4165 136.776 48.7236 136.953 cv
50.0654 137.728 li
50.3755 137.91 50.8823 137.91 51.1885 137.728 cv
52.2476 137.116 li
52.5527 136.938 52.5503 136.643 52.2427 136.468 cv
.579889 .495216 .490028 .168276 cmyk
f
55.7598 138.409 mo
54.1445 137.477 li
53.7754 137.265 53.1655 137.265 52.7944 137.477 cv
51.5283 138.213 li
51.1616 138.428 51.1636 138.78 51.5347 138.993 cv
53.1465 139.922 li
53.5186 140.141 54.1265 140.141 54.4946 139.926 cv
55.7637 139.19 li
56.1323 138.976 56.1284 138.623 55.7598 138.409 cv
.67718 .608667 .59826 .476326 cmyk
f
55.3638 138.175 mo
54.0205 137.4 li
53.7124 137.221 53.2046 137.221 52.8975 137.4 cv
51.8413 138.011 li
51.5347 138.191 51.5376 138.486 51.8457 138.662 cv
53.1895 139.438 li
53.4995 139.619 54.0044 139.619 54.3125 139.438 cv
55.3687 138.825 li
55.6758 138.647 55.6733 138.353 55.3638 138.175 cv
.579889 .495216 .490028 .168276 cmyk
f
58.8818 140.116 mo
57.2676 139.189 li
56.8984 138.974 56.2886 138.974 55.9185 139.189 cv
54.6523 139.924 li
54.2837 140.137 54.2866 140.489 54.6567 140.703 cv
56.2686 141.631 li
56.6396 141.849 57.2515 141.849 57.6187 141.634 cv
58.8838 140.897 li
59.2544 140.684 59.2524 140.33 58.8818 140.116 cv
.67718 .608667 .59826 .476326 cmyk
f
58.4868 139.884 mo
57.1426 139.109 li
56.8335 138.93 56.3276 138.93 56.0205 139.109 cv
54.9653 139.722 li
54.6567 139.899 54.6597 140.196 54.9688 140.372 cv
56.3135 141.147 li
56.6226 141.327 57.1274 141.327 57.4346 141.148 cv
58.4907 140.534 li
58.7988 140.357 58.7944 140.062 58.4868 139.884 cv
.579889 .495216 .490028 .168276 cmyk
f
62.2275 141.827 mo
60.6138 140.896 li
60.2417 140.682 59.6338 140.682 59.2656 140.896 cv
57.9976 141.633 li
57.6304 141.847 57.6338 142.2 58.0024 142.413 cv
59.6147 143.341 li
59.9878 143.56 60.5957 143.56 60.9634 143.345 cv
62.2314 142.608 li
62.6006 142.394 62.5977 142.04 62.2275 141.827 cv
.67718 .608667 .59826 .476326 cmyk
f
61.8345 141.595 mo
60.4878 140.818 li
60.1807 140.641 59.6738 140.641 59.3657 140.818 cv
58.3105 141.431 li
58.0024 141.609 58.0078 141.905 58.3154 142.083 cv
59.6577 142.857 li
59.9697 143.037 60.4746 143.037 60.7798 142.857 cv
61.8374 142.244 li
62.1426 142.067 62.1426 141.771 61.8345 141.595 cv
.579889 .495216 .490028 .168276 cmyk
f
30.1812 127.037 mo
28.5674 126.107 li
28.1963 125.894 27.5884 125.894 27.2192 126.107 cv
25.9521 126.843 li
25.5835 127.057 25.5864 127.409 25.9561 127.623 cv
27.5703 128.551 li
27.9424 128.77 28.5503 128.77 28.9175 128.556 cv
30.1865 127.818 li
30.5542 127.605 30.5503 127.252 30.1812 127.037 cv
.67718 .608667 .59826 .476326 cmyk
f
29.7861 126.806 mo
28.4434 126.029 li
28.1343 125.851 27.6274 125.851 27.3203 126.029 cv
26.2651 126.642 li
25.957 126.821 25.9614 127.116 26.269 127.291 cv
27.6113 128.067 li
27.9214 128.246 28.4272 128.246 28.7334 128.069 cv
29.7905 127.456 li
30.0972 127.277 30.0952 126.982 29.7861 126.806 cv
.579889 .495216 .490028 .168276 cmyk
f
33.2295 128.748 mo
31.6143 127.818 li
31.2451 127.605 30.6353 127.605 30.2661 127.818 cv
29.0005 128.557 li
28.6313 128.768 28.6343 129.121 29.0054 129.335 cv
30.6172 130.263 li
30.9883 130.483 31.5981 130.483 31.9653 130.267 cv
33.2344 129.529 li
33.6025 129.315 33.5991 128.964 33.2295 128.748 cv
.67718 .608667 .59826 .476326 cmyk
f
32.8354 128.516 mo
31.4902 127.74 li
31.1821 127.559 30.6753 127.559 30.3682 127.74 cv
29.3125 128.352 li
29.0054 128.53 29.0083 128.825 29.3154 129.001 cv
30.6582 129.778 li
30.9692 129.956 31.4751 129.956 31.7813 129.778 cv
32.8384 129.166 li
33.1455 128.988 33.1421 128.693 32.8354 128.516 cv
.579889 .495216 .490028 .168276 cmyk
f
36.2773 130.459 mo
34.6621 129.528 li
34.2925 129.314 33.6831 129.314 33.3145 129.528 cv
32.0464 130.263 li
31.6782 130.478 31.6812 130.831 32.0522 131.044 cv
33.6655 131.97 li
34.0361 132.191 34.6455 132.191 35.0132 131.975 cv
36.2822 131.239 li
36.6504 131.025 36.6475 130.672 36.2773 130.459 cv
.67718 .608667 .59826 .476326 cmyk
f
35.8833 130.225 mo
34.5386 129.449 li
34.2305 129.272 33.7231 129.272 33.4175 129.449 cv
32.3604 130.062 li
32.0532 130.243 32.0562 130.537 32.3652 130.712 cv
33.7075 131.487 li
34.0186 131.67 34.5234 131.67 34.8306 131.489 cv
35.8872 130.876 li
36.1943 130.699 36.1914 130.403 35.8833 130.225 cv
.579889 .495216 .490028 .168276 cmyk
f
39.1772 132.095 mo
37.5635 131.164 li
37.1934 130.95 36.5845 130.95 36.2153 131.164 cv
34.9482 131.9 li
34.5796 132.114 34.5835 132.465 34.9531 132.679 cv
36.5664 133.61 li
36.9375 133.827 37.5464 133.827 37.9146 133.612 cv
39.1826 132.873 li
39.5513 132.66 39.5474 132.308 39.1772 132.095 cv
.67718 .608667 .59826 .476326 cmyk
f
38.7842 131.862 mo
37.4395 131.084 li
37.1313 130.906 36.6245 130.906 36.3174 131.084 cv
35.2622 131.697 li
34.9556 131.876 34.9585 132.172 35.2676 132.346 cv
36.6094 133.122 li
36.9194 133.304 37.4253 133.304 37.7314 133.123 cv
38.7896 132.511 li
39.0942 132.333 39.0923 132.039 38.7842 131.862 cv
.579889 .495216 .490028 .168276 cmyk
f
42.3003 133.805 mo
40.6855 132.873 li
40.3154 132.659 39.7065 132.659 39.3384 132.873 cv
38.0713 133.61 li
37.7036 133.823 37.7056 134.176 38.0752 134.388 cv
39.6885 135.318 li
40.0605 135.536 40.6685 135.536 41.0356 135.32 cv
42.3042 134.584 li
42.6724 134.37 42.6714 134.017 42.3003 133.805 cv
.67718 .608667 .59826 .476326 cmyk
f
41.9063 133.571 mo
40.5625 132.794 li
40.2544 132.616 39.7476 132.616 39.4404 132.794 cv
38.3853 133.408 li
38.0786 133.585 38.0815 133.879 38.3892 134.058 cv
39.7324 134.83 li
40.0425 135.013 40.5493 135.013 40.8545 134.834 cv
41.9126 134.221 li
42.2173 134.043 42.2163 133.748 41.9063 133.571 cv
.579889 .495216 .490028 .168276 cmyk
f
45.4243 135.438 mo
43.8086 134.506 li
43.4385 134.293 42.8296 134.293 42.4595 134.506 cv
41.1934 135.245 li
40.8252 135.456 40.8286 135.81 41.1973 136.024 cv
42.8115 136.952 li
43.1826 137.169 43.7925 137.169 44.1582 136.954 cv
45.4272 136.219 li
45.7974 136.004 45.7935 135.652 45.4243 135.438 cv
.67718 .608667 .59826 .476326 cmyk
f
45.0283 135.207 mo
43.6855 134.431 li
43.3765 134.252 42.8696 134.252 42.5625 134.431 cv
41.5073 135.044 li
41.1992 135.22 41.2036 135.517 41.5112 135.692 cv
42.8545 136.469 li
43.1646 136.648 43.6704 136.648 43.9775 136.471 cv
45.0347 135.857 li
45.3403 135.679 45.3374 135.383 45.0283 135.207 cv
.579889 .495216 .490028 .168276 cmyk
f
48.6216 137.15 mo
47.0054 136.219 li
46.6353 136.003 46.0273 136.003 45.6572 136.219 cv
44.3906 136.954 li
44.0225 137.168 44.0254 137.522 44.3955 137.734 cv
46.0083 138.663 li
46.3804 138.881 46.9893 138.881 47.3564 138.666 cv
48.6245 137.931 li
48.9937 137.717 48.9917 137.363 48.6216 137.15 cv
.67718 .608667 .59826 .476326 cmyk
f
48.2266 136.918 mo
46.8823 136.141 li
46.5732 135.964 46.0674 135.964 45.7603 136.141 cv
44.7046 136.753 li
44.3965 136.933 44.3994 137.227 44.7095 137.405 cv
46.0513 138.179 li
46.3604 138.361 46.8677 138.361 47.1733 138.18 cv
48.2305 137.567 li
48.5376 137.39 48.5356 137.093 48.2266 136.918 cv
.579889 .495216 .490028 .168276 cmyk
f
51.6694 138.936 mo
50.0547 138.004 li
49.6855 137.79 49.0767 137.79 48.7075 138.004 cv
47.4404 138.741 li
47.0713 138.955 47.0757 139.307 47.4453 139.52 cv
49.0586 140.45 li
49.4307 140.668 50.0386 140.668 50.4053 140.452 cv
51.6743 139.716 li
52.0425 139.502 52.0405 139.149 51.6694 138.936 cv
.67718 .608667 .59826 .476326 cmyk
f
51.2744 138.704 mo
49.9307 137.926 li
49.6226 137.748 49.1157 137.748 48.8096 137.926 cv
47.7534 138.538 li
47.4453 138.718 47.4497 139.012 47.7583 139.19 cv
49.1006 139.963 li
49.4097 140.145 49.9165 140.145 50.2236 139.964 cv
51.2783 139.353 li
51.5864 139.174 51.5845 138.878 51.2744 138.704 cv
.579889 .495216 .490028 .168276 cmyk
f
54.8677 140.647 mo
53.2515 139.715 li
52.8823 139.501 52.2734 139.501 51.9043 139.715 cv
50.6357 140.451 li
50.2686 140.664 50.2725 141.017 50.6426 141.23 cv
52.2554 142.159 li
52.6265 142.377 53.2363 142.377 53.6035 142.161 cv
54.8716 141.425 li
55.2407 141.213 55.2388 140.86 54.8677 140.647 cv
.67718 .608667 .59826 .476326 cmyk
f
54.4736 140.415 mo
53.1284 139.637 li
52.8203 139.458 52.3135 139.458 52.0073 139.637 cv
50.9526 140.25 li
50.6445 140.427 50.6475 140.723 50.9565 140.899 cv
52.2974 141.674 li
52.6074 141.855 53.1138 141.855 53.4204 141.676 cv
54.4766 141.064 li
54.7837 140.885 54.7808 140.59 54.4736 140.415 cv
.579889 .495216 .490028 .168276 cmyk
f
58.2134 142.431 mo
56.6006 141.502 li
56.2285 141.287 55.6216 141.287 55.2505 141.502 cv
53.9824 142.237 li
53.6147 142.449 53.6187 142.804 53.9888 143.017 cv
55.5986 143.944 li
55.9707 144.164 56.5815 144.164 56.9487 143.947 cv
58.2168 143.212 li
58.5864 142.997 58.5835 142.644 58.2134 142.431 cv
.67718 .608667 .59826 .476326 cmyk
f
57.8184 142.199 mo
56.4736 141.421 li
56.1646 141.243 55.6577 141.243 55.3525 141.421 cv
54.2954 142.034 li
53.9888 142.214 53.9917 142.509 54.2993 142.684 cv
55.6436 143.459 li
55.9536 143.641 56.4595 143.641 56.7666 143.461 cv
57.8218 142.848 li
58.1294 142.671 58.1274 142.376 57.8184 142.199 cv
.579889 .495216 .490028 .168276 cmyk
f
25.7944 127.633 mo
24.1792 126.703 li
23.8091 126.487 23.2002 126.487 22.832 126.703 cv
21.5645 127.439 li
21.1963 127.654 21.1992 128.004 21.5684 128.217 cv
23.1812 129.145 li
23.5532 129.364 24.1611 129.364 24.5293 129.15 cv
25.7983 128.415 li
26.1675 128.2 26.1641 127.845 25.7944 127.633 cv
.67718 .608667 .59826 .476326 cmyk
f
25.4004 127.399 mo
24.0552 126.623 li
23.7471 126.447 23.2402 126.447 22.9331 126.623 cv
21.8784 127.235 li
21.5703 127.416 21.5742 127.711 21.8813 127.887 cv
23.2251 128.661 li
23.5352 128.841 24.04 128.841 24.3472 128.664 cv
25.4043 128.052 li
25.7104 127.871 25.7085 127.576 25.4004 127.399 cv
.579889 .495216 .490028 .168276 cmyk
f
29.0654 129.342 mo
27.4502 128.412 li
27.0801 128.2 26.4712 128.2 26.103 128.412 cv
24.8354 129.15 li
24.4663 129.362 24.4702 129.714 24.8403 129.928 cv
26.4531 130.856 li
26.8242 131.076 27.4331 131.076 27.8003 130.861 cv
29.0693 130.124 li
29.4395 129.909 29.4365 129.556 29.0654 129.342 cv
.67718 .608667 .59826 .476326 cmyk
f
28.6724 129.109 mo
27.3271 128.334 li
27.019 128.155 26.5122 128.155 26.2051 128.334 cv
25.1494 128.946 li
24.8423 129.126 24.8452 129.42 25.1543 129.596 cv
26.4971 130.371 li
26.8071 130.551 27.3125 130.551 27.6191 130.371 cv
28.6763 129.76 li
28.9824 129.581 28.9805 129.287 28.6724 129.109 cv
.579889 .495216 .490028 .168276 cmyk
f
32.1885 131.052 mo
30.5732 130.123 li
30.2031 129.908 29.5942 129.908 29.2261 130.123 cv
27.9595 130.859 li
27.5903 131.073 27.5942 131.424 27.9644 131.637 cv
29.5771 132.565 li
29.9482 132.785 30.5571 132.785 30.9243 132.57 cv
32.1934 131.833 li
32.5625 131.619 32.5591 131.265 32.1885 131.052 cv
.67718 .608667 .59826 .476326 cmyk
f
31.7954 130.82 mo
30.4492 130.042 li
30.1411 129.865 29.6353 129.865 29.3281 130.042 cv
28.2725 130.655 li
27.9644 130.836 27.9673 131.13 28.2754 131.306 cv
29.6182 132.08 li
29.9282 132.263 30.4341 132.263 30.7402 132.082 cv
31.7983 131.469 li
32.1055 131.291 32.1035 130.997 31.7954 130.82 cv
.579889 .495216 .490028 .168276 cmyk
f
35.3125 132.762 mo
33.6973 131.831 li
33.3262 131.617 32.7183 131.617 32.3491 131.831 cv
31.0825 132.567 li
30.7134 132.783 30.7173 133.134 31.0864 133.347 cv
32.7002 134.276 li
33.0723 134.494 33.6802 134.494 34.0474 134.28 cv
35.3164 133.542 li
35.6846 133.329 35.6812 132.975 35.3125 132.762 cv
.67718 .608667 .59826 .476326 cmyk
f
34.9175 132.529 mo
33.5732 131.753 li
33.2642 131.574 32.7583 131.574 32.4512 131.753 cv
31.3965 132.365 li
31.0894 132.544 31.0923 132.84 31.3994 133.016 cv
32.7422 133.79 li
33.0522 133.972 33.5581 133.972 33.8643 133.792 cv
34.9214 133.179 li
35.2285 133.001 35.2266 132.705 34.9175 132.529 cv
.579889 .495216 .490028 .168276 cmyk
f
38.4346 134.471 mo
36.8203 133.541 li
36.4502 133.327 35.8403 133.327 35.4722 133.541 cv
34.2056 134.277 li
33.8374 134.49 33.8403 134.843 34.2095 135.057 cv
35.8223 135.984 li
36.1943 136.204 36.8032 136.204 37.1704 135.988 cv
38.4395 135.253 li
38.8076 135.039 38.8032 134.685 38.4346 134.471 cv
.67718 .608667 .59826 .476326 cmyk
f
38.0405 134.238 mo
36.6963 133.462 li
36.3882 133.283 35.8813 133.283 35.5742 133.462 cv
34.5195 134.075 li
34.2114 134.252 34.2153 134.55 34.5234 134.725 cv
35.8662 135.5 li
36.1763 135.681 36.6821 135.681 36.9883 135.502 cv
38.0444 134.889 li
38.3506 134.711 38.3481 134.416 38.0405 134.238 cv
.579889 .495216 .490028 .168276 cmyk
f
41.5576 136.181 mo
39.9424 135.25 li
39.5723 135.037 38.9634 135.037 38.5942 135.25 cv
37.3271 135.987 li
36.9585 136.201 36.9624 136.553 37.3315 136.766 cv
38.9443 137.695 li
39.3164 137.913 39.9253 137.913 40.2935 137.698 cv
41.5615 136.961 li
41.9307 136.747 41.9263 136.394 41.5576 136.181 cv
.67718 .608667 .59826 .476326 cmyk
f
41.1636 135.948 mo
39.8184 135.17 li
39.5093 134.994 39.0034 134.994 38.6963 135.17 cv
37.6401 135.783 li
37.3335 135.964 37.3354 136.259 37.6445 136.435 cv
38.9863 137.209 li
39.2974 137.39 39.8022 137.39 40.1094 137.21 cv
41.1665 136.598 li
41.4746 136.42 41.4702 136.126 41.1636 135.948 cv
.579889 .495216 .490028 .168276 cmyk
f
44.6797 137.89 mo
43.0645 136.96 li
42.6953 136.746 42.0864 136.746 41.7183 136.96 cv
40.4502 137.696 li
40.0825 137.91 40.0854 138.262 40.4565 138.476 cv
42.0684 139.403 li
42.4414 139.622 43.0503 139.622 43.4165 139.406 cv
44.6855 138.668 li
45.0522 138.457 45.0493 138.104 44.6797 137.89 cv
.67718 .608667 .59826 .476326 cmyk
f
44.2856 137.658 mo
42.9404 136.881 li
42.6323 136.702 42.1255 136.702 41.8193 136.881 cv
40.7632 137.494 li
40.4565 137.672 40.4595 137.967 40.7676 138.145 cv
42.1104 138.918 li
42.4204 139.099 42.9263 139.099 43.2324 138.921 cv
44.2896 138.307 li
44.5967 138.13 44.5942 137.836 44.2856 137.658 cv
.579889 .495216 .490028 .168276 cmyk
f
47.8022 139.6 mo
46.1875 138.668 li
45.8174 138.453 45.2095 138.453 44.8403 138.668 cv
43.5732 139.405 li
43.2056 139.619 43.2085 139.972 43.5796 140.186 cv
45.1924 141.114 li
45.5635 141.332 46.1733 141.332 46.5396 141.117 cv
47.8086 140.381 li
48.1753 140.167 48.1733 139.813 47.8022 139.6 cv
.67718 .608667 .59826 .476326 cmyk
f
47.4087 139.367 mo
46.0645 138.591 li
45.7554 138.413 45.2485 138.413 44.9424 138.591 cv
43.8872 139.203 li
43.5806 139.382 43.5825 139.678 43.8906 139.853 cv
45.2334 140.629 li
45.5435 140.81 46.0493 140.81 46.3555 140.63 cv
47.4136 140.017 li
47.7183 139.84 47.7163 139.544 47.4087 139.367 cv
.579889 .495216 .490028 .168276 cmyk
f
50.9253 141.309 mo
49.3096 140.377 li
48.9395 140.165 48.3306 140.165 47.9614 140.377 cv
46.6943 141.114 li
46.3276 141.327 46.3306 141.68 46.7007 141.895 cv
48.3135 142.822 li
48.6846 143.041 49.2935 143.041 49.6606 142.825 cv
50.9287 142.088 li
51.2983 141.876 51.2954 141.522 50.9253 141.309 cv
.67718 .608667 .59826 .476326 cmyk
f
50.5303 141.077 mo
49.1865 140.3 li
48.8794 140.121 48.3716 140.121 48.0654 140.3 cv
47.0093 140.913 li
46.7017 141.091 46.7056 141.387 47.0146 141.562 cv
48.3555 142.336 li
48.6665 142.519 49.1724 142.519 49.4775 142.34 cv
50.5347 141.726 li
50.8403 141.547 50.8384 141.254 50.5303 141.077 cv
.579889 .495216 .490028 .168276 cmyk
f
54.0474 143.02 mo
52.4326 142.088 li
52.0635 141.873 51.4546 141.873 51.0854 142.088 cv
49.8164 142.824 li
49.4487 143.037 49.4526 143.391 49.8237 143.605 cv
51.4346 144.533 li
51.8066 144.75 52.4155 144.75 52.7837 144.534 cv
54.0537 143.799 li
54.4204 143.584 54.4185 143.231 54.0474 143.02 cv
.67718 .608667 .59826 .476326 cmyk
f
53.6523 142.787 mo
52.3086 142.01 li
52.0005 141.831 51.4927 141.831 51.1875 142.01 cv
50.1304 142.621 li
49.8237 142.802 49.8267 143.096 50.1357 143.272 cv
51.4775 144.045 li
51.7876 144.229 52.2925 144.229 52.6016 144.048 cv
53.6567 143.436 li
53.9644 143.258 53.9624 142.963 53.6523 142.787 cv
.579889 .495216 .490028 .168276 cmyk
f
57.3936 144.727 mo
55.7797 143.796 li
55.4096 143.583 54.7993 143.583 54.4317 143.796 cv
53.1636 144.534 li
52.7944 144.747 52.7984 145.099 53.1685 145.315 cv
54.7817 146.242 li
55.1533 146.46 55.7627 146.46 56.1305 146.245 cv
57.3994 145.508 li
57.7686 145.296 57.7646 144.942 57.3936 144.727 cv
.67718 .608667 .59826 .476326 cmyk
f
57.0005 144.496 mo
55.6548 143.718 li
55.3467 143.54 54.8403 143.54 54.5337 143.718 cv
53.4775 144.331 li
53.1694 144.51 53.1733 144.807 53.4814 144.98 cv
54.8237 145.756 li
55.1348 145.939 55.6396 145.939 55.9468 145.757 cv
57.0054 145.145 li
57.3096 144.967 57.3076 144.671 57.0005 144.496 cv
.579889 .495216 .490028 .168276 cmyk
f
22.0771 129.045 mo
20.4625 128.115 li
20.0924 127.9 19.4835 127.9 19.1152 128.115 cv
17.8471 128.852 li
17.4799 129.064 17.4819 129.418 17.8531 129.631 cv
19.4654 130.558 li
19.8375 130.778 20.4464 130.778 20.813 130.564 cv
22.0831 129.825 li
22.4501 129.612 22.4483 129.26 22.0771 129.045 cv
.67718 .608667 .59826 .476326 cmyk
f
21.6831 128.814 mo
20.3393 128.036 li
20.0312 127.857 19.5244 127.857 19.2183 128.036 cv
18.162 128.648 li
17.854 128.828 17.8574 129.122 18.1651 129.298 cv
19.5083 130.073 li
19.8183 130.255 20.3243 130.255 20.6303 130.074 cv
21.6869 129.462 li
21.9952 129.284 21.9912 128.989 21.6831 128.814 cv
.579889 .495216 .490028 .168276 cmyk
f
25.5532 130.899 mo
23.9394 129.97 li
23.5693 129.754 22.9604 129.754 22.5923 129.97 cv
21.3242 130.703 li
20.955 130.919 20.959 131.27 21.328 131.484 cv
22.9423 132.412 li
23.3144 132.631 23.9224 132.631 24.2891 132.413 cv
25.558 131.68 li
25.9272 131.466 25.9233 131.113 25.5532 130.899 cv
.67718 .608667 .59826 .476326 cmyk
f
25.1583 130.667 mo
23.8144 129.891 li
23.5064 129.713 22.999 129.713 22.6934 129.891 cv
21.6372 130.503 li
21.33 130.683 21.3329 130.978 21.6412 131.152 cv
22.9843 131.928 li
23.2943 132.108 23.7994 132.108 24.1064 131.931 cv
25.1632 131.318 li
25.4692 131.136 25.4683 130.843 25.1583 130.667 cv
.579889 .495216 .490028 .168276 cmyk
f
28.5674 132.522 mo
26.9522 131.589 li
26.5821 131.376 25.9741 131.376 25.6054 131.589 cv
24.3385 132.326 li
23.9702 132.542 23.9731 132.893 24.3423 133.107 cv
25.956 134.035 li
26.3281 134.255 26.9375 134.255 27.3033 134.038 cv
28.5732 133.302 li
28.9395 133.088 28.9375 132.733 28.5674 132.522 cv
.67718 .608667 .59826 .476326 cmyk
f
28.1734 132.29 mo
26.8292 131.512 li
26.5215 131.334 26.0132 131.334 25.7071 131.512 cv
24.6523 132.126 li
24.3443 132.305 24.3471 132.6 24.6552 132.776 cv
25.998 133.549 li
26.308 133.73 26.8145 133.73 27.1201 133.552 cv
28.1772 132.939 li
28.4835 132.761 28.4815 132.465 28.1734 132.29 cv
.579889 .495216 .490028 .168276 cmyk
f
46.7602 142.374 mo
45.1455 141.44 li
44.7743 141.228 44.1665 141.228 43.7973 141.44 cv
42.5304 142.178 li
42.1626 142.392 42.1666 142.745 42.5347 142.956 cv
44.1484 143.886 li
44.5195 144.106 45.1294 144.106 45.4947 143.888 cv
46.7647 143.153 li
47.1334 142.938 47.1294 142.586 46.7602 142.374 cv
.67718 .608667 .59826 .476326 cmyk
f
46.3642 142.141 mo
45.0214 141.364 li
44.7125 141.184 44.2065 141.184 43.9004 141.364 cv
42.8433 141.977 li
42.5367 142.155 42.5396 142.45 42.8476 142.626 cv
44.1904 143.4 li
44.4996 143.581 45.0064 143.581 45.3116 143.402 cv
46.3696 142.791 li
46.6763 142.611 46.6743 142.315 46.3642 142.141 cv
.579889 .495216 .490028 .168276 cmyk
f
50.1206 144.053 mo
48.5063 143.121 li
48.1353 142.909 47.5264 142.909 47.1596 143.121 cv
45.8926 143.858 li
45.5225 144.073 45.5254 144.424 45.8955 144.638 cv
47.5093 145.565 li
47.8814 145.785 48.4908 145.785 48.8575 145.57 cv
50.1255 144.833 li
50.4936 144.619 50.4897 144.266 50.1206 144.053 cv
.67718 .608667 .59826 .476326 cmyk
f
49.7265 143.82 mo
48.3823 143.043 li
48.0733 142.865 47.5664 142.865 47.2593 143.043 cv
46.2065 143.658 li
45.8975 143.835 45.9024 144.132 46.2095 144.306 cv
47.5523 145.08 li
47.8613 145.261 48.3687 145.261 48.6733 145.084 cv
49.7285 144.469 li
50.0376 144.291 50.0336 143.996 49.7265 143.82 cv
.579889 .495216 .490028 .168276 cmyk
f
53.3622 145.85 mo
51.7496 144.915 li
51.3804 144.706 50.7706 144.706 50.4023 144.915 cv
49.1353 145.655 li
48.7656 145.869 48.7695 146.223 49.1406 146.436 cv
50.7534 147.362 li
51.1235 147.582 51.7344 147.582 52.1016 147.366 cv
53.3706 146.631 li
53.7372 146.413 53.7343 146.064 53.3622 145.85 cv
.67718 .608667 .59826 .476326 cmyk
f
52.9726 145.615 mo
51.6275 144.84 li
51.3183 144.661 50.8106 144.661 50.5034 144.84 cv
49.4488 145.453 li
49.1416 145.63 49.1445 145.929 49.4537 146.102 cv
50.7965 146.878 li
51.1065 147.058 51.6103 147.058 51.9175 146.88 cv
52.9755 146.266 li
53.2792 146.088 53.2774 145.793 52.9726 145.615 cv
.579889 .495216 .490028 .168276 cmyk
f
42.9395 140.831 mo
30.2613 133.514 li
29.4843 133.066 29.2231 133.302 28.8604 133.514 cv
28.0875 133.962 li
27.7223 134.175 27.3881 134.283 28.1651 134.733 cv
40.8423 142.05 li
41.6187 142.499 41.8882 142.307 42.2554 142.095 cv
43.0166 141.652 li
43.3795 141.439 43.7143 141.282 42.9395 140.831 cv
.67718 .608667 .59826 .476326 cmyk
f
42.2813 140.162 mo
30.3872 133.298 li
29.6582 132.876 29.4156 133.1 29.0732 133.298 cv
28.3481 133.718 li
28.0073 133.919 27.6913 134.019 28.4214 134.44 cv
40.3155 141.306 li
41.0434 141.728 41.5123 142.147 42.1035 141.788 cv
43.0806 141.274 li
43.4137 141.043 43.3115 140.761 42.2813 140.162 cv
.597284 .512352 .507713 .201328 cmyk
f
51.0606 157.02 mo
64.8897 148.656 li
64.8627 150.174 li
51.0327 158.676 li
51.0606 157.02 li
.474006 .392462 .396399 .0345769 cmyk
f
51.0606 157.02 mo
51.0347 156.977 li
64.9412 148.567 li
64.9123 150.202 li
50.9811 158.766 li
51.011 156.991 li
51.0347 156.977 li
51.0606 157.02 li
51.1105 157.02 li
51.0843 158.585 li
64.8133 150.146 li
64.8381 148.746 li
51.0864 157.062 li
51.0606 157.02 li
51.1105 157.02 li
51.0606 157.02 li
.75021 .679683 .670222 .90164 cmyk
f
gsave
71.3837 145.987 mo
71.3808 144.968 li
72.2676 144.455 li
72.2705 145.475 li
71.3837 145.987 li
clp
71.8267 144.791 mo
71.6167 144.912 71.4507 145.198 71.4516 145.434 cv
71.4516 145.676 71.6187 145.771 71.8296 145.649 cv
72.0337 145.532 72.1987 145.245 72.1978 145.003 cv
72.1978 144.768 72.0317 144.673 71.8267 144.791 cv
f
71.8267 144.709 mo
71.5777 144.854 71.3808 145.195 71.3817 145.474 cv
71.3828 145.761 71.5806 145.873 71.8296 145.73 cv
72.0719 145.589 72.2696 145.249 72.2685 144.961 cv
72.2685 144.683 72.0688 144.569 71.8267 144.709 cv
71.8296 145.648 mo
71.6187 145.77 71.4516 145.675 71.4516 145.433 cv
71.4507 145.198 71.6167 144.912 71.8267 144.79 cv
72.0317 144.672 72.1978 144.767 72.1978 145.001 cv
72.1987 145.244 72.0337 145.531 71.8296 145.648 cv
.310948 .246555 .251835 3.0518e-05 cmyk
f
grestore
gsave
73.0396 145.033 mo
73.0366 144.014 li
73.9238 143.501 li
73.9267 144.521 li
73.0396 145.033 li
clp
73.4765 143.841 mo
73.2739 143.958 73.1078 144.252 73.1089 144.487 cv
73.1089 144.721 73.2759 144.816 73.4796 144.699 cv
73.6836 144.581 73.8497 144.294 73.8486 144.059 cv
73.8477 143.824 73.6816 143.723 73.4765 143.841 cv
f
73.4765 143.76 mo
73.2348 143.9 73.0376 144.248 73.0386 144.528 cv
73.0396 144.808 73.2377 144.92 73.4796 144.78 cv
73.7227 144.639 73.9267 144.295 73.9258 144.016 cv
73.9247 143.736 73.7198 143.619 73.4765 143.76 cv
73.4796 144.699 mo
73.2759 144.816 73.1089 144.721 73.1089 144.487 cv
73.1078 144.252 73.2739 143.958 73.4765 143.841 cv
73.6816 143.723 73.8477 143.825 73.8486 144.06 cv
73.8497 144.295 73.6836 144.581 73.4796 144.699 cv
.310948 .246555 .251835 3.0518e-05 cmyk
f
grestore
gsave
74.8379 143.987 mo
74.835 142.968 li
75.7169 142.459 li
75.7197 143.479 li
74.8379 143.987 li
clp
75.2759 142.795 mo
75.0708 142.912 74.9058 143.199 74.9058 143.434 cv
74.9067 143.668 75.0737 143.771 75.2778 143.653 cv
75.4829 143.536 75.647 143.242 75.647 143.007 cv
75.647 142.771 75.48 142.677 75.2759 142.795 cv
f
75.2759 142.713 mo
75.0317 142.854 74.8359 143.195 74.8369 143.474 cv
74.8379 143.761 75.0356 143.873 75.2778 143.734 cv
75.5205 143.593 75.7178 143.253 75.7168 142.965 cv
75.7168 142.687 75.5186 142.573 75.2759 142.713 cv
75.2778 143.652 mo
75.0737 143.77 74.9067 143.668 74.9058 143.433 cv
74.9058 143.199 75.0708 142.912 75.2759 142.794 cv
75.48 142.676 75.646 142.771 75.647 143.005 cv
75.647 143.241 75.4829 143.535 75.2778 143.652 cv
.310948 .246555 .251835 3.0518e-05 cmyk
f
grestore
41.2296 114.722 mo
50.8003 119.945 48.7247 118.828 49.7583 119.398 cv
49.2563 119.126 48.0704 120.46 48.8965 120.924 cv
47.2602 119.989 41.0655 116.438 40.4512 116.036 cv
39.8716 115.656 40.4302 114.278 41.2296 114.722 cv
level3{
gsave
clp
[.741024 -1.29078 -1.29079 -.741017 44.408 118.347 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^TFR!^9+Eo]r\6i]WA*c];qm[\uVaS\Z2OL\>c@C\#?.9[\fk-[&'LuZ_O4hZD*t[Z(R\NYFh>@Y+;#2
XI>N!WgK&gWL&f[Vj*<MV3-g>UQ:C1TT"b!Sr&4gS;)_ZR=g)JQ@OH<PC7g-OEu0sNH]OeM0!_VL2_)I
K5GH<J8/g/HY-muG@P.gF'i;YE*QZOCfjgABN/"5@o6,)?;+)o=[u!_<'s%R:Hq)E905697Q3:,5r1@u
4>8Ji3%QW]1FO[P/gDYB.Nfl7-6+',+W20u*>TFk)%mS_'b:iU&I]*K$jd4?#mLS6"Tni,!W`<%!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!W`<%"Tni,#mLS6$jd4?&I]*K'b:iU)%mS_*>TFk+W20u-6+',.Nfl7/gDYB1FO[P3%QW]4>8Ji5r1@
u7Q3:,90569:Hq)E<'s%R=[u!_?;+)o@o6,)BN/"5CfjgAE*QZOF'i;YG@P.gHY-muJ8/g/K5GH<L2_)
IM0!_VNH]OeOEu0sPC7g-Q@OH<R=g)JS;)_ZSr&4gTT"b!UQ:C1V3-g>Vj*<MWL&f[WgK&gXI>N!Y+;#
2YFh>@Z(R\NZD*t[Z_O4h[&'Lu[\fk-\#?.9\>c@C\Z2OL\uVaS];qm[]WA*c]r\6i^9+Eo^TFR!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0056 .6011 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.741024 -1.29078 -1.29079 -.741017 44.408 118.347 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^:q=q]tM+l]Xtef]"5G_\@B&X\$i`R[C!9HZa-mAZ*:I9Y-+n.XK/A#WMlbnVPU)aUS=ERSt;LCS!o_2
QBdYsOcYT_N/EIIL4t;4JUi2sH?aXVF)l8=DJX'%B4YR]?X6l==&i-p:/+AQ7n#d25<V(g3&NKH0.e_)
-mp;c+Wh^E)Aj8*'+tid$k!@I"pG)1!<<*#!X&`7$Om[]'c7i0+!N!Z.P3>12E<i_5t"489i"\g=^5<C
AS>jrDfKiAG^FmiJqSl7MN*XXP*D9"R@Bb=T:r$UV5C/iWN*#$Y-+t5Z*L[A['d?N\%&rY]"5Mc]Y2"m
~>
<~XK8M)XK8M(X/i;%WiE)!WMukqW2HPjV59u_US=KVTV%jKSt2C@R[KP0Q^3o$PEM#hO,f0WMM[+CKnP&/
J:DupH[9p\G'%eFE,TW1CMINqARo:Z?X@#B>$+g*;c6Ig9hS&J770C,5!:tf3&WTL0eb74/1N%p,U+BS
*ZZ1<)&F&''+kcd%L`^P#m^_="9S]+z!<NB.#RUtL%hTHj(`=86+<i*[.P3;.1Gq-Q4[28$7nQKP;H-_
#>?tTFA7fLiCi434FE_tUI"$TtK8#);MiEdZOcu&sQ^F21SXuIHTq\9WV5:&eW2ZbrWiE,#X/rD(~>
<~WiE)!WMukrWMlboVl-DhV5:#bV50o_US=HUTqJ$LSt2FBS!ob4R$O#%PEM)kOH5E^NJraOLkg_=KS+i+
IsuclH?j^XF`_\EE,TW1CMIQrAn>L^?sd5F>?P'/<E)jm:JFGP7RTU05<_1j3B&iR1GLR9/Lr7u-6sfZ
+<DOB)Aj8+'G:uh%h/pS#m^_="9S]+z!<NB.#RV"N&/#Zn)&jS<+XAB`.kWM22)dNW5!VJ(84u`U<*!+
)>[CfJAS5^lCi434FEVkRH[UBpJqSl6M2R@RO-#KfPa7Z(R[]h=StD[LU8+N[V5:#cVl-JlWMuks~>
<~jlPR_i8<AFg=Y!+dEg(\ai;98^:Un^Z*(+(US"$CP`Ui\Kn4YtF`MA8BOkRZ>Zb!(:J=>M6pX"!3ArZJ
0.eY%,pOQT*?,n6()7Jp&.T-W$4$k@"U"r1!s/K(zzzzzzzzzzzzzzzzzzzzzzzz!!**%!sAc3#R_(P&
JPuu)]g.J-n?r+2EF#g7S6HT=C#?HC2\3?J;/uEQCO\IXg,=H^r4=;cI17qgYLfI~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
70.8507 132.189 mo
65.0485 128.896 li
70.8784 132.145 li
70.8689 132.159 70.8597 132.174 70.8507 132.189 cv
level3{
gsave
clp
[.740501 -1.29004 -1.29005 -.740493 66.4452 130.722 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.740501 -1.29004 -1.29005 -.740493 66.4452 130.722 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
71.2647 131.762 mo
70.9306 131.954 70.6616 132.42 70.6616 132.804 cv
70.6616 133.053 70.7685 133.239 70.9449 133.257 cv
71.0357 133.268 71.5938 132.622 71.5938 132.622 cv
71.5938 132.622 71.6978 132.045 71.7696 131.782 cv
71.6616 131.656 71.4756 131.639 71.2647 131.762 cv
.597284 .512352 .507713 .201328 cmyk
f
79.4355 133.489 mo
91.4781 95.6435 li
48.6435 74.5742 li
39.1104 111.144 li
79.4355 133.489 li
93.831 93.124 mo
95.1851 93.7803 li
94.668 95.372 li
81.4248 135.969 li
80.606 136.787 li
79.2047 136.67 li
37.2754 113.307 li
36.5585 112.602 li
36.5312 111.307 li
46.6837 71.8975 li
47.0767 70.3691 li
48.2524 70.9415 li
93.831 93.124 li
.310948 .246555 .251835 3.0518e-05 cmyk
f
79.3403 133.459 mo
91.3567 95.6953 li
48.7093 74.718 li
39.2267 111.094 li
79.484 133.402 li
79.387 133.577 li
38.9941 111.193 li
48.5776 74.4303 li
91.5995 95.5918 li
79.5308 133.519 li
79.3403 133.459 li
93.831 93.124 mo
93.8747 93.034 li
95.3071 93.7282 li
94.7636 95.4011 li
81.5125 136.023 li
80.6438 136.891 li
79.1748 136.768 li
37.215 113.387 li
36.4594 112.644 li
36.431 111.295 li
46.5867 71.8725 li
47.0104 70.2257 li
48.2962 70.8515 li
93.8747 93.0341 li
93.831 93.124 li
93.7874 93.2139 li
48.2086 71.0314 li
47.143 70.5126 li
46.7804 71.9224 li
36.6314 111.318 li
36.6577 112.559 li
37.3358 113.226 li
79.2343 136.572 li
80.5681 136.684 li
81.3372 135.915 li
94.5723 95.3429 li
95.063 93.8322 li
93.7874 93.2139 li
93.831 93.124 li
.75021 .679683 .670222 .90164 cmyk
f
95.2349 93.7217 mo
96.5621 91.8643 li
83.0058 134.63 li
81.3828 136.155 li
95.2349 93.7217 li
.310948 .246555 .251835 3.0518e-05 cmyk
f
95.2349 93.7217 mo
95.1535 93.6635 li
96.4807 91.806 li
96.6572 91.8945 li
83.1011 134.66 li
83.0743 134.703 li
81.4514 136.228 li
81.2878 136.124 li
95.1397 93.6906 li
95.1535 93.6635 li
95.2349 93.7217 li
95.3298 93.7526 li
81.5991 135.815 li
82.9184 134.575 li
96.2754 92.4374 li
95.3163 93.7798 li
95.2349 93.7217 li
95.3298 93.7526 li
95.2349 93.7217 li
.75021 .679683 .670222 .90164 cmyk
f
47.1665 70.2823 mo
49.2963 69.7763 li
96.5248 91.8516 li
95.2177 93.6709 li
47.1665 70.2823 li
.310948 .246555 .251835 3.0518e-05 cmyk
f
47.1665 70.2823 mo
47.1433 70.185 li
49.2733 69.679 li
49.3386 69.6857 li
96.5672 91.761 li
96.606 91.9099 li
95.2989 93.7293 li
95.1741 93.7608 li
47.1227 70.3722 li
47.1433 70.185 li
47.1665 70.2823 li
47.2102 70.1924 li
95.1857 93.5441 li
96.3734 91.8911 li
49.2856 69.8818 li
47.1896 70.3796 li
47.1665 70.2823 li
47.2102 70.1924 li
47.1665 70.2823 li
.75021 .679683 .670222 .90164 cmyk
f
53.5757 149.023 mo
16.1842 129.096 li
34.7686 118.584 li
71.2558 138.645 li
53.5757 149.023 li
76.7769 135.725 mo
38.9521 114.26 li
37.5323 113.468 35.2534 113.506 33.8755 114.329 cv
3.76511 132.301 li
2.37296 133.127 2.39991 134.438 3.82083 135.229 cv
41.0753 155.954 li
42.4936 156.743 46.0234 159.143 48.8287 157.69 cv
78.9369 139.717 li
81.9179 137.691 78.2007 136.518 76.7769 135.725 cv
.310948 .246555 .251835 3.0518e-05 cmyk
f
53.5757 149.023 mo
53.5052 149.156 li
15.8725 129.1 li
34.7675 118.412 li
71.5594 138.64 li
53.5791 149.195 li
53.5052 149.156 li
53.5757 149.023 li
53.4997 148.894 li
70.9523 138.649 li
34.7697 118.756 li
16.4957 129.092 li
53.6462 148.891 li
53.5757 149.023 li
53.4997 148.894 li
53.5757 149.023 li
76.7769 135.725 mo
76.7029 135.855 li
38.8787 114.391 li
38.879 114.391 li
38.2226 114.024 37.3575 113.838 36.4898 113.838 cv
35.5622 113.837 34.6326 114.051 33.9524 114.458 cv
3.84199 132.43 li
3.84163 132.43 li
3.18372 132.822 2.88742 133.302 2.88778 133.755 cv
2.88724 134.221 3.20163 134.711 3.89373 135.097 cv
41.1482 155.823 li
42.2558 156.443 44.6124 158.002 46.8651 157.998 cv
47.5152 157.998 48.1547 157.87 48.7596 157.557 cv
48.8287 157.69 li
48.7516 157.562 li
78.8601 139.588 li
78.9369 139.717 li
78.8526 139.593 li
79.6497 139.052 79.9168 138.597 79.9138 138.242 cv
79.9248 137.769 79.4185 137.297 78.7322 136.893 cv
78.0526 136.488 77.2355 136.151 76.7038 135.856 cv
76.7034 135.855 li
76.7029 135.855 li
76.7769 135.725 li
76.8498 135.594 li
77.3545 135.875 78.1808 136.216 78.8856 136.635 cv
79.5836 137.056 80.2026 137.554 80.2137 138.242 cv
80.2106 138.757 79.8477 139.279 79.0212 139.841 cv
79.0178 139.843 li
48.9016 157.822 li
48.8976 157.824 li
48.245 158.162 47.5543 158.298 46.8651 158.298 cv
44.482 158.294 42.0957 156.69 41.0024 156.085 cv
3.74793 135.36 li
2.99831 134.944 2.5884 134.365 2.58786 133.755 cv
2.5884 133.163 2.97479 132.594 3.68859 132.172 cv
3.68805 132.172 li
33.8003 114.199 li
33.7986 114.2 li
34.5421 113.757 35.5171 113.539 36.4898 113.538 cv
37.3999 113.539 38.3089 113.73 39.0252 114.129 cv
39.0257 114.129 li
76.8503 135.594 li
76.8498 135.594 li
76.7769 135.725 li
.75021 .679683 .670222 .90164 cmyk
f
79.4355 133.489 mo
79.4355 133.489 li
79.4355 133.489 li
79.4355 133.489 li
79.4355 133.489 li
79.3773 133.343 mo
58.1323 121.57 li
79.3886 133.114 li
82.8768 122.345 li
79.3773 133.343 li
level3{
gsave
clp
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~D]C/*EZQ\1F<E+7G9\^?GpP-EHmg`MIk!8TK.St]L+kUfM).3nN&Eg!N]99(OZPl0P<D;6Q9[n>R6jCE
RmfmLSjuETTLhiZUJ+GcV+skiW)-CqW`)k#X]8C+Y?+g2Yut38ZWp]A[9d)G[pWMO\RJnV]4>=^]k:df
^hI<o_J<^!`,93+`c,T2aDu#;b&hDBb]dkKc?X:Td!K[\dX?'de:2HleU_ctf7S0'fnFQ/gP9u9h26GB
hMc_Ji/W+RiK/CZj-"dbjck3lkEg[!ka?s)lC3?2l^`W:m%8oBm@f2Jm\>JRn>1k[nY_.dnu7Fmo;d^u
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~DJsK6EH6)@F*)PJG'A.TG^4U^H[L6iIXcm!JqJ`0KnbA<Ll%"HMi<USNK0$[OHGZgP*;)oQ'R`&R$jA2
R[T_9SXl@DT:_dMU8"EXUnjiaVl-JlWMunuX/rG*Y-+t3YctC;ZEggC['[6K[^NZS\@B)[]"5Mc]Y(qk
^;%Fu^qmk(_Sa:0`5T^8`lH-@aN;QHb0.uPbg"DXcHjh`d*^7hdaQ[peC<!ue^i='f@\a/g"P07gYCT?
h;-oChVR/Ii8EPOiSieUj5]4]jlPXekND$kkih9qlK[["lg*m&m-O**mHs<.mdBQ4nF5r:naZ/>o()AB
~>
<~)]Th<*?H7D+!;^N+sS<X,UFcb-R^Al.4Qhu/1iJ,0/,+81,CaD2)[?O2`NcW3]fDc4?Yhk5<qJ"5sdn*
6psI47Rfm<84Z<E91qrP9heAX:JXea;,U=k<)cjt<`W:'=BJ^0>$G6:?!UcC?XI2K@:<VS@q0%[AS,Rf
B4tsmBkhBuCi+$,DJsH4E,fl<EcZ;DF`hkOGBe@XH$Xd`H[L3hI=?WpIt3'#JV&K+K7no3Knb>;LPUeE
MMd=MN/WaUNfK0]OH>TeP*2#mPa.N"Q^=),R@0M4S"#q<SXl@DT:_dLTqS3TUSFW\V5:&dVl-JlWMunt
~>
<~-R^Al.4Qet.kE5'/M8Y/0/,(70etL?1GgpG2)[BP3&ru[3]fDc4?Ykl5<qJ"5sdn*6UX=277Ka97Ros>
84Z<D8kM`L9MA/T:/4S\:f("d;GpFl;c?Xp<E3(#='&L+=BJ^/>$>-7>?b?;?!UcC?=$uG?smDO@:<VS
@UinYA7T4^AS,OeB4kjjBPD0qC2.L!CMR^%Ci+$,DJj?1Df9Q5E,]c9EH6)@F)uDEFEDVIF`qqPGB\7U
G^+IXH$O[\H?sm`H[C*dI!g?jIXZ`pIt)rtJ:N0#JUrB'JqAT+K7ef/KS5#3KnY57L5(G;LPLY?LkpkC
~>
<~zzzzzzzzzzzzzzzz!!!$#!<E3%!<E6'!WiE)!WiH+!s8Z/"9\l3"U,)7"pP;;#6tM?#mgqG$47.K$k*R
S%Ls![&.fEc&eYik',2,q'c%Q$(`=20)B0V8*?H7D+!;[L+sJ6W,palc-n$Mo.k</&/hSe20JP==1Ggs
I2E*TU3]fGe4[)(q5X@_(6q'R77n?3D92&&S:/=\`;H$Op<``C+>$G6;?=.)K@Uiq[AnPdkC27X&DJsK
6EcZ>FGBeCZI!pHn~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
80.5681 136.684 mo
79.2343 136.572 li
42.7671 116.252 li
39.0257 114.129 li
39.0252 114.129 li
38.9016 114.06 38.7723 113.997 38.6383 113.941 cv
37.4073 113.25 li
36.7192 112.609 li
36.6884 111.406 li
47.1502 70.5161 li
48.2086 71.0314 li
89.9988 91.3701 li
95.0619 93.8359 li
94.5723 95.3429 li
81.3372 135.915 li
80.5681 136.684 li
48.5776 74.4303 mo
38.9941 111.193 li
79.387 133.577 li
79.4354 133.489 li
79.4355 133.489 li
79.5308 133.519 li
91.5995 95.5918 li
48.5776 74.4303 li
level3{
gsave
clp
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*uGjq+rVC#,TIg)-QO9/.3B]5/0Q2;/gDYB0d\7J1FO[P2C^3W3%QZ^4"i8f4Y\\l5Vk4s6T$b%75m1+
82rX18io-89g(Z?:d72F;F*YM<CB7U=%5[[>"D6c>t[ll?qsJt@o-&(AQ)P/BN/"5C0"F<CfjjBDd$BJ
EElfQF'`5XF^SV^G@G%eH":ImHY-muIV<F(J8/g/JS]-6K5GH<Kl:lDL2h2LLi[SSMKO"[N-BFdNd5gk
OEu0sP'hU(PC@m/Q%+67Q@XQ?R"BlFRY6;ORtcSWSVMq_Sr&4gT8SLoTo=k"U5k1+UQ:C2Ul^X:V36pB
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*ZlLJ+X/*T,:"Q^-7:/h-n-Vr.kE5'/M8\00JP:;1,CaD2)[?O2`NfX3]fDc4?Yhk5<qJ"6:4+.6q'O6
7n6*@8P)NI9MA/U:JXe`;,L4i<)cjt<`W:(=BSg3>?kH??=.)K@:E_VA7T7_AnPdjBk_<sCMRa&D/O91
DfBZ8EH6)@F*)MHF`qqPGBe@XH$Xd`I!g?kIXcitJ:N0$JV&K+K7no3KnY58L51P?Ll$tGMMmCON/`gW
NfK0]OH>TeP*1ukPEV5qQ'IW"QBml(R$a;0R[T\6S"#q<SXl=BSt;OFT:_dLTqS0RU8"BVUSFTZUnjf^
~>
<~(Dmu,)&aD4)]Th;*$$%@*ZlIH+<_mP+sS?Y,pjrd-R^Al.4Qet.kE8(/h\k30JP:;1,C^C1c7-K2E*QR
2`E]V3]]>a4?Pbi5!D1q5X7V%6UO7077B[87n6*A8P2WL9MJ8W:JXe`;,U=k;c?Xp<E3(#='&L+=]np3
>$G39>[:WA?=.&I?t!JQ@UinYA7]=aAnPaiBPD0qC27U$Ci!p)D/O60DfBZ8EH6)@F*)MHF`qqPGBe@X
H$O[\H?spbI!g?jIXZ`pIt*!!JUrB'JqAW-KS5&5L5(G;LPL\AM2@+IMi3LON/WaUNfK-[O,o?_OH>Te
~>
<~(`=20)B0V8*$$%@*ZlIH+<_mO+X/-U,UF``-7:/h-n-Sp.P!&$/M8Y/0/,(70etL?1GgpG2)[?O2`NcW
3B9,]4$,Pe4Zttm5<hD!6:+%,6psI47Rfm=84cEH92&&S:/4S]:f1+g;c?Xp<E3(#='&L+=]np3>?b?;
>[:WA?=.&I?smAN@:E\U@q9+]AS,OeB4tsmBk_9rC27U$Ci!p)D/O60DfBZ8EH,u=EcZ;DFEM_LG'8%Q
GB\:VH$O^^H[C*dI!g?jIXZcrJ:N0#JUrE)K7ef/KS5&5L5(G;LPLY?LkpnEMMd=MN/W^SNK&sYO,o?_
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E6'!WiH+!s8W."9\i2"U,&6"pP8:#7(SA#mq"I$O
[=N$k3XU%M'']&.oKe&ebom'GVB"(Dmu,)&aD4)]Tk>*ZlIH+<_pQ,:"Q^-R^Dm.P!&$/M8\00JP:;1G
gpG2E*TU3]fDc4[)(q5sdq,77B[984cEH9MJ8X:f1+h<)lt#~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
80.6426 136.844 mo
79.1739 136.689 li
43.6702 116.765 li
42.7671 116.252 li
79.2343 136.572 li
80.5681 136.684 li
81.3372 135.915 li
94.5723 95.3429 li
95.0619 93.8359 li
95.0881 93.8486 li
81.2878 136.124 li
81.325 136.148 li
80.6426 136.844 li
79.387 133.577 mo
38.9941 111.193 li
48.5776 74.4303 li
91.5995 95.5918 li
79.5308 133.519 li
79.4355 133.489 li
79.4355 133.489 li
79.4354 133.489 li
79.387 133.577 li
58.1323 121.57 mo
79.3773 133.343 li
82.8768 122.345 li
91.5249 95.6446 li
48.6417 74.4853 li
39.0167 111.188 li
58.1323 121.57 li
89.9988 91.3701 mo
48.2086 71.0314 li
47.1502 70.5161 li
47.1533 70.5039 li
89.9988 91.3701 li
level3{
gsave
clp
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~H":ImHY-muIV<F(J8/g/JS]-6K5GH<Kl:lDL2h2LLi[SSMKO"[N-BFdNd5gkOEu0sP'hU(PC@m/Q%+67
Q@XQ?R"BlFRY6;ORtcSWSVMq_Sr&4gT8SLoTo=k"U5k1+UQ:C2Ul^X:V36pBVN[-IVj3EQW0WWXWL&i`
WgK&gX-o8oXI>N"Xdkf+Y+;#3YF_8<Yb.JDZ(R\LZ([bSZD*t[ZD4(bZ_O4h[%sFp[ABY#[AK_([\oq0
\#?.7\>Z7<\>c@B\Z2OH\Z2OK\uVaQ\uVaS];qmY]<%s]]WA*a]r\3e]r\3g^9+Em^9+Eo^TFQs^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G^4R\H@($fI=?WpIt3'"J:W9'JqJ]/KS>,6Knb>;LPUbCM2I1KMi<USNK0$[O-#HcOckljP*;)oPa.N!
Q'IZ$Q^=),R@0M4R[T_8S=H.@SXl@DSt;RHTV/!PTqS3TU8"EXUSFW\Unji`V5:&dVP^8hVl-JlW2Q\p
WMuksWiE)"X/i;&XK8M*Xf\_.Y-+q2YHP.6Yct@9Yct@:Z*CR=Z*CR>ZEgdBZa7!F['[3I['[3J[C*EN
[^NWQ\$riU\$riU\@B&Y\@B&Y\[f8]\[f8]]"5Ja]"5Ja]=Y\e]Y(ni]Y(ni]tM+m]tM+m^:q=q^:q=q
~>
<~@q9+]AS,OeB4tsmBkhBuCM[g'Ci+$,DJsH4E,fl<EcZ;DFEM_LG'A.TG^4R[H$Xd`H[L3hI=?WoIXcit
J:N3%JUrE)K7ei1KnY89L5(J=LkpnEMMd=MMi3OQNK&sYNfK0]O,oBaOcbfiP*2#mPa%GuQ'IZ$QBml(
Q^=&+R$a8/R@0J3R[]e:S=H+?SXl=CSt;OGT:_aKTV.sOTqS0SU8"BVU8"BWUSFT[Unjf_V5:#cVP^5g
Vl-GjVl-GjW2QYnWMukrWMukrWiE)!WiE)!WiE)!X/i;%X/i;%X/i;%X/i;%XK8M)XK8M)XK8M)XK8M)
~>
<~A7]=aAnPaiBPD0pBkhBuCM[g'Ci+$,DJsH4E,fl;EH6)@F*)MHF`qqOG'A.TG^4R\H@(!cH[L3hI=?Wp
It*!!J:N3%JqAW-K7ei1KnY89L5(J=LPL\AM2@+IMi3OQN/WaUNfK0]O,oBaOH>TeOcbfiP*2#mPEV5q
Pa%DtQ'IW#QC!r*R$a8/R@0J3R[]e:S=H+?SXl=BSXl=CSt;OGT:_aKTV.sOTqS0SU8"BVU8"BWUSFT[
Unjf^Unjf^V5:#bV5:#bV5:#bVP^5fVP^5fVl-GjVl-GjW2QYnW2QYnW2QYnWMukrWMukrWiE)!WiE)!
~>
<~#RLeE$4@4L$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0Y9*?H7D+!;[L+sS?Z-7:/h.4Qet/1iG+
0/#"61,:XB2)R9N3&s#]4?Pbj5<qM$6UX@47Rp!@8kViP:/=\`;H$Op<``C+>$G6;?=.)K@Uiq[AnPgm
C27X'DfB]:F*)PKG^4U^I=?ZrJqJ`1LPUeEMiEaXOckroQC+)/S"-(BTV8*TUnsufWN*#$Y-5(7ZEppH
[^WcW]">Vg^;%J"_Sa=2`lH0Aai_cLbfn>VcHjkbdaQ[pe^`7%f@\a/g=k<9gt^`Bhr!AMiSieUj5]4^
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
81.325 136.148 mo
81.2878 136.124 li
95.0881 93.8486 li
95.1421 93.8749 li
81.4698 136 li
81.325 136.148 li
level3{
gsave
clp
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
43.6702 116.765 mo
38.6383 113.941 li
38.7723 113.997 38.9016 114.06 39.0252 114.129 cv
39.0257 114.129 li
42.7671 116.252 li
43.6702 116.765 li
level3{
gsave
clp
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.4631 4.99031 4.99036 -56.4625 37.5775 101.348 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2.83801 134.559 mo
2.64303 134.426 li
2.66672 134.212 li
2.70802 134.331 2.76531 134.447 2.83801 134.559 cv
level3{
gsave
clp
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@S]i%A5Q8+B2_e2BiS18CKFU>D-:$DDd$BJE*QZOEaE)VFC8M]G%"kcG[k7iH=^[pHtR("IVEL*J8/g/
JS]-6K5GH<KPtcCL2_)ILN7AOM0!_VMfj+]NH]OeNd5glOEu0sOaMI%PC7g-P^e*4Q@OH;Q\'`BR=g)J
RY?AQRtcSWSVMq_Sr&4gT8JFmTT"^tToFt'U5k1-UQ:F4V3$a<V36pCVN[-IVj3EQW0WWWWL&i^WgK&e
X-o8lXI>JsXIGT%Xdkf,Y+;#4YF_8<Yb.JDYb7PIZ([bQZ(dkWZD+"^Z_O4eZ_X:j[%sFq[ABY#[AK_(
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:E\U@q9._AnPaiBPD0qC27U$Ci+$,DJsH3DfBZ8EH6)@F*)MHF`qqPGBe@XH$Xd`H[L3hI=?WpIt3'"
J:N3%JqAW-K7ei1KnY89L5(J=LkpnEMMd=MN/WaUNK&sYO,oBaOH>TeP*2#mPEV5qQ'IZ$QBml(R$a;0
R@0J3R[T\7S"-">SXl=CSt;OGT:_aKTV.sOTqS0SU8"BWUSO]]Unjf_V5:#cVP^5gVl-GkW2QYoWMuks
WiE)!X/i;%X/i;%XK8M)Xf\_-Y-+q1YHP.5YHP.5Yct@9Yct@9Z*CR=ZEgdAZEgdAZa7!E['[3I['[3I
~>
<~:/=Y^:f1(f;H$Ln<)lq!<``@)=BSd0=^#!5>?kE=?!^iE?XR8L?t!JQ@UinYA7]=aAnPaiBPD0pBkhBu
CMRa&Ci!s*DJjB2Df9T6EH-#>EcQ5BFEDYJG'8(RG^+LZH$O^^H[C-fI!g?jIXZcrIt*!!JUrE)JqAW-
K7no3KnY58L5(G<LPUbCM2@(HMMmCON/W^TNK&pXNfK-\O,o?`OHGZgP*1ulPE_;sQ'IW#QBmi'Q^=&+
R$a8.R@0J2R[T\6S"#n:S=H+>SXl=BSt;OFT:_aJTV.sNTqS0RTqS0RU8"BVUSFTZUSFTZUnjf^V5:#b
~>
<~:f1(f;H$Ln<)lpu<E<.%='/R-=^#!5>?kE<>[:WA?=.&I?t!JQ@UinX@q9+]AS,OdAnPaiBPD0pBkhBu
CMRa&Ci!s*DJjB2Df9T6E,]f:EcQ5BF)uGFF`hkNG'8(RG^+LZH$O^^H[C-fI!g?jIXZcrIt*!!JUrE)
JqAT,K7ef0KS>,7L5(G<LPLY@LkpkDM2I1KMi3LPN/`gWNfK-\O,o?`OH>QdOcbchP*1ulPEV2pPa%Dt
Q'IW"QBmi&Q^=&*R$a8.R@0J2R[T_8S=H+>S=H+>SXl=BSt;OFT:_aJTV.sNTV.sNTqS0RU8"BVU8"BV
~>
<~zz!!**$!<E3%!<E3%!<N<(!WrN,!sA`0"9er4"U5/8"pYA<#7(S@#RLeE$4@4M$k3XT%1WjY%hB3_&J5
Wg',)&o'bqK"(Ddo*)&X>2)]Kb:*??1C+!;^M+sJ6W,UFca-R^Dm.P!&$/M/S-0/,+81,CaD2)[?O3&r
u[4$5Vg5!M:u6:4+.77Ka:84cEH9MA/U:JXea;H$Op<``C+=^#$7?!^lG?t!MSA7]@cBPD3sCM[j*DfB
]:FEMbNG^4U^I"$QqJV&N-KnkJ@MMmFQNfT<cPE_>uQ^F21S=Q7DTV8*TUnsrdWN*##Xfek3~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
46.8573 157.998 mo
44.607 157.998 42.2545 156.442 41.1482 155.823 cv
3.89373 135.097 li
3.20163 134.711 2.88724 134.221 2.88778 133.755 cv
2.88742 133.302 3.18372 132.822 3.84163 132.43 cv
3.84199 132.43 li
33.9524 114.458 li
34.2105 114.303 34.5044 114.177 34.8206 114.079 cv
35.204 113.977 li
35.6141 113.885 36.0498 113.838 36.4851 113.838 cv
36.4866 113.838 36.4883 113.838 36.4898 113.838 cv
36.4911 113.838 36.4923 113.838 36.4936 113.838 cv
37.1506 113.838 37.806 113.945 38.3702 114.157 cv
47.6074 119.344 li
76.7029 135.855 li
76.7034 135.855 li
76.7038 135.856 li
77.2355 136.151 78.0526 136.488 78.7322 136.893 cv
79.4185 137.297 79.9248 137.769 79.9138 138.242 cv
79.9168 138.596 79.6508 139.049 78.8581 139.589 cv
48.8839 157.483 li
47.7282 157.916 li
47.4441 157.972 47.1556 157.998 46.8651 157.998 cv
46.8625 157.998 46.8599 157.998 46.8573 157.998 cv
53.5052 149.156 mo
53.5791 149.195 li
71.5594 138.64 li
34.7675 118.412 li
15.8725 129.1 li
53.5052 149.156 li
level3{
gsave
clp
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,T@^'-64---m'Q3.Nfl7/KuD>0-hhD0d\:K1ajdQ2C^3W3%QW]3\E&c4YSSj5;G"p5r1@u6o?n'7Q3:,
83&^28io-89g(Z?:Hq)E;*dMK<'s%R<^fIX=@Ym^>=hEe?;+&n?qsJt@o-#'APuG-B2hk3Bi\::CKFX?
D-:'FDd-HKEEulRF'`5XFC8M]G%+qdG[t@kH=^[qHtR+$Iq`U+J88p2Jo#68K5GH=Kl:lDL2_)ILiRMQ
MKEnXN-9=aNHfUgO*PsnOF)6uP'hU(PC@m/Q%+66Q@XN=R"BlER=g)KRtZMTS;)_ZSVW"aSr&4gT8SLo
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,:"N\,pjrd-R^Al.4Qi!/1iG+/h\k30JP=<1GgpG2)[?O2`NcW3BB5`4?Yhk5!M7s5X@\&6UX=277Ka:
7n6*@8P)NI9MA/T:/4S\:f("e;c?Xp<E3(#='&L,=^#$7>[:ZB?XI2K@:E_VA7T7_AnG[gBP;*oC2.O"
CM[g(D/O60DfBZ8EH6)@F)uDEFEM_LG'A.TG^4R\H@(!dI=6QoIt)ruJ:W9'JqAT,K7no3KnY58L51P?
LkpnEMMd=MN/W^SNK&sYO,o?_OH>TeP*1ukPEV5qQ'IW"QBml(R$a8.R@0M4S"#n:S=H+>SXl=BSt;OF
~>
<~)B0V8*$$%@*ZlIG+!;[L+X/*T,:"N\,pjrd-R^Al.4Qet.kE5'/M8Y/0/,(70etL>1,C^C1c7-K2E*QS
3&ioY3]]>a4?Pbi5!D1q5X7V$6:+%,6psI47Rfm<84Z<E8kViO9heAX:JXe`;,L4h;c?Xp<E3(#<`W:'
='/R-=^#!5>?kE=?!U`B?=.&I?t!JQ@UinYA7T4^AS,OeB4tsmBkhBuCMR^%Ci!p)D/O60Df9Q5E,fl<
EcQ5BFEDYJG'8(RG^+IXH$O^^H[C*dI!g?jIXZ`pIt*!!JUrB'JqAT+K7ei1KnY57L5(J=LkpkCM2@+I
~>
<~)]Th<*?H7D+!;[K+<_mP+sS<X,UFca-R^Ak-n-Sp.P!##/1iG+/h\k30JP:;1,C^C1c7-K2E*QR2`NcW
3B9,]4$,Pe4Zttm5<hCu5s[h(6UO7077B[87n6*@8P)NI92&&S:/4S\:f("d;GpFl<)cjt<`W:'=BJ^/
=^#!5>?b<:>[:WA?=.&I?smAN@:E\U@q9+]AS#FbAnPaiBP;'nBkhBuCMR^%Ci!p)D/O60Df9Q5E,fl<
EcQ2@F)uGFF`hhLG'8(RG^+IXH$O^^H[C*dI!g?jIXZ`pIt*!!JUrB'JqAW-KS5#3KnY57L5(G;LPLY?
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E6'!WiE)!WiE*!s8W."9\i2"U,&6"pP8:#6tJ>#
RLeE$4@4M$k*OR%1WjY%hK9a&J>]i',)#n'GV>u()Ic((`4,.)B0Y9*??1B+!2UJ+X/-U,UF``-R^Al.
Olr!/1iG+0/,(71,C^C2)R9N3&ioZ4$,Pf5!D1r5sdq,~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
47.0883 158.156 mo
45.2533 157.893 li
43.6807 157.369 li
3.82227 135.229 li
2.83801 134.559 li
2.76531 134.447 2.70802 134.331 2.66672 134.212 cv
2.774 133.246 li
3.76511 132.301 li
33.8755 114.33 li
34.8206 114.079 li
34.5044 114.177 34.2105 114.303 33.9524 114.458 cv
3.84199 132.43 li
3.84163 132.43 li
3.18372 132.822 2.88742 133.302 2.88778 133.755 cv
2.88724 134.221 3.20163 134.711 3.89373 135.097 cv
41.1482 155.823 li
42.2545 156.442 44.607 157.998 46.8573 157.998 cv
46.8599 157.998 46.8625 157.998 46.8651 157.998 cv
47.1556 157.998 47.4441 157.972 47.7282 157.916 cv
47.0883 158.156 li
48.8839 157.483 mo
78.8581 139.589 li
79.6508 139.049 79.9168 138.596 79.9138 138.242 cv
79.9248 137.769 79.4185 137.297 78.7322 136.893 cv
78.0526 136.488 77.2355 136.151 76.7038 135.856 cv
76.7034 135.855 li
76.7029 135.855 li
47.6074 119.344 li
76.7778 135.725 li
79.605 137.179 li
79.9966 138.358 li
79.4727 139.276 li
49.1865 157.369 li
48.8839 157.483 li
53.5791 149.195 mo
53.5052 149.156 li
15.8725 129.1 li
34.7675 118.412 li
71.5594 138.64 li
53.5791 149.195 li
34.7686 118.584 mo
16.1842 129.096 li
53.5757 149.023 li
71.2558 138.645 li
34.7686 118.584 li
38.3702 114.157 mo
37.806 113.945 37.1506 113.838 36.4936 113.838 cv
36.4923 113.838 36.4911 113.838 36.4898 113.838 cv
36.4883 113.838 36.4866 113.838 36.4851 113.838 cv
36.0498 113.838 35.6141 113.885 35.204 113.977 cv
36.2076 113.711 li
38.0424 113.973 li
38.3702 114.157 li
level3{
gsave
clp
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~L2_)ILiRMQM0*eWMfs4_NH]OeO*PsnOEu0tP'hU(PC7g-P^e-5Q@OH<Q\'cDR=g)JRY?AQS;)_ZSVW"a
Sr&4gT8SLnTT"b!ToFt'UQ1=0UlUO6V3-g>VNR$DVj*<LVj3EQW0WWXWL&i_WgK&fX-o8mXI>JtXIGT%
Xdkf-Y+;&5YF_8=Yb.JDYb7SKZ([bQZD*tYZD+"^Z_O4fZ_X:k[&'Lr[ABY#[AK_([\oq/\#6(5\#?.:
\>c=@\Z)IE\Z2OJ\Z2RM\uVaQ\uVaT];qmX]<%s\]WA'`]WA*c]r\3f]r\6i^9+Em^9+Ep^TFQt^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[77.0988 6.81423 6.81429 -77.0981 2.81316 132.501 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Knb>;LPUbBLl$tGMMmCON/`gWNfT6^O-#HcOckljP*;)nPE_;sQ'R`%QC!r*R$jA1R@9S6S"-"=S=Q4A
SXl@DSt;RHT:_dLTV/!PU8"EXUSFW\Unji`V5:&dVP^5fVP^8hVl-JlW2Q\pWMuntWiE,#X/i;%X/i>'
XK8M*Xf\_.Y-+q2YHP.5YHP.6Yct@:Z*CR=Z*CR>ZEgdAZEgdBZa7!F['[3I['[3J[C*EN[^NWQ[^NWR
\$riU\@B&Y\@B&Y\@B&Y\[f8]\[f8]]"5Ja]"5Ja]=Y\e]=Y\e]Y(ni]Y(ni]tM+m]tM+m^:q=q^:q=q
~>
<~DfBZ8EH6)@F*)MHF`qqOG'A.TG^4R[H$Xd`H[L3gI!pElIXcisIt3'#JV&K*JqJ]/KS>,6Knb>;LPUbB
LkpnEMMd=MMi3OQN/WaUNK&sYNfK0]OH>TeOcbfiPEV5qPa%GuQ'IZ$QBml(Q^=),R$a;0R@0M4R[T_8
S"#n;S=H+?SXl=CSt;OGT:_aKTV.sOTqS0RTqS0SU8"BWUSFT[Unjf^Unjf_V5:#cVP^5fVP^5gVl-Gk
W2QYnW2QYnWMukrWMukrWiE)!WiE)!WiE)!X/i;%X/i;%X/i;%X/i;%X/i;%XK8M)XK8M)XK8M)XK8M)
~>
<~DfBZ8EH6)?EcZ;DFEM_KF`qqPGBe@WG^4R\H@(!cH[L3hI=?WoIXcitJ:W9&JV&K*JqJ]/KS>,6Knb>:
L5(J=LPL\AM2@+IMMd=MN/WaUNK&sYNfK0]O,oBaOH>TeOcbfiP*2#mPEV5qPa%GuQ'IZ$QBml(Q^=),
R$a8/R@9S6S"#n;S=H+?SXl=BSXl=CSt;OGT:_aKTV.sNTV.sOTqS0SU8"BVU8"BWUSFT[Unjf^Unjf^
Unjf^V5:#bV5:#bVP^5fVP^5fVP^5fVl-GjVl-GjVl-GjW2QYnW2QYnWMukrWMukrWMukrWiE)!WiE)!
~>
<~'c%Q$(Dmu,)&aD4)]Th<*?H:F+<_pQ,:"Q]-7:/h-n-Vq.kE8(/h\n40etL?1GgpG2E*TU3]fDc4[)%o
5X7V%6UO717Rp!@8kM`M9hnJ\;,L4i<)lt#='/U/>?kH??=.)K@Uiq[AnPdkC27X&DJsK6EcZ>FG'A1V
H@($fIXcm"K7nr5LPUeEN/`jYOHG]iQ'Rc(R@9V8SY)RKU8+N\VPgAlWiN5'Y-5(7ZEppG[^WcW]">Vg
]tV7s_8=+-`5Ta:aN2KFb0%oNbg"DXcd0tbdF-IleCE+#f@S[-g"G*5gY:N=h;-rEhr!ANio9"YjQ,Fa
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
207 23 mo
387 23 li
387 73 li
207 73 li
207 23 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
207 23 mo
207 23.5 li
386.5 23.5 li
386.5 72.5 li
207.5 72.5 li
207.5 23 li
207 23 li
207 23.5 li
207 23 li
206.5 23 li
206.5 73.5 li
387.5 73.5 li
387.5 22.5 li
206.5 22.5 li
206.5 23 li
207 23 li
cp
.858915 .614038 3.0518e-05 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /C putdup 101 /e putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WFNAKV+ArialMT /ArialMT findfont ct_VMDictPut/WFNAKV+ArialMT*1 [67{/.notdef}rp /C 33{/.notdef}rp /e 6{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]WFNAKV+ArialMT nfWFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf257.985 53 mo(Controller)sh437.5 23 mo
592.5 23 li
592.5 73 li
437.5 73 li
437.5 23 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
437.5 23 mo
437.5 23.5 li
592 23.5 li
592 72.5 li
438 72.5 li
438 23 li
437.5 23 li
437.5 23.5 li
437.5 23 li
437 23 li
437 73.5 li
593 73.5 li
593 22.5 li
437 22.5 li
437 23 li
437.5 23 li
cp
.858915 .614038 3.0518e-05 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginWFNAKV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-systemdict /gcheck known {setglobal} if end {end} ifendWFNAKV+ArialMT /Encoding getdup 77 /M putdup 100 /d putpop%ADOEndSubsetFont
/WFNAKV+ArialMT*1 [67{/.notdef}rp /C 9{/.notdef}rp /M 22{/.notdef}rp /d /e 6{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]WFNAKV+ArialMT nfWFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf490.487 53 mo(Model)sh206 144.5 mo
386 144.5 li
386 189.5 li
206 189.5 li
206 144.5 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
206 144.5 mo
206 145 li
385.5 145 li
385.5 189 li
206.5 189 li
206.5 144.5 li
206 144.5 li
206 145 li
206 144.5 li
205.5 144.5 li
205.5 190 li
386.5 190 li
386.5 144 li
205.5 144 li
205.5 144.5 li
206 144.5 li
cp
.858915 .614038 3.0518e-05 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginWFNAKV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/V <1C60D8A8C9B64EDFFB759009DDECF50F0319B844741E3CEB2C0ABDDB89E7563FC0955B866D61D9CC736D3C346A5623E20C1E4D> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/w <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |-systemdict /gcheck known {setglobal} if end {end} ifendWFNAKV+ArialMT /Encoding getdup 86 /V putdup 105 /i putdup 119 /w putpop%ADOEndSubsetFont
/WFNAKV+ArialMT*1 [67{/.notdef}rp /C 9{/.notdef}rp /M 8{/.notdef}rp /V 13{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]WFNAKV+ArialMT nfWFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf276.655 172 mo(View)[11.6807 3.99902 10.0107 0 ]xsh387 51.5 mo
410 51.5 li
410 50.5 li
387 50.5 li
cp
410 51.5 mo
412.25 51.5 li
433 51.5 li
433 50.5 li
412.25 50.5 li
410 50.5 li
410 51.5 li
cp
433 51.5 mo
436.5 51.5 li
436.5 50.5 li
433 50.5 li
cp
f
435.5 51 mo
429.5 54 li
429.5 48 li
435.5 51 li
cp
f
435.5 51 mo
435.276 50.5528 li
430 53.191 li
430 48.809 li
435.276 51.4472 li
435.5 51 li
435.276 50.5528 li
435.5 51 li
435.724 50.5528 li
429 47.191 li
429 54.809 li
436.618 51 li
435.724 50.5528 li
435.5 51 li
cp
f
296.5 73 mo
296.5 96 li
297.5 96 li
297.5 73 li
cp
296.5 96 mo
296.5 108.25 li
296 108.25 li
295.5 108.25 li
295.5 118 li
296.5 118 li
296.5 109.25 li
297 109.25 li
297.5 109.25 li
297.5 96 li
296.5 96 li
cp
295.5 118 mo
295.5 141 li
296.5 141 li
296.5 118 li
cp
295.5 141 mo
295.5 143.5 li
296.5 143.5 li
296.5 141 li
cp
f
296 142.5 mo
293 136.5 li
299 136.5 li
296 142.5 li
cp
f
296 142.5 mo
296.447 142.276 li
293.809 137 li
298.191 137 li
295.553 142.276 li
296 142.5 li
296.447 142.276 li
296 142.5 li
296.447 142.724 li
299.809 136 li
292.191 136 li
296 143.618 li
296.447 142.724 li
296 142.5 li
cp
f
265.5 96.75 mo
327.5 96.75 li
327.5 116.75 li
265.5 116.75 li
265.5 96.75 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
WFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf270.484 110.75 mo(render)sh206 166.5 mo
183 166.5 li
183 167.5 li
206 167.5 li
cp
183 166.5 mo
160 166.5 li
160 167.5 li
183 167.5 li
cp
160 166.5 mo
151.5 166.5 li
137 166.5 li
137 167.5 li
151.5 167.5 li
160 167.5 li
160 166.5 li
cp
137 166.5 mo
114 166.5 li
114 167.5 li
137 167.5 li
cp
114 166.5 mo
97 166.5 li
97 167.5 li
114 167.5 li
cp
f
206 47.5 mo
183 47.5 li
183 48.5 li
206 48.5 li
cp
183 47.5 mo
160 47.5 li
160 48.5 li
183 48.5 li
cp
160 47.5 mo
137 47.5 li
137 48.5 li
160 48.5 li
cp
137 47.5 mo
114 47.5 li
114 48.5 li
137 48.5 li
cp
114 47.5 mo
92.5 47.5 li
92.5 50 li
93.5 50 li
93.5 48.5 li
114 48.5 li
114 47.5 li
cp
92.5 50 mo
92.5 73 li
93.5 73 li
93.5 50 li
cp
92.5 73 mo
92.5 82 li
93.5 82 li
93.5 73 li
cp
f
205 48 mo
199 51 li
199 45 li
205 48 li
cp
f
205 48 mo
204.776 47.5528 li
199.5 50.191 li
199.5 45.809 li
204.776 48.4472 li
205 48 li
204.776 47.5528 li
205 48 li
205.224 47.5528 li
198.5 44.191 li
198.5 51.809 li
206.118 48 li
205.224 47.5528 li
205 48 li
cp
f
722.091 25.2578 mo
722.591 25.2578 li
722.592 28.3881 721.289 31.3553 718.992 34.0097 cv
715.543 37.9943 709.86 41.326 702.742 43.6816 cv
695.623 46.0348 687.063 47.404 677.852 47.4043 cv
665.569 47.4029 654.445 44.9719 646.349 41.0123 cv
642.302 39.031 639.008 36.6667 636.709 34.0094 cv
634.412 31.355 633.11 28.3879 633.111 25.2578 cv
633.11 22.126 634.412 19.1573 636.709 16.5016 cv
640.158 12.5155 645.841 9.1825 652.96 6.82619 cv
660.079 4.47222 668.64 3.10286 677.852 3.1025 cv
690.134 3.10395 701.257 5.53515 709.352 9.49617 cv
713.4 11.478 716.694 13.843 718.992 16.5016 cv
721.289 19.1573 722.592 22.126 722.591 25.2578 cv
722.091 25.2578 li
721.591 25.2578 li
721.59 22.4098 720.416 19.6815 718.236 17.1556 cv
714.968 13.3693 709.431 10.0891 702.428 7.7757 cv
695.426 5.45972 686.964 4.1023 677.852 4.10248 cv
665.702 4.10121 654.705 6.51758 646.789 10.3943 cv
642.83 12.3311 639.645 14.6325 637.466 17.1556 cv
635.285 19.6815 634.112 22.4098 634.111 25.2578 cv
634.112 28.1038 635.285 30.8305 637.466 33.3554 cv
640.733 37.1397 646.27 40.419 653.274 42.7319 cv
660.276 45.0473 668.739 46.4045 677.852 46.4044 cv
690 46.4056 700.997 43.9898 708.913 40.1143 cv
712.871 38.1781 716.057 35.8776 718.236 33.3558 cv
720.416 30.8309 721.59 28.1041 721.591 25.2578 cv
722.091 25.2578 li
f
721.776 60.6884 mo
722.26 60.8131 li
720.813 66.3896 715.33 71.1797 707.434 74.6156 cv
699.528 78.0486 689.158 80.1221 677.788 80.1231 cv
666.134 80.122 655.527 77.9447 647.547 74.3574 cv
643.558 72.5628 640.223 70.4152 637.744 67.994 cv
635.266 65.5738 633.64 62.8696 633.119 59.9782 cv
633.611 59.8896 li
634.111 59.8965 li
634.111 59.8988 634.098 60.7982 634.08 62.1611 cv
634.024 66.2462 633.913 74.4929 633.913 74.9638 cv
633.914 77.8105 635.091 80.5377 637.278 83.0629 cv
640.556 86.8481 646.109 90.1277 653.134 92.4408 cv
660.158 94.7564 668.647 96.1137 677.788 96.1133 cv
689.975 96.1147 700.912 93.74 708.759 89.9068 cv
712.683 87.9917 715.831 85.7127 717.982 83.2073 cv
720.134 80.699 721.29 77.9831 721.291 75.1347 cv
721.291 75.1387 li
721.291 75.1342 li
721.291 75.0215 li
721.291 74.2265 721.287 70.6428 721.284 67.2586 cv
721.281 65.5666 721.28 63.9242 721.278 62.7048 cv
721.277 61.4854 721.276 60.6891 721.276 60.6891 cv
721.776 60.6884 li
722.26 60.8131 li
721.776 60.6884 li
722.276 60.6879 li
722.276 60.6881 722.291 73.4289 722.291 75.0215 cv
722.291 75.1353 li
722.291 75.1315 li
722.291 75.1347 li
722.292 78.2624 721.01 81.2194 718.741 83.8589 cv
715.333 87.8208 709.71 91.1176 702.635 93.4439 cv
695.559 95.7676 687.026 97.1129 677.788 97.1133 cv
665.468 97.1118 654.311 94.6812 646.191 90.7214 cv
642.131 88.7401 638.828 86.3758 636.523 83.7181 cv
634.219 81.0633 632.912 78.0954 632.913 74.9638 cv
632.913 74.3046 633.111 59.8862 633.111 59.8827 cv
634.103 59.801 li
634.577 62.4366 636.072 64.9624 638.443 67.2787 cv
645.546 74.2388 660.496 79.1327 677.788 79.1231 cv
689.036 79.124 699.288 77.0651 707.035 73.6984 cv
714.793 70.3346 719.995 65.6572 721.292 60.564 cv
722.276 60.6879 li
721.776 60.6884 li
f
721.776 44.0976 mo
722.26 44.2221 li
720.813 49.7999 715.33 54.5896 707.434 58.025 cv
699.529 61.4576 689.159 63.5303 677.789 63.5312 cv
666.135 63.5303 655.528 61.3534 647.548 57.7666 cv
643.559 55.972 640.224 53.8246 637.745 51.4034 cv
635.267 48.9834 633.641 46.279 633.12 43.3874 cv
633.612 43.2988 li
634.112 43.3057 li
634.112 43.308 634.099 44.2074 634.081 45.5704 cv
634.025 49.6559 633.914 57.9034 633.914 58.375 cv
633.915 61.2202 635.092 63.9467 637.279 66.4716 cv
640.557 70.2561 646.111 73.5355 653.135 75.8487 cv
660.159 78.1643 668.649 79.5218 677.789 79.5214 cv
689.976 79.5229 700.913 77.1486 708.76 73.3159 cv
712.684 71.4011 715.832 69.1224 717.983 66.6172 cv
720.135 64.1089 721.291 61.3934 721.292 58.5448 cv
721.292 58.0845 721.288 54.472 721.284 50.9757 cv
721.28 47.4794 721.276 44.0983 721.276 44.0982 cv
721.776 44.0976 li
722.26 44.2221 li
721.776 44.0976 li
722.276 44.0971 li
722.276 44.0973 722.292 57.621 722.292 58.5448 cv
722.293 61.6727 721.011 64.6295 718.742 67.2688 cv
715.334 71.2305 709.711 74.5268 702.636 76.8527 cv
695.56 79.1761 687.027 80.5212 677.789 80.5216 cv
665.469 80.5201 654.312 78.0889 646.192 74.1293 cv
642.133 72.148 638.829 69.7839 636.524 67.1268 cv
634.22 64.4725 632.913 61.5053 632.914 58.375 cv
632.914 57.7147 633.112 43.2954 633.112 43.2919 cv
634.104 43.2102 li
634.578 45.846 636.073 48.3719 638.444 50.6881 cv
645.547 57.648 660.497 62.541 677.789 62.5312 cv
689.036 62.5321 699.288 60.4741 707.036 57.1078 cv
714.793 53.7443 719.995 49.0673 721.292 43.9732 cv
722.276 44.0971 li
721.776 44.0976 li
f
721.776 27.5079 mo
722.26 27.6324 li
720.813 33.2091 715.33 37.9988 707.434 41.4345 cv
699.528 44.8673 689.158 46.9405 677.788 46.9414 cv
666.134 46.9404 655.527 44.7633 647.547 41.1762 cv
643.558 39.3815 640.223 37.2342 637.744 34.8127 cv
635.266 32.3926 633.64 29.6882 633.119 26.7966 cv
633.611 26.708 li
634.111 26.7149 li
634.111 26.7172 634.098 27.6168 634.08 28.9796 cv
634.024 33.0655 633.913 41.3133 633.913 41.7842 cv
633.914 44.6302 635.091 47.357 637.278 49.882 cv
640.556 53.6667 646.109 56.9459 653.134 59.2586 cv
660.158 61.5739 668.647 62.931 677.788 62.9306 cv
689.975 62.932 700.912 60.558 708.759 56.7254 cv
712.683 54.8105 715.831 52.5318 717.982 50.0264 cv
720.134 47.5179 721.29 44.802 721.291 41.9531 cv
721.291 41.9569 li
721.291 41.9526 li
721.291 41.8399 li
721.291 41.0454 721.287 37.4619 721.284 34.0779 cv
721.281 32.3859 721.28 30.7435 721.278 29.5241 cv
721.277 28.3047 721.276 27.5084 721.276 27.5084 cv
721.776 27.5079 li
722.26 27.6324 li
721.776 27.5079 li
722.276 27.5072 li
722.276 27.5074 722.291 40.2482 722.291 41.8399 cv
722.291 41.9537 li
722.291 41.9497 li
722.291 41.9531 li
722.292 45.0813 721.01 48.0386 718.741 50.678 cv
715.333 54.6399 709.71 57.9363 702.635 60.2621 cv
695.559 62.5855 687.026 63.9304 677.788 63.9306 cv
665.468 63.9293 654.311 61.4988 646.191 57.5396 cv
642.131 55.5585 638.828 53.1946 636.523 50.5371 cv
634.219 47.8826 632.912 44.9153 632.913 41.7842 cv
632.913 41.1248 633.111 26.7045 633.111 26.7011 cv
634.103 26.6193 li
634.577 29.2551 636.072 31.7811 638.443 34.0975 cv
645.546 41.0575 660.496 45.951 677.788 45.9415 cv
689.036 45.9424 699.288 43.8838 707.035 40.5172 cv
714.793 37.1535 719.995 32.4765 721.292 27.3833 cv
722.276 27.5072 li
721.776 27.5079 li
f
677.737 62.5312 mo
660.468 62.5312 645.54 57.6407 638.444 50.6881 cv
636.073 48.3719 634.578 45.846 634.104 43.2102 cv
634.014 43.2176 li
633.947 42.7435 633.913 42.2655 633.913 41.7842 cv
633.913 41.345 634.01 34.1415 634.068 29.8584 cv
634.68 31.3064 635.573 32.6963 636.709 34.0094 cv
639.008 36.6667 642.302 39.031 646.349 41.0123 cv
654.445 44.9719 665.569 47.4029 677.852 47.4043 cv
687.063 47.404 695.623 46.0348 702.742 43.6816 cv
709.86 41.326 715.543 37.9943 718.992 34.0097 cv
719.926 32.9309 720.695 31.8001 721.28 30.628 cv
721.281 31.6581 721.282 32.855 721.284 34.0779 cv
721.287 37.4619 721.291 41.0454 721.291 41.8399 cv
721.291 41.9526 li
721.291 41.9569 li
721.291 41.9531 li
721.29 43.7079 720.852 45.4123 720.012 47.0488 cv
717.753 50.9315 713.201 54.4345 707.036 57.1078 cv
699.289 60.4734 689.041 62.5312 677.796 62.5312 cv
677.794 62.5312 677.791 62.5312 677.789 62.5312 cv
677.771 62.5312 677.755 62.5312 677.737 62.5312 cv
level3{
gsave
clp
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*Psn
O*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*Psn
O*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*Psn
O*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*PsnO*Psn
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O*PsnNH]OeMfj+]M0!_VLN.;MKl:lEK5PQ?Jo#68J8/g0IVEL*HtR("H"CRoG@P.gF^\_`F'i;YEEulR
Dd-HKD-:$ECKFU>BiS18AlDY0@o6,)@8B]#?;+&n>=hEe=@Pg]<CB:V;aNhO:d@;H:-CfA9056983&^2
7Q3:,6T$b%5r1=t4u"hn4>/Ag3@ui`2_-EZ1asmS1+"CL0-hhD/0Z;=.Nfl7-lsH1,odp*+rVF$+;c!s
*YoRm*#'.g)A<eb(D.8['b:iU'+PKP&I]'J%LNOC$j[+=$3pe9#R(A3"p>&/"9S`+!s&E&!<<*"!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!<<*"!s&E&"9S`+"p>&/#R(A3$3pe9$j[+=%LNOC&I]'J'+PKP'b:iU(D.8[)A<eb*#'.g*YoRm+;c!
s+rVF$,odp*-lsH1.Nfl7/0Z;=0-hhD1+"CL1asmS2_-EZ3@ui`4>/Ag4u"hn5r1=t6T$b%7Q3:,83&^
290569:-CfA:d@;H;aNhO<CB:V=@Pg]>=hEe?;+&n@8B]#@o6,)AlDY0BiS18CKFU>D-:$EDd-HKEEul
RF'i;YF^\_`G@P.gH"CRoHtR("IVEL*J8/g0Jo#68K5PQ?Kl:lELN.;MM0!_VMfj+]NH]OeO*Psn~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0225 .6966 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~NfK-[NfK-[NJrdRMM[.FLPCP;KS+o/Jq8K'It)oqI!g9dG^+FUF`heIF)l8>E,TW2D/=!'C2%?oAn>L_
@UW\P?<pf?>$4s/<`E$s;Gg7d:/4MW8kDQD7n,p86UF((5<_4n4?GSa3&``Q1c$mB0eb74/1W5#.4?Sl
-7'l\+X%sM*Zc=A)]K\5(`*r&'bh;o&ePZc%LigT$OR1H#R:S="U"r1!s/N)z!<WE-#7(YF%1a$a'c%Z
+*$-1F,:4fg.kNG11c@<S4?c"s6q0^>9i"Vb<EE=.?=@;SB5)-tDK'T:F`r"UI"$QrJqJc3Ll.+M~>
<~G^+IXG^+IXGBS+OFE;JCEH#l8DJj?/Chmg$Bk_9pB4kgfA7T1Z@:<PN?X@#C>[(B7=]ea,<`N*u;c6Ii
:esk]9M7uL84Q-<6pj=.5s[b#5!;"i3]]8\3&``Q2)I*E1,1I:0.nh./1W2".4?Pj,pX`\+sA*P+!)ID
*#on9)&X8-()@W!',)#l&ePZc%h9'Y%1EUP$4-tD#6tG;"U"r2!s8W,!<<*"z!!*-'"9f#9#n%.O%hK?
e'G_K&)]TnA+X86Z.4Ql#0/54=2E*WW4?c"s6q'U<9M\J_<)m"%>$P??@:EbYB5)'qD/O92EccGJ~>
<~GB\7TGB\7TG'.nKF)uABEH#l8DJj?/Chmg$Bk_9pB4kggAS#C^@U`bR?sd5G?!LT;>$4s0=&r=$<)Z[m
;,C(a9h\2P8OuBB7R]^46:*t'5<h=p4$,J`3B/rU2Dm<I1G^d@0J>%2/M&D&.Ocbo-RL,b,9e<T+<M[H
*??+>)]K\5(`4&)'bqDr'+tlg&.]6[%1EUP$4-tD#6tG;"U"r2!s8W,!<<*"z!!*-'"9f#9#n%.O&.oQ
j()Ro.*$$+E+s\K`.P!)'0JbLB2`Ni[5!VD$7Rp$C9i+\c<E<4)>?tQC@Uit]B5)'qD/O92EcZ>G~>
<~+<VdL+<VdK*ZZ4?)]BS2(D[c$'GD,m&J,Ka%LrpV$O[:J#RCY>"pP57"U"r1!s8T+!WiE)!<E3%!<<*"
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E6'!WrQ/"pP>>$OmRW&ebuq)&jP:~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
677.852 47.4043 mo
665.569 47.4029 654.445 44.9719 646.349 41.0123 cv
642.302 39.031 639.008 36.6667 636.709 34.0094 cv
635.573 32.6963 634.68 31.3064 634.068 29.8584 cv
634.068 29.8309 634.069 29.8042 634.069 29.777 cv
634.891 31.5574 636.139 33.2446 637.744 34.8127 cv
640.223 37.2342 643.558 39.3815 647.547 41.1762 cv
655.527 44.7633 666.134 46.9404 677.788 46.9414 cv
689.158 46.9405 699.528 44.8673 707.434 41.4345 cv
708.972 40.7654 710.418 40.045 711.76 39.2774 cv
716.335 36.76 719.657 33.7247 721.279 30.3846 cv
721.279 30.4647 721.279 30.5458 721.28 30.628 cv
720.695 31.8001 719.926 32.9309 718.992 34.0097 cv
715.543 37.9943 709.86 41.326 702.742 43.6816 cv
695.623 46.0348 687.063 47.404 677.852 47.4043 cv
level3{
gsave
clp
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^TFR!^TFQs^9+Eo^9+Em]r\3g]r\3e]WA*a]<%s]];qmY\uVaS\uVaQ\Z2OK\Z2OH\>c@B\>Z7<\#?.7
[\oq0[AK_([ABY#[%sFpZ_O4hZD4(bZD*t[Z([bSZ(R\LYb.JDYF_8<Y+;#3Xdkf+XI>N"X-o8oWgK&g
WL&i`W0WWXVj3EQVN[-IV36pBUl^X:UQ:C2U5k1+To=k"T8SLoSr&4gSVMq_RtcSWRY6;OR"BlFQ@XQ?
Q%+67PC@m/P'hU(OEu0sNd5gkN-BFdMKO"[Li[SSL2h2LKl:lDK5GH<JS]-6J8/g/IV<F(HY-muH":Im
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~H":ImHY-muIV<F(J8/g/JS]-6K5GH<Kl:lDL2h2LLi[SSMKO"[N-BFdNd5gkOEu0sP'hU(PC@m/Q%+67
Q@XQ?R"BlFRY6;ORtcSWSVMq_Sr&4gT8SLoTo=k"U5k1+UQ:C2Ul^X:V36pBVN[-IVj3EQW0WWXWL&i`
WgK&gX-o8oXI>N"Xdkf+Y+;#3YF_8<Yb.JDZ(R\LZ([bSZD*t[ZD4(bZ_O4h[%sFp[ABY#[AK_([\oq0
\#?.7\>Z7<\>c@B\Z2OH\Z2OK\uVaQ\uVaS];qmY]<%s]]WA*a]r\3e]r\3g^9+Em^9+Eo^TFQs^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0225 .6966 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^:q=q^:q=q^:q=q]tM+m]tD"j]Y(nh]=PSb]"5J`\[f8]\@B&Y\@B#W\$riT[^NTO[C!<J['[0GZa-mB
Z*CR=Z*:I:Yct@8YHG%2Xf\_,XK8J'WiE(uWMuhpW2HPjVP^2dV50o_USFQXU7n9STV%jJSt2FCS=?":
R[TY3Q^=#'Q'IStP*1ujOcYWaNfB!UMi*@JLkg_>KnY25K7\]+J:N0"IXQTjH?jd^I"$QqJqJc3LP^nI
NfT<cPEhE"R@9V9SXuIIU8"EYV5C,fW2ZesX/rG+YHP17Z*CR>Za@*H[C3QR\@B&Z\[oA`]=beh]tM.o
~>
<~XK8M)XK8M)XK8M)XK8M)XK/D&X/i;%X/i;%WiE)!WiE)!WMukrWMuhpW2HPkVl-DhVPU,cUnjc\US=KW
U8"BUTqJ'OT:_aISt2FCS=H+=R[TY4R$a8-Q^=#(QBd`"P`q8nP*(ifO,o<]NfB!VMi3LNM26tCL5(G:
KS4u0JUrB&It)orI=6KiH[9s_H$FOVG'.nKF)l8?E,TW3D/=$)CMITuBP1siARo=_AnYmoCi+*1EccGJ
H$OabIXcm!K7nu7Ll.+LNfK0^P*;,qQC!u+R@B_;St;RITq\9UUSO`_VPg>jWMuksWiE)"X/i;%XK8M)
~>
<~WiE)!WiE)!WiE)!WMukrWMlboW2QYnW2HPkVl-GiVP^5fV5:#bV5:#bV50o_Unjc\US=KWU8"?TTqJ'O
T:_aISt2FCSXl=AS=?":R@0J1R$a5+Q'IW!Pa%AqPEM)kOcb`eOH5H`NfB!VN/NRNM26tCLPCP<KnP,3
K7ec,J:N0"IXZ]mH[C*cH?jaZGBS.PF`_\GEcH)=E,TW3D/=$)CMITuBkV0mAn>OcB5)'qCi+*1EH?5F
GBeF\I"$QqJqJ`2L51SBN/WdXOHGZgPE_>tQ^F20S=H.@StDXJTq\9UUSO]^V5:#cVPg>iW2QYnWMunt
~>
<~jlPUcjlPUbj5T%Vi8<DIgtUT;g"=p-e^W'rdEp1`bfn8PaN)<>_ns7)^:_(g\@/fOZ*:C5X/W"nUS=ER
SXZ(8QB[PoNf8jOL4k21IslZiG]n1MEH#f3CM@EnA7AtS?<g]<=BAL%;Gg4b9M7rJ7n,p769mau4?GS`
2`<KK1,1I9/hJV).4?Pj,pOTW+<MXF*#fe7)&O/+().Dq&eP]e%h9'Y$k!FN$4."G$OdIT&J>co(`FA8
+<i*[.P3;/1cIHY5XS"49M\Pd=^5<CAnl1&Fa8CdKo(eOQC=D=V5^T$[(*`^_SsR<bg+Vcf%8X1hVdAQ
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
677.799 62.9306 mo
677.796 62.9306 677.791 62.9306 677.788 62.9306 cv
668.647 62.931 660.158 61.5739 653.134 59.2586 cv
646.109 56.9459 640.556 53.6667 637.278 49.882 cv
635.461 47.784 634.341 45.5468 634.014 43.2176 cv
634.104 43.2102 li
634.578 45.846 636.073 48.3719 638.444 50.6881 cv
645.54 57.6407 660.468 62.5312 677.737 62.5312 cv
677.755 62.5312 677.771 62.5312 677.789 62.5312 cv
677.791 62.5312 677.794 62.5312 677.796 62.5312 cv
689.041 62.5312 699.289 60.4734 707.036 57.1078 cv
713.201 54.4345 717.753 50.9315 720.012 47.0488 cv
719.488 48.0691 718.809 49.0631 717.982 50.0264 cv
715.831 52.5318 712.683 54.8105 708.759 56.7254 cv
700.914 60.5571 689.982 62.9306 677.799 62.9306 cv
level3{
gsave
clp
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
678.058 62.957 mo
653.551 62.957 633.683 53.6171 633.683 42.0986 cv
633.683 41.4756 633.881 27.5703 633.881 27.5703 cv
635.871 38.2237 654.876 46.5869 678.058 46.5869 cv
691.556 46.5869 703.633 43.7503 711.76 39.2774 cv
710.418 40.045 708.972 40.7654 707.434 41.4345 cv
699.528 44.8673 689.158 46.9405 677.788 46.9414 cv
666.134 46.9404 655.527 44.7633 647.547 41.1762 cv
643.558 39.3815 640.223 37.2342 637.744 34.8127 cv
636.139 33.2446 634.891 31.5574 634.069 29.777 cv
634.069 29.8042 634.068 29.8309 634.068 29.8584 cv
634.01 34.1415 633.913 41.345 633.913 41.7842 cv
633.913 42.2655 633.947 42.7435 634.014 43.2176 cv
634.341 45.5468 635.461 47.784 637.278 49.882 cv
640.556 53.6667 646.109 56.9459 653.134 59.2586 cv
660.158 61.5739 668.647 62.931 677.788 62.9306 cv
677.791 62.9306 677.796 62.9306 677.799 62.9306 cv
689.982 62.9306 700.914 60.5571 708.759 56.7254 cv
712.683 54.8105 715.831 52.5318 717.982 50.0264 cv
718.809 49.0631 719.488 48.0691 720.012 47.0488 cv
720.852 45.4123 721.29 43.7079 721.291 41.9531 cv
721.291 41.9569 li
721.291 41.9526 li
721.291 41.8399 li
721.291 41.0454 721.287 37.4619 721.284 34.0779 cv
721.282 32.855 721.281 31.6581 721.28 30.628 cv
721.279 30.5458 721.279 30.4647 721.279 30.3846 cv
721.604 29.7152 721.861 29.0331 722.046 28.3409 cv
722.046 28.3409 722.062 41.375 722.061 42.2617 cv
722.061 53.7792 702.562 62.957 678.058 62.957 cv
level3{
gsave
clp
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.378 0 0 -88.2959 633.683 45.2637 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
677.737 79.1231 mo
660.468 79.1231 645.539 74.2316 638.443 67.2787 cv
636.072 64.9624 634.577 62.4366 634.103 59.801 cv
634.015 59.8082 li
633.948 59.3342 633.914 58.8562 633.914 58.375 cv
633.914 57.9475 634.005 51.129 634.064 46.8147 cv
634.667 48.1088 635.496 49.354 636.523 50.5371 cv
638.828 53.1946 642.131 55.5585 646.191 57.5396 cv
654.311 61.4988 665.468 63.9293 677.788 63.9306 cv
687.026 63.9304 695.559 62.5855 702.635 60.2621 cv
708.972 58.1789 714.144 55.3173 717.603 51.896 cv
719.085 50.47 720.226 48.9533 720.978 47.3672 cv
721.083 47.1803 721.184 46.9921 721.279 46.803 cv
721.28 48.0017 721.282 49.4781 721.284 50.9757 cv
721.288 54.472 721.292 58.0845 721.292 58.5448 cv
721.291 60.2923 720.856 61.9896 720.023 63.6199 cv
717.768 67.5098 713.211 71.0205 707.035 73.6984 cv
699.289 77.0644 689.041 79.1231 677.795 79.1231 cv
677.793 79.1231 677.79 79.1231 677.788 79.1231 cv
677.77 79.1231 677.755 79.1231 677.737 79.1231 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
677.8 79.5214 mo
677.797 79.5214 677.792 79.5214 677.789 79.5214 cv
668.649 79.5218 660.159 78.1643 653.135 75.8487 cv
646.111 73.5355 640.557 70.2561 637.279 66.4716 cv
635.462 64.3737 634.342 62.1369 634.015 59.8082 cv
634.103 59.801 li
634.577 62.4366 636.072 64.9624 638.443 67.2787 cv
645.539 74.2316 660.468 79.1231 677.737 79.1231 cv
677.755 79.1231 677.77 79.1231 677.788 79.1231 cv
677.79 79.1231 677.793 79.1231 677.795 79.1231 cv
689.041 79.1231 699.289 77.0644 707.035 73.6984 cv
713.211 71.0205 717.768 67.5098 720.023 63.6199 cv
719.498 64.647 718.815 65.6477 717.983 66.6172 cv
715.832 69.1224 712.684 71.4011 708.76 73.3159 cv
700.915 77.1477 689.983 79.5214 677.8 79.5214 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
677.875 79.7294 mo
653.47 79.7294 633.684 70.4863 633.684 59.0859 cv
633.684 58.6029 633.805 50.0174 633.857 46.3486 cv
633.923 46.5047 633.992 46.6599 634.064 46.8147 cv
634.005 51.129 633.914 57.9475 633.914 58.375 cv
633.914 58.8562 633.948 59.3342 634.015 59.8082 cv
634.342 62.1369 635.462 64.3737 637.279 66.4716 cv
640.557 70.2561 646.111 73.5355 653.135 75.8487 cv
660.159 78.1643 668.649 79.5218 677.789 79.5214 cv
677.792 79.5214 677.797 79.5214 677.8 79.5214 cv
689.983 79.5214 700.915 77.1477 708.76 73.3159 cv
712.684 71.4011 715.832 69.1224 717.983 66.6172 cv
718.815 65.6477 719.498 64.647 720.023 63.6199 cv
720.856 61.9896 721.291 60.2923 721.292 58.5448 cv
721.292 58.0845 721.288 54.472 721.284 50.9757 cv
721.282 49.4781 721.28 48.0017 721.279 46.803 cv
721.184 46.9921 721.083 47.1803 720.978 47.3672 cv
721.022 47.2757 721.064 47.184 721.105 47.092 cv
721.327 46.6204 721.52 46.1423 721.681 45.6578 cv
721.683 47.2459 721.696 58.4326 721.697 59.2491 cv
721.697 70.6464 702.279 79.7294 677.875 79.7294 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
677.788 63.9306 mo
665.468 63.9293 654.311 61.4988 646.191 57.5396 cv
642.131 55.5585 638.828 53.1946 636.523 50.5371 cv
635.496 49.354 634.667 48.1088 634.064 46.8147 cv
633.992 46.6599 633.923 46.5047 633.857 46.3486 cv
633.872 45.3439 633.881 44.708 633.881 44.708 cv
635.863 55.252 654.79 63.5294 677.875 63.5294 cv
695.357 63.5294 710.446 58.7806 717.603 51.896 cv
714.144 55.3173 708.972 58.1789 702.635 60.2621 cv
695.559 62.5855 687.026 63.9304 677.788 63.9306 cv
721.105 47.092 mo
721.341 46.5589 721.534 46.018 721.681 45.4708 cv
721.681 45.4708 721.681 45.5361 721.681 45.6578 cv
721.52 46.1423 721.327 46.6204 721.105 47.092 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 62.2188 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
677.799 96.1133 mo
677.796 96.1133 677.791 96.1133 677.788 96.1133 cv
668.647 96.1137 660.158 94.7564 653.134 92.4408 cv
646.109 90.1277 640.556 86.8481 637.278 83.0629 cv
635.091 80.5377 633.914 77.8105 633.913 74.9638 cv
633.913 74.5368 634.004 67.7142 634.063 63.4005 cv
634.666 64.6961 635.496 65.9425 636.524 67.1268 cv
638.829 69.7839 642.133 72.148 646.192 74.1293 cv
654.312 78.0889 665.469 80.5201 677.789 80.5216 cv
687.027 80.5212 695.56 79.1761 702.636 76.8527 cv
709.711 74.5268 715.334 71.2305 718.742 67.2688 cv
719.625 66.2419 720.358 65.167 720.925 64.0525 cv
721.049 63.8344 721.167 63.6147 721.279 63.3935 cv
721.28 64.51 721.282 65.8675 721.284 67.2586 cv
721.287 70.6428 721.291 74.2265 721.291 75.0215 cv
721.291 75.1342 li
721.291 75.1387 li
721.291 75.1347 li
721.29 77.9831 720.134 80.699 717.982 83.2073 cv
715.831 85.7127 712.683 87.9917 708.759 89.9068 cv
700.914 93.739 689.982 96.1133 677.799 96.1133 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
677.875 96.3819 mo
653.47 96.3819 633.684 87.0732 633.684 75.5937 cv
633.684 75.1147 633.802 66.7097 633.855 62.9308 cv
633.921 63.0881 633.99 63.2446 634.063 63.4005 cv
634.004 67.7142 633.913 74.5368 633.913 74.9638 cv
633.914 77.8105 635.091 80.5377 637.278 83.0629 cv
640.556 86.8481 646.109 90.1277 653.134 92.4408 cv
660.158 94.7564 668.647 96.1137 677.788 96.1133 cv
677.791 96.1133 677.796 96.1133 677.799 96.1133 cv
689.982 96.1133 700.914 93.739 708.759 89.9068 cv
712.683 87.9917 715.831 85.7127 717.982 83.2073 cv
720.134 80.699 721.29 77.9831 721.291 75.1347 cv
721.291 75.1387 li
721.291 75.1342 li
721.291 75.0215 li
721.291 74.2265 721.287 70.6428 721.284 67.2586 cv
721.282 65.8675 721.28 64.51 721.279 63.3935 cv
721.167 63.6147 721.049 63.8344 720.925 64.0525 cv
721.225 63.4627 721.478 62.8618 721.682 62.2512 cv
721.684 64.3668 721.696 74.9617 721.697 75.7577 cv
721.697 87.2363 702.279 96.3819 677.875 96.3819 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
677.789 80.5216 mo
665.469 80.5201 654.312 78.0889 646.192 74.1293 cv
642.133 72.148 638.829 69.7839 636.524 67.1268 cv
635.496 65.9425 634.666 64.6961 634.063 63.4005 cv
633.99 63.2446 633.921 63.0881 633.855 62.9308 cv
633.871 61.8257 633.881 61.1162 633.881 61.1162 cv
635.863 71.7334 654.79 80.0684 677.875 80.0684 cv
700.399 80.0684 718.949 72.1319 721.681 61.8849 cv
721.681 61.8849 721.681 62.0155 721.682 62.2512 cv
721.478 62.8618 721.225 63.4627 720.925 64.0525 cv
720.358 65.167 719.625 66.2419 718.742 67.2688 cv
715.334 71.2305 709.711 74.5268 702.636 76.8527 cv
695.56 79.1761 687.027 80.5212 677.789 80.5216 cv
level3{
gsave
clp
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.0127 0 0 -87.9309 633.684 78.749 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
592.5 48.5 mo
610.25 48.5 li
615.5 48.5 li
615.5 47.5 li
610.25 47.5 li
592.5 47.5 li
592.5 48.5 li
cp
615.5 48.5 mo
627 48.5 li
627 47.5 li
615.5 47.5 li
cp
.75021 .679683 .670222 .90164 cmyk
f
626 48 mo
620 51 li
620 45 li
626 48 li
cp
f
626 48 mo
625.776 47.5528 li
620.5 50.191 li
620.5 45.809 li
625.776 48.4472 li
626 48 li
625.776 47.5528 li
626 48 li
626.224 47.5528 li
619.5 44.1911 li
619.5 51.8089 li
627.118 48 li
626.224 47.5528 li
626 48 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginWFNAKV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |-/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |-/H <1C60D8A8C9B6079F62EE7568E8B09CBA01F57B4ACE6DA24AC6EA79287DF31270F7DC42D147A6FAB1DABB6C> |-/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-/q <1C60D8A8C9B7EF322408646A760FED70F2D8214740020E61993A1FFE89574C96FDDD947618591671EEE89936F7D0F90E6B11CE96BDCBF7B2C20479CB610D934D0AFBB0721CA3EA49A2D6AB8F9A4A9273E60BD1ACDAB1F7447DBAAB4DD124EC36ECC57CEC13712AB1CAC8625150F69DBA3C4F574D88196863F5C61CC51A61AE68D44A27F86FFD139CDEF75DF80AB81E> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-systemdict /gcheck known {setglobal} if end {end} ifendWFNAKV+ArialMT /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 72 /H putdup 76 /L putdup 84 /T putdup 112 /p putdup 113 /q putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/WFNAKV+ArialMT*1 [40{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L /M 6{/.notdef}rp /T /.notdef /V 13{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p /q /r /s /t /u /.notdef /w 136{/.notdef}rp]WFNAKV+ArialMT nfWFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf118.981 45 mo(request)sh111.976 162 mo(response)sh118.506 184.2 mo(\(HTML\))sh98.5 166 mo
98.5 114.5 li
97.5 114.5 li
97.5 166 li
cp
.69482 .6318 .621515 .583612 cmyk
f
98 116 mo
101 122 li
95 122 li
98 116 li
cp
f
98 116 mo
97.5528 116.224 li
100.191 121.5 li
95.809 121.5 li
98.4472 116.224 li
98 116 li
97.5528 116.224 li
98 116 li
97.5528 115.776 li
94.191 122.5 li
101.809 122.5 li
98 114.882 li
97.5528 115.776 li
98 116 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginWFNAKV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489068CBF65F37E7CD4C7284AEAF641D010DF> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |-systemdict /gcheck known {setglobal} if end {end} ifendWFNAKV+ArialMT /Encoding getdup 68 /D putdup 97 /a putdup 98 /b putpop%ADOEndSubsetFont
/WFNAKV+ArialMT*1 [40{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C /D 3{/.notdef}rp /H 3{/.notdef}rp /L /M 6{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p /q /r /s /t /u /.notdef /w 136{/.notdef}rp]WFNAKV+ArialMT nfWFNAKV+ArialMT*1 [18 0 0 -18 0 0 ]msf642 118.25 mo(Database)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
/WFNAKV+ArialMT*1 uf/WFNAKV+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Sarah Allen) ()%%Title: (rails-mvc.eps)%%CreationDate: 1/1/11 5:42 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6CMtN>Q)=Edp4(_%"PCLER@01=c/8T7m2jSf>=(uSks!*PTW9Jtdk%en7<Vo,ld*/TmtqiZag\#!h$:QJ.TXL5gQ%5?ElI.^%r9Uc]LZeQD\+edN5Q(NPr@b$b?\W8ZceEp6kM9dCrO:O2\G>X!APU6ZlET8h1<H8W%r\&sh:t5Cq=sIAk/2t4LV&>^&"i;DI^m,L%s6BGBq;cl%:H*KA&-'(&^UnsdcY8Z^_u5cMHM2T1IJ9eGdg'5C^OL`WHh6sm!b]9<^,b!*h&IIWhd&J6qsL9/b^T?Lr;$'SmB</>%rU/h<o6m#Cbq@o+_>NGJ*/,Aornk&3H2m$pq<cFnE]?!rJ,)i'rh(>ahq7tD\p8UbD_:kRjcD*DohYT`rbA(o]9?gkL0f>Tb;QQC%rmM=o+TL-+INJ5Jqs?W'I!>JHl1+W7p>Q"#r>Z(6q!e:=p#A9[L4?IfqgMgHVZ"rfqme4\P.Jlh2t,V\>sI.IOVdhpCbpQN$2OGk%Bts)VDEl7/Q=]^7lD_;hf@udEqcq;Dc0bJY_h[]o,egp>j(3K/q"3,(s,fY4a0Ft.?iT1/T'pP<Irg+?`BItdk,\LHiU+m\PmGr*%gg+\-FnX;9IslmOY91NkH'15\E;-GFnG.Op*onUFrUg[[NutU6m@,cchqW_[n3?8qIkf,<Sb?:8Is_!S7=KC.U0h!r0p[5PCpD`d%s8'0H9=c/35cVY5?cjhripl`Sg\]<:Gfr$qpNZSDT&sV:YPsT2K9J1kh>#S4<PJ.Te'1#c?0^7bYNg;Bmc7GVq$t.<?E3#`orT"_%YY'W)YAu&S;Ch/gYFhs^Qg[e+rI;HTrVl_M-`qffr$b)7SS.nFg[sB]$g*bL^IusM9@6O.nP9Z#?/*u"B3f8D2'pl<VZ5pZo6`N:%S(jg`Cn!&`aWFf8gN9E3e"u\dqQDMoEM6$2>j.Um(])7mKe@F+kbj3R4R:^VK788/pc<lBI_:+l^.83&fAu+klormJFXd8aqQDNJ%hhg7?5LXPHs6;B9NV$TVhCJt?=20suX""!:qQFeYbK75phamdtn#a>^=20sednA0aY=n-SdXQD-_a3m=Ie:^pN4fq=Pk8<ie%`F8%]cXj.S*sXDSEG]$p`Ed6^RtM+>OjT6hqC<d1T%p0.K+]X_d4h,Y'rV6=&\t_r;>lqIcQrms6<MYrUaG]MdB&h>^cX`8(I](En2>(%1I"&VF^</5NTK0WglGd&glKYQlW`NIng4'$QdK`lR]51>fCj.MTBc1"Is!3Dhtm;a9RL.E=-q<Q\,2+AS(E[eSF=:02sW0`$>Z+P%\^qP!$bS*::;,H]ke,Dn^Ktf(j?+[bDLUr`'_h$"p\"K+s5QW;=/OS]5Nc?2^4h4<nbQInG$enV)6_V;A[.b?h=oXJH=-!1Y$L?)%YOm.,=j$D"kRk'FFmW?N4B<LVpZpT,2>b+o5Pj-6f]1:3pa>aDs3Z1[ri*[2cgJ,RnsoR2s"')+lYlg0Y+As$mX)pFZSVWWrq8S>%kFSikrQjo<b=g0\^\uL/Q)Eqds3nq/kII0GrR]ArVj[,5o)4=5@[mppbB,_6Xmu.+=dq8IlAp<NqD,@;F8t-jTDBo7jPP!AX#ZNT%V*AGt=t?i>k/YhSi`N!/S8H!i:]6T-s5>8OX+0s!M]YS0/ap">cRdu)^?j1.A*(F0b5\US#Q<K)rjs+bR4jnq1ZFAHV\d(=m\RDa%0b&n\=GCB*VI<U!rs.F6cB`o(?!FdQA[hO0I2b;4G3#,GXe3ZM@Tb_^23kWkkHNUDH-YJDC5s:YAO"\UA$omtr;)c7en+1HoJ?FM%qENlO/h?,^ZL>">.:QT"\"QHi9W[ls8(m0YHeNn69=,b:Q!T4j4>afu%csmsD)nX<A)4%)JSnQh(F<"po0J_k,M,_=H2lLB;dI<8%WTBi2=L[L*U&4!8/Ci]U^Vc,8;(qNnQ]\HLimV5Cj5n6CjSIg-9UG>9].ZCO^J4*drB'k<ktu4JnEjmp'393[_Y<co4lYi&[2.Hk%[_:^[rmYlcD=[(@7h1UWO)-7o/",*2eooV%ILH0&[DmF#8sZNocI^%giGouam\8:1CE$t\%9K*,,o9MMnre&WJKnfISW#3pd;*:K%GF?$8s#XJ2rLEble<in$fCL1K)>'LD[B$p$[4d7bXbT9[r\&Q(Fl0I<?B(Epq.8B+GHkDo)8(jg@XVU!Zn:Q`*V\t$]<W?"j]@%@%-[)Vn8ch!c>_B+*cHY0XEnm",s20^t];"(m>C1E<q"\ldZ)7Bj^0Ii$<4!?eMfL][5N:qMc[jPFO3%>SFj4$XC$WrVNL'NZISBU_%r)ffu#_1h+gt0sB91F/#dh3N6Ws<&-GenFMo;uhk[BAjW_`=mtXeYuqr9cOh4k=I1*CtdpNrH5F&/9A/VmEdnZWo(`B88^!:FoQu%)5fjXTAKn%^3E?o54TY4p`E]!bk<u1N-!*f:*g:N:qp<qs4#62ek0!oq<[dp9>u.i>)i/ahK\M5=,*7*1Z%luMQ:C0NuW@LhJ)'J%C[G_N[loAJj&IG9Y+=70mUs81$Qcu&^XjKeXISI;d9'&YQf6J.f=;mee?P$\RIRl[1KIulh@Hj(pm1TU3oJ;7E_nejIh%+ch\n<H%G:48Vr]e$+J#g7*rkFAHGM6^&Jc-g#5!IabI-7-@s6Z#RDP!HWms_l!gZcI85<RbL\@qq1mUj5YVr'XDs6G[<[%*`$]tJ]U:Hk;?%4j(gC(N43JhVR'oT3bg<H%*=brUnY,h:nFJ0=][&oJa%p[4cQ;><BNIF8Papq;&N(2nqSjY06V:f=(3.h"Zl2\N@Lp<H$<c2mMYM%DuS=S\P:9&`\R:sq;(:f0Dj\N5,;a3@bCuNP\4@qfb](>Msa?4A(e?ChgK_?GktGNnE/m*NKj2%LSpW^48fp:DVf%Ch<FC"n*Y(b%:>]DCC'hQQr`%HnGCBMbGBZqWO4L!R>C1_nk2H7LO14"ps)e,0Gl@>*]/3=^(h.\:pCC&<Dn\@t]/ooM_qk!@mrsoerpKU"]A*5G%\e'AkE-$O*meLGfmRPIjpVZ%GDf9/b\+_iXs**':hE9\0JdYgV55+t/cSls<9>5iL\,4XDhnQ_6IV8\Gg3*;TqG((I[D'>$OH]S%%_t`Y&:A)lDLSqbRDkCde9B,+%me4>Co+1;nhqX`nq8kT`A](^Pdg*!"pM]/T:2f"B0<</l`3rMiI%-G%q4@EUp0VaGJjc;$RK$4`%n(Ylu5GM<+Nt6E0G,<,s>KSk548nkR^+cRBm.p:em-!?0<Y.@EofE!+onT"r5YK1m:Z"B!Iul.c4$?5:oIBh>b\P3u*8HeqbqD6[%Qas^,1)B__0D'rOoL7IT^\8PY`,C$[hrN&[`]ndMBBmBigXEO<T87^CD]Z=#5Ml0Ef5L#-n4VK=khYLtchH=&5<cio]7,3llgWm4%k+>H,>g%H*YHP%6H2@!eI/W%"h9G-[?d"5]!H4@:\ps=E_^;#E^VR]S$t0#,PZap^aEt5-rdT=u_E>!8s8)9]k3F,Ghs>gHcTNo:%ID;"F.>"%=H+q"V`-clXs/fN-:HtW_9>@ne+C)Riee>$>?,-)ZIED0\,eJMPqsCkjEr>BBN8jL.j29X72feTKaqgV6A$YoQ48n0p%c$.e:?,'+3Ej=r<ZL>9ao_Q8&n9Z.o[[pg^gc\s3LOMVpPmcpXgt[C'ZQI1^(VZ(_qor2,]_gO&h)D82]D:TQ(Yq#JP[DRYcjoa)%YM\XnlSi2-4j-?Fp\=7Urg3B:54!`Ap@dHh2c;b!\FJDSMr4JO!SG`m5=7p=hcJ.5:H'ZQ\*nhG#<-b7]7.EGqhMJ_-2IG!YC1]f%mDItr]"7'2h>cfch8B,sfuT<!AcFuu+5d+g9n.G4I=M4*\,=nLhquSIm`TApUUoi]pEseLqW[nUq41@G6Yt58mIi[2O)OKf2``/R%\3GIjrp]mcl\C8-fPLF^C`V2pX3:O`fZ0>e_Yk;F?9ga3',Gi'VmFFAs)<=IV13e%o&5)ZX^>>VXjl?kgG^5/_+-\M4o&`?:;nt$%h0sTMlVkt%;G$]HmcLPl,k?6TLUO(V+W,YY("&[QO7qPgHQ>Q4J+`d5q]";Pe+X)OnuLF$UtF#Wqo(43bPqE'Jar1C^2fG6I/gP1%gtuJR]6V$g%Tu$RrA[H[>5%,t-!(#K4*3"Ih9_F)lmDOr];8`D9n(C!F)/B0HL5>eqU1H',e'73DAHH+et;[Qnfr#Jr\/F]5EoU3%8c(gm<5UVa%HkXJ+H>%4:qG)A;T:JW\L_;D><+>Q72h3J0QpqjQ>mnBE?:Hd*RDasnR@aFd<LbJ)0SrH`bCn(BplEoCc\2a]fpX]%57_h'a*F,?H(DG?Cd+IEk0*R84tQ7.Q<p"bAJphKRC2X8fp8u+I(>?iN\kG\CUa$'+?sG&?*;X;YKOM[S,AeYkNg*5\R%k>rue/b%Dt7JJZAk@?J"*o9(YZ=bCcduUMsXu_?#Ea7F4^t8;IjG=R=+b8,!YX(cK()5jP\<opXU\Gm)Ohcm,p]a0'29=I\a)hhX/Ubgs:?F%%/*WdB=+;QIV/I[lt<_u/Ul")`s3U00CX%>T.BgZr+GbRf;dbo6*#W=Ls[[TX2J.?M9G>0W^X$,0<<+g0%CE5*J;oR<0-\s'kBQE%WKlPGXX:Z"p]ECMf/9>'XJd]5dtLhil!RMg<gm0lc-GU6f,W9\X$(=U@I6AZd2im!T\_.p5m<E$ZqGP_CJh3(+0.t+e>CLU"_s9$%-rd0Oe>YX^/$E*`DL(X?qNYjK=fQ-0fia$P5F:c`T3`8X;&-6c&"*t<,BaA+\KY]Eq!![oe_hYe@2sG4W<fR0"0+Xk&[WJ+MW!$8%(#b3Q"]bi%KJ6hW3&K1%Gr"aq.>nWHjpH+Y</<^f7BI=]W^U,@/pC/C.VcPn(-er=;lUnHMPQ-89=:Uu0rQmF<Ht?)s,J&be'EQ:%JtFc8G$:RY]'VZ_\!M;%WQnn?<b1<[=(8;K?@fN\qMjo`=0?M/dgE/+<N1*p@Z=8W=#j,]4V(FFMqu`<WJ?g<s.he*[;M-'E3WY>%*@k$oQ?CqR9tHMa;l%,Y3b;^2P%,Tp`6WHFcfHoG#_.cZDir1`Y.VO5/r#9]lLlEL3Km[``PprXQ#OCN/=5BlY)PkX[0ZiY0/%Dm%qXSUU>n'kUkZ;f>[An1**3Kd<LC:Y$S4O/pV;BORkqF1$@6!n7mcnb6F`htP+ZG]CWMQYGEgDt\fuS-_?Zh\?g$GPOr`jWQ?*69B%k:Cs$jU_VVORD+IE@$B_+bt7gLUkRDc52ZaG*.FG006XD?-/GDOKWaQ?Yl"22p7O-jf8m^KtEo25Hj/&?Uu')8P-!]eRuDu7_(2W%\PP>tE3A7G\r\H-9Zh4;d[R'A7k)PGY/F)<bU^4n0B?;"PH/l_8SQLKk+e1=+P1hHBSZAZS;hU#N&J5\(Lb0+F=9J4Id)M(=*!FU%jSYRj=^:&nc>lBE3Nn(*h/5.lKL(rF]$KK6DfY+ZW;r,]K-K+9Vf"U&a"F3?S4b`mUp;OLAL:hkOdf]BG3'hX]G)3SbLO=lFXN-<%V6Z(YjT_]1h/JHJGUZY_>cQjCkeQ^><HJr;%T6`IrZEK#PU_&5<I'cX]h$\FUl#tfl?t=PPFP/a*K`u\$;<&\q,VO0aKFXqd<QPK%Wc5$Ha/X*[$88Hs\Gtobo1,blCfNkRK<5Wl6MsUg8o)>`)`$9KnHP!faj/2oBP4^)=WQkQqN&Uhg2K@llI&H#"h&hkVgPi"^09kJ%VdO/2d:bD1=Rai+]jJZ,$a207#X=CH^`($M_-.HD@V6ECW^bJHY8_shmJ'f^f]DC,Fi.uaXqtrWaE=5Z&Q0^nZA\SKj4[>q6EUVZ%=Vj+>5*m\>CI5-2WA[j`VJpe5](f.gUM66o!48?('f#%0T",F6YFiN-7qXNJ__[4IrB)_"\_R#&9W->mo^h4(nnRpbS`dAO<M!8P%Zb%"i5#8;QglGb?HA:bYs!%SY#KTO@r)!IPqYqrEFrs4>"+cf:5#/h_r[XU*@5U:WI>9<15Su)e*bn,O<HreHcViM-NM#!"WK!7u%TS[a)_oX!Fo$cjt$?5g9$K*;HSpk"iqU=i+&mR;Z@'rVb(O!L!=UjZ8c-)Rmpp<CWpqp*_Q(_OP?5\3>4.(1EmKe;WAQXHIG-D&L%Zo[9jn5C=J,TmJ>><)Z3X$R-nIWYJ=3=^6$f/nJrn*=8/PWO>,2jAADZ&;j=71SaYQoUM>4A3p9j=%/hSOpN98M5$YYN/r+E`se=%Lec7HKq+u.c;0R@F-%&U/gk+j;c)Pe*N[o>G#IJ/'m;56X]M&/ZPKja<K#JFWl8_,C.7DUeOrQYddO8<MS#L4BiB[tEGoD+el$$M%H>3)bB\EC8S'c_f%C1>Sp-%TQV7(%$-edMB;G'*1]0FrUp_+[+0DZEmgp=M+qNP=[.(0"FkZ7UYDfjI#\BCGjW@th>rQqM[)Eil4%5r>?Pkfc,BXH*p@cG_hnB'\=,X:OL2qNVTBR64UGnRPqFX*##H>CZ.mq;J'3X*g"JHBbX[^0#OkA#E(RMh?-c%,+Q$fB3"YSq=]M%(!)AS'a1.#jEDbus4,Y.GE<IeXT9kfBc5.K?`#tg&gGK,%m%o&=;?iriE-hT<T.Lh5b%>R]0EIKqLju>hs]b,eEuA;W9\o?qs9fe%B\i7jZ;8/.'j^>Ws5Q>Kk1lO"IGO@!\A%A-cTL@XA=EPX05N/^?I(97`0k,XJ(cUJ^Al8>ZXb,4RZBh\a._YU;"J\*q)HlO*,7YI%2'7UBO+U'Fn\o!<3*(`C<B(IG+,?;G6d<ZFk2T;0EN&[me9i6Nr[VmU32gp=<'$$m*im/_.NGM+EN&[tq,$\PZ(^==kI-T7;"J\*%q)HlO*,7YI2'7UBO$h14U#tB3o5RUk350X=$HK/cX9tRVeGPr9>G1kH/qNH>)Wp-k%J+UVQld:0a+jDp@=E$[*uj@_LAA)_IVbAn%6h"T$lrY!_<T.$pNXbT0Q\P>2Z%i(!Pd?D[o4,]9fJ#NJb`<5)A&J5s0L%J>O!4;'20Q&.a/X*[$:d,R-taX`m%^)!Pd?Ekp/0+!%b1V9h%3@CNUP=%NEfX5Z=;?iriVtiWp3&4;T-@q&qL=?l4e)r0?i5Upj\He0Sj#'^4<93GO$h14U#tB3o5U`)37N<qC-E+b+,?;G%K1a2S`FDn-<eY$`3"@efLRO8kc,ZO?j&#>eW;/F&HlQo#CMrW$W,s"Y3fYj7X2;+k*36qrW;/[R;"OUiU#u/1e9i6N4q9FlLRO8k%c,ZO?j&#>eW;/F&HlQ*HN\;HS_QbR1X28kTq)HlO*,7YI2'7UBO$h14U#tB3o3ZQka$HQ^T[Ih-nQ6Nd<T.$pN^M(k$&4n`q=VZ(%Q]JWM:Ug)Um=,"?5:QTRQe,#/2im^*msk&m_qdOamk5cSp;m.,mN["'5aqmSZbGdPm'gia&*&Md7JaX^#5JnXqF0HFrD<Oa#>>&?%q="?Lb^\B.qd8`?qnK`@>Kd&eJ$?-TEhi(KQQ(t/^JC932p7)d5F0p&I#k%LZ&s6[ejfYg_pY*HSio8ChS+9HICR%@r*fW9ABk##%?f"$7J+hFmpq(IYqYp?ic.>1m^\R^)s,rHBMu9tLq82H*0?obRp/?X>]iG0MaZ(ra12`"(:B)P8P5iXRKRJ8OpA]@XB49_$pilPf%hu9HZ>>Ir-^\kDj5Ppb!(.3#t?&E9$^%,k!ih\#b\PuMP./Kd_YfMgA1?N#oN,b&.df'\VPNJ6EY,-6R/N&bm1T[q$1:l/)fS4*C%\XH?$2m07kq,B-c?"dL+19@)(FD#XgOTsS>!c,ok:,B;U@.pFugp^]pYSAb\\W"tjN*U_ce?>&VcT69FP@Cm$Q91P3f1d/MZ'*o1%[%7]SSG&3pX\q2J[JEqb[\\,JQaTeV7Bc$YX58q:$#Y(TPf)laZumVV_7ko)2Q;<!9,P,%Vm\&M[>fJ6qNF55fTI;%\LV`l610;m%kA-<-)0CjLZPCKRf+7b(QJ.$-A6Yhk9j5dfD24k/CpGig9.S7F0hO6blY)"']V4e12tOEA10l?8V3ep[\_4EjQ\pH]QI59a(-U<1%f"RVi+k`-_[7U_2pNe0e^[\_mk&.6A<RTQEfX+7c+\MQjQD"P\VnO8(NB>nG;:!q$Q#X+CD>H-_r:J`Qhb1+44(7/#`U%pjjD(&?%]D=U'e*](\:P`;mX6`82L16Fa"u'Pph@;h$ijei"^)a32S*jT=oO=#MGLrs:N8&$6em[MFkn-L[-dCnedPu$7KWh2DO)i'S]mjog%;']]$R]Ak3c?A%;6_(2W$UCld;7f$i"A>lnL#`r[]![iG`>4RqP2AiGctIdlL2lg:+!d#uN6,gf<QChFe#dZ,caD'PmWs^>fA;hY%lp?j#(_s+kXWmD$SOr1Mlg7%+B04n%+Lt.k3F*sQU?2oN\+h,dod$g1<]iNJg1p^++b@FDR1`1SJ!cqc8Y.Z='n<gKiStVYr[<Kt%<N\Ui@"P@i/p;+5;d3uS.SM_;!L$okR:Y&$9JrS(GQF\)@6=ma?MJ7Joa_e7RPA$_J>Sd?fW?mU<&4\/Q);!YeT9Zu1@2@oSm(8=%=.j<JA2nP$>'d,0jh@fo3)4=QAZ[r"".[@8Vu#MeFfmj76C`hR;oolAK0ArP(M=&G8m5CT>OYV?Er4Q/Snd-5NSpe3(28D`Vik<^%EGB`uH-70eQ)$60L;7N<aYbT6/`Th%ek/k89#1[*-/Eb`W+MK5k30$kS4^fJ),5W[bo!@m`MmC6hTdorWYp8l"&:_km^%bIQ=n_X%1pr:Q_Go!b?1eN$R^q+"'/5]1dI7!`WFje,81_/2MbCi`gWV]ZQ<M9f[4o!5YXf6X[AE6d!DVlp^hFd`&Hb_Wh02m@@&asg3]'O\%U6SM);sc-Z6C"NND_.hY9\%AH/9[n*%G\#hK;hltmDb9Ub'G"#eI9&;!i_WSno'YjR=3soUtX@-f:=-DV$!\GDrD:[99)tEDgdOC%bI"J]8Bi$,<25l3Ki^S*,d"X(!W!flB=j'6WKU\j'r_ijOA&Wq.i*f%W0:657+=fRUttPs;'g:g>6Kd4)$7cF<66g"AtVb&B2t?b%eV1*1'<%@.-S5F#1G(:':aKVY:`MaN[+4hC<6ZEFMGuaUIS<;_c)t9/<;H7E>UE@VW9o%#Ue\5*d&?,&/BSEt:3%M&AEZRT4^;``%3WjRqe2^uA,O-hFF)?Ihqb8Go3m7=<ek4FpY1TGT7$TlOWru<HXlU0dSPQ+!4Iu/8%#LmF+lH$VS`QBCb6soe;I1+QOf+B$pH%kE%1Ak1BJN>;AVZ]t)b3l>VW\._9a[D[qO9_H(E\>#h!h`.T\%O&eB);HC7+KNj$)j#QK7*c"c0S()Wb0nK:S>^B)5s!<m:QLNNd48_%eZXkMAH5`RG$#DSod!2D8jLp1@hg^#<NDI=(dOW/eJ"mE;64.]:a`]r#ZSpulrkQ0-)1l%J1>i8o`u,-H>RobkWl97$IkNRn-D<+%!*.Jh`$V/B>':i-:fE)N<AU_Yr@1&am#&kLeP$KF!S"u:T0SYM7nb80A.BKUP4%\N9;!%\(\V-4HXARA4-KfIA5$#V"KH'M08Wlb%A-,SM+hPW)W1%-B/H]!/m8cNG8k*[eCT:K2:CVcroEN%i['1E8SE`&;cmn"]GRM7F1l@AS/ODqDZtLa'.nkk+1Pqqsb%>?b.TqZe%ed#QRnZ9"&a9CGH/PII/ef>C#ji">]_Gnt<['_S>'%-E$KrLlk\lG+ig1.)*drM`':.t)`-qK-3e+#gr*a\>81:M*q4<<NSjsfh"%433@eRAZ3.B:N_jm]4:*A1Vo7A=Q9Sl?tYMl$22n`Ls1U]o+Gj<&=Jb%%>1:Lf;R&YVtN@&&;X]ij:<AS45ufWFd&#Lf;Rf?9$kB%b@<"R:8JX0CFg'qHCC[B-(ITP=Y6Yq3%`uO<,l(Yf+Y&c-!rM)XkMLc85mW4mA<FC9#b9;&fITf.;[S`+AOG?*2f8!+L:"6jt/\^%>Yr58VW[LOVogHH]84q#iAf?r4,L.m;`i//cL6iTF_ej.kEfu'Bu_&9j&C;:D(Y<XlGAju:GqP<?TC=#>%I;s30jN'F6Z!?N6+H5%K[VOl:#N"RAlfpsWYp!21/D[4GUaTMO8u"ig27Tb5a>#5"Gkd:'gn_\+^,73&[c+QLd[5#,Z45$//+H*SQL"^;KZUn(ckSW&""96%C4EH'ZpRjjYH7oBU"Xdi>m&X6D`Ro!-0;R8W60V@F_[U">8O;=W+o\BFi+9\P4gjb6a`8\@^Vh)Q&O7>BF%W*iUr-4<QX%=OJ(="%9Y&9K4b@jXbt-AYDrZJLRc/+20NBl?gJ2@\A1h)YR+hH%W)T$.2J]:)WbSC7J>?prLK)f_EHjcL4bRB?<7RhBe;%4/b>d$9P'U"`%A+f7L:fU/%fikCJ1%s1),$"<sa[1ia>'4.nV"S,C'3%&Jp4TGH8dj!%<BIY786*?jluF7L-)4gS#,upF)J)Iias*`u9in?<luaFN%j.ZTT22s6:8la+U&l`Z#RAptkY(B__l6:6GOoYI+oB`O`;AZrG;hQV<2B:-f<AOHc:IA$<">C[DEi(HMf$qB@Wanl2G9AnE,m-;/%@-YV3p4Upa>>7<Rk=F-WL*_PPRaKf69LqmGN`=+;]ZKA.e[.91&lLT.(b/GV#R;<_!)dsGX*rHSeE+V'&4iq"#c()4[V3.Jm:;JA%f11LaW@JPbVQL[l[DPnr-!]R99\!J9ZE7Z;,hLR1X@upe^,#mjf+Y^^>AWY"Q1V*6/2MG1.$Pg7p?#*N<(WbuS:J0XV5?,XqB\L(%a]O+o4hPQU0dn?9X*9F%W2inC18S$dp':Hm2^)0VD9mc4mi*;t;KW:aj<g\*3m(l$%]$6e*J%27kj6$FO=HZ=VFs?mh%#Mr)/=0"%8Cbq%91[SAO#V^?\lqGcb#(/1Fg[@!;Mhtga&(Y)<=@D^9E;)aA0#Wf5h03@c9d%L<39Ql$?2`B)VeQX!2=4noE"qZe<TDW!*.I*%?Ru2WAB="\!RsOC&k`;+K#mDk%b-^QTPC(m2$9fMP&d41g:P38:j"?3nc;U/L*9PQL3\"iUeYrJHiu>^<AV=@(JLB=Ym+,S%77/O%&lU*_6SRh"STLWTMGkm_$Dgf'FQ+Z%O?-MYPe'^L_g>u.;^Z?0V1-q9#/X#EWb2$/92*m[Op:b/4nrT!7$T$d<f*cDl%F#M:=bTm%.oGsiGakZFFj^I+3WY5=<eameM(0D/2D[mp1sYK'PWHpQF]ph'V\?7pRAei/]3)Q*?u%=E"p7^MmCO=kJZ/tM*>3LX]:aUBU/!aM%qP*4=lN&SQ+B?i2hZKmA?HVbHBPK`q]osC/Q1WLA'reNeMgg"-0I<,.'7m*gf![cMqe$(hhk_f"[?o5Z*[%KU%50/$Q&KF%)5PP9%9ULE2aZoh+U.U/t%4tF'F4o+YUs:l#;CYO$U\B(:M5l?hbrQDYk26Mq>1ZA3eP)$n5uc*2qUCY-,r0B*BYS__cWrl;Sn03<7B-eW%f_J'/eU`Q##H<p+p*iP_3b]CY+tDnq+B:1/^KQ.eaZqLc6L(A!LXoo<;YBVM0ZB0CdXfo4\)7P6,tFu40uR%RWiX'NPn>mMX]RDC%kF#);"Oo`?6AIq"2g$=<jI!r`F=A:Di4Q%F6LqdgP8TQ'3,e(Mn%'r=*H]6!IkfG;kb(]mQl<?;=tt$VP]aCKB_W+cCr3h6=UUf!%QoHB0IY$XL;j-AmP#J9S7H4:@QoZO-^HO,E#EF@Difl?1qRHZMYVFRLUgN\)q6U42Q6Bm9$1Z0RM,T!emhWm\WKXH*<at&&ihajt%mEW,$<,l(Q56.UE>fLqdWo/n)RMJ&uh?RFF/N-9`2Dd!5BV^6Wg7LH/a/[TfdN1b%Qkk7+:FuWB-"A":1i5j3H+cM1E%793LqqJ[%ZCnZ94OkK=^XFO$C?B9o%m9OQiDOr)S>.Z3MiMd.C"cPVZOo0^1ra,@:,TB1*%g*UD?`)N$u^;9SE^]2oF%1dV4=G@,Or.n\6Kr>%.Q.d#7f"DuMQ@i_0/c"d7f)d?0683!f<L!SIaO??fK%0^V]rG0lm\Lt34p)q)PVMsfi's)d%aC\SiZDBUn'Xp-0\8^B2;M=q<TP%%A,*"JSuR('4VcQ_Al%Y+l9,;bp69+]F.PO[148e[<.]7<XfbVT$,h.HWLXMRH&Do(mJNCk.odmn6^IhXH=:T4>ONs@=!_Lq5QnmV%fuR)5npf\8`bjGWg=`PllU(h[olOD"[t1U1'lW:9YIY]K&GW7ck`S\ke_JI=YTRap;uT\HWb+pgS<b:u\U&(Cg!8;0I2]<;D/Y%o%2*foAgHP;6G(r>q709l[Ze4=DQKSks1YV+SOeArigfdQ.CHJdn]8Wl:m)89Rj:10B>/'.Kc;j8uY12"T<Us_6A;T,;#?*?]+LirZ%V:a-P_5j-@G0Q2_2WGUks-:9\]-4oAGVbYd\Ed%JX8W@!_SE?tNCbkMA"FIo(NdX"*fAj@F._cT';Y?4C.Ij+<rD4qRu_Zf5$&[:%aV1fC%*b'P<]iS,TDDg#AF1nOcS`/K5$&[L)(U3A)J]9d[kfXj51dlsIBIl_`]V_m-[sPt=8B#U*38kbdZm:)RM_]1g`#Dl^cG)<%HXn=>kFG3O_4<FeXB>`3G;`O.HNE*N>'+NeCIuI;Yl'7iq@eSu^F1">=LYN.f>BkD1Q96g?lUs=*,8`#Z0)-bA:h(hLbgrnP:#B.%N\tGth.uQU2nP-L..SI&:ZhW%I_Pj&s1+o/!pS^j0b7Ue'ls=[es?EFA?Mo\f?uQiMXe'n860C1r0fWk[#B651)fLpL,X+XLEJn9%AtW`u>r^WZGe0F'St4p+_QbZseA\?=f77$\qNi[`Ap-2-NgL@YFg2]_$[^&:lJu)07.4bV8?JB;g0S.b[R28a'TR_uUm<.OH6Ke^%`C"+Qe0V!/H;%U>XIlSV&W-]OKmaZ(>("D,EQb=#f$_\HUJLFe)$/dm+X;pnf(IP6#a2YK>EodiTA(>@_K^ZeA!R]rcE=%(0V3N-%'kIM>:MCdX.ntXl`.a+'EZBogJn4Yi34fHZl0U==#eJNOW,>7190Trn,9'F#&]PL&(3C-XT<I%]#b&;'W7T9j72TMI@YMC)qJ6;E%#b&"EW7TQ4e1K-YBIX>"[nLrAY&-jL7;KRi1_TF3b6=Dp"K<laEA5G_`M2B"FNm)N0k0Fbabi*U/tCA2Qs/626^g3>(#:5YjHs++%4o@T:>rWs`OLh:kj=,$+&`T6G8?M+mP7qc/.?1+a%$.>E@n6g?^B;;ZKAKLLm':A9pQ9&T`9n8fN2_`GZ[pXC"P4<C+K^Cd.l<k:%\hCtjZC=uIaQSLO%Gf4mmQ_6;7h!DM#i-@Wf@\o%]c=Xgp#!NCh4mn'@X#6j,'G'JYto*P@Ws^6,'GWqYbY\i]6(]fg;ND0<1=f<%QPcZ1m(R0B?"8)lIOir1@qB#Z8iiGH416qiD/tI<e;2qoDm%+J.m#t9losD5&[D35:e0lt:?rn2HZqseh$5oU&\<%6[0b[^dO@aH%1UGPC#'$f!.Ru-0hs9(YAcgZmA&'"nF&kmH\RTh@E^pOC,Bo(k1kE:5N7YQ[!bIAG=!'qIj*%AV2/Zb`?EJ3/,5X99D\9/jh@cu2%4'$.WG"b*'EBCatC>b+f.a=67TsP`I&),<Hj*&AB:"ZVdhHcSuX4Oeh$R0==rT:GEg8Ni.EfSii>XoC7%pmU9_tFg.a#.[G%s<Qm%OcdP)?<m[1Q3(UFd-u:S+!EDIEP$9YF&>%K#B\?[ELCZ$n9blATCJ6[oq4\)E_f7-oq;'7\H[Y<cCGdrRarO]Y21/#@6Ec3kW23b%4m3Gu^I0J5fOUtk3Ed\6jE+0HOOi+#g,Zr.\sta!Eu82ir.dJ1BUq1t;$qngp;Z53]%B"[,)"NMMK1"4#[Og5)0[9Vf%H$D=,.Bp%:4MV'%A:,L<j.T)5jLq_2&;Ysc-hpaT='/lkb]\_epq9"j0p.7BALjEM]fTuA'm5$[*H8M4:nbO\cA(UUNKLmZQ)IORj;;aNn,i7%5,)`hZjEGLM;LE56L-RtHl'fsJoSjO6#1o6Q^%TY/tt0#&3jAa1i3X:/UZ+NOpa:EB<<!(QcJ#ecaa*(a3I-:,pM@B034AoN=e0D%\i-8onJ5-\4I!mCcqA><YZ]CT;,YoFo2M&og=K%)H);a:?`A6b`,1spl)oAL<3]bWn?]9*SVp4H>eFu-@c[VH,7l?jQ!$]m.I3YP%k"AgL4QrlU;T!#c6W"pR8'*YI1X6RXlY)EOI)O*h?KHKN6=_$k.O?9L8WS:ZNs?CYL6BGalZksm$`nHhpL99STNuIJ^,'Q@JH7Rm%1i=gRj$>c_l=F[lYi`%nT:%=f&qTS'q)G!)GR&N(+_0\QH(Ya91!urI`ON?ieG5gsmKPN5ist4ZU/@P+J2*ufU\6P<F%)i.22R9:%PX%T*%tlDM4V"K&oEQHp@#QZ"U3:j/*Hs,N\h>WO2?'m2$SL^"b>>aJ7qTD+>h%DAWE;QN"Vrt7)ho,d.ZHM>*K.U,iXRO5mTVSO%e-@#HTFnE\]9jF;ls2MdYc,l/(rqM&S^P*p`1fH[^qSS:LLoUT@'Oo90<j*`^hnuuad`-!7=E6CR49!F)$cb9>jS;AoNUEdmll&:%;'0(O2n?lGhI^t30&h-]_*pIjT])V//mqg4(C-N<E,fi4T])X-fhDraN,8QRRP%eP7btQ0k^.+\9,JKjRDA%44U<ZTdKg"/l;J/S%\H/Hhe6lE/)"Gt1!2Da*^rF2')"iFa4soZ)lqK>G0)"^11gJOV\La#(qCI81$ngh/%-F\R@dfA0#V];Z3#HEl^tAGl4hqnr!>m\2%"655sR\p96),o81W+=?QpDRS<o:*j8%ksqiZt(75UTIs7JJF-4V\'!HW9I`h0r*G"V8eHra(E.$N4mOB$o2"4Bk'VZC;Eq\7U'K+%0r(SY8d?85T!=E=+!;LS4kH'`lV&a>[)X3r2.j44^5*ZoE=G9p)-Ld/UHPegBk'Vr]n[L^WZjX[h8%u_;YetbN+S]C2.j5Y(8R>F%*aGqW0r$nA^quh"VRJI7!CqPdJ^8C>dR+Dn)Dg)G$g&?`l2qCi^5X#tT`oLs)=<gq>JSXX=KjZ![-&/T2.eZahnGJad@X+ZT[B>6%0[u33d^Br^UFH4K)`!lT?Y[Yq:F]I]aCsh@%2nP!"Z9hlRrC.Rkm*W8QIdp'9M9JPn:E$YN3U6'6UohP<'s,;X<E_Rb-2:?7QZMq%%2lQ#BF?)Ld;%$/6Ujf9e2*iHC0]AFN)hHG5E83=7_'!clGqr3L5bgkJkF$N'dI3\PDjl]$HZC!j(,OhfRT*F!$N2#>/=n:nk((#%\[u>j12<E:.7m!7Ar_t8,&]h<I0RMc6UlD*_,<WiHNM%7L5_S1%Q.e8is#RDqKr@:aAfu8q3.<MN4R/46UlPH5g)U@=t1;1dV5[(%USW`(A@0AeX>OOqA_%bTo#V1I(A4X/CS`54/>tP!BRaVe79-ja)D^$!#F68`WYo-S2IrUM*`SY*C^+]PEVASO1fTuND@A#[%+C1Z%UHNs39-L'B+Mr4McJF-\.aHVuel$KGD^M,:l\)DZ12;+TgQ58QqL5@dUHNa-X!+6$4i$MBQ&D*?er\;-Et'#3gn3>_dH(86L5bsW%!C%7Uip72.BXg#Xj96B1)ZZY1a#7Jh;Zd$>\jV<$.!W%PN-qWjJ5MqYd++N2*\srX0dE=J&7j9HBu(h23-umG+lhq;GE>ZD0<eG1%:2K5B0P\R3CWpIQ(>'gCZj-siD9Q[SeE@M_.or1!P<VAXPHe^O3&"/5A=WRC&e,a,J+,dt0r5>=GZ;NFTX":"eY#e2k"8*;%Q.it%F8'7i=KM81P#6L*;ToE]^*09&P;U=<`TB!W1htbAE[huMi@`*.\r9p95U5(`L5e(:iM\P'f+^#Ug,das*&XpqQk9iQ#WR,NDrIX]%5tNdUMCn%j:Csc/-9A/X>uJmKr0]!"7g6g&,%f=F)!O<+ikB'PZ*9!6d8B(pFt%%QadH)GN5[8cU19#ke*0uI)&IDEY0PupbZJ-J%$TsH7N2&SEU#G"pa9XCbNXmaW#MRm@&PiT:/<2nB'3Kp=hdCH2H;Uq,ne;(^UF?[)(.W.X"r1V]TVCkoHG^C22/e:i;:k#H\/6_A%.ZQ,"#8MBH*%ms)3)`\H_D%j3;9toSFeE46eji(rag4G`WEB)?>(OZ0Q<qG&f#TSbMcNk9?7bO,1fu=.^qmfq7>bT[V?;a1*MgJ[%+9krt[.OGF/E/B3J]3j3//FkVp,Z=Br1[r1W,j!V'JXcK?B^:dE>pN&hQWl5;9/1W'JXbYS98)kde]JaOs3Ad2n)a;l>U!R&M`Qa%S.E_$(3Q#t7>r6Jq%FJfbG!SASG*@ZS+\l1Rte:rs&P<a76GW6T\+8"-:+oC-_LVV;.RM]cF_XH-GlAb-?_H'4[k;fT_fpBeG`2>%_I0)J$hl)Zm/8r:%240\B4[fuO-5>\`nNn?I0>q_`82GP_8MpT1Ppt%4bY,Bf_\SdJrBTL=JclHA+/fk+CjkW\fdc:o]8N[W-KH,%3uTuI,=^5IkFk=S*s4?[`h$fEB^@_bP0f"T"9]ZR)dm1%JYC$%h?P%9`k"Qn#9%hBZ-i+l)LEQ.$8eJ-329>tOLGoXl;W9k"cT!2%5oMRp-(7cJW"T4^(csYJ&fC#Xj=+EB\KFh$dH<X$@-i9H<e.GA`PG[*!QL-?U]=mY#%1C7FYDanc6!E+?qb8:UOm3,V0I!2)kFgD%Go@,(N1.a7Z\";LD$K$0c^(_AP]Sk8GYqK8aa+A1]I8%`=bU*[c/6.L*K1@?N!r1tZcCT/N-mG^_73T#s3Qi^jV]!4oDkU_e*FS%%nY5/kCX^\0qS'FZ*K:G^E%2au=U(XV4GH<@)UZ'0kPC)h7Q$m[eA\r?f.&s*ChV<>e[^YT[<$DtfZqU;S\*a*i+-(g7eRW&)'s4h%I>Gna\=QC58"B52cpqM>.9Kh"ZnsCM+4WF(=AaE)MquZ.(KVG9"J_bOQ_,7VWuPs5[:!7AH.E3;C$lXn<:Vg^<u^k6@+=hQesMSs%I0QJ3pce9/@,0a(3#FM9=I3h-itb1eCHE/1)\Qo'74S%l`3_qq%jXEG,#RrR:-"`@l(pk-qTZ_.09@T92,#l0e._%sSeH,:<_!@g%A6I_3&6DP3+qiK@MG=nC=rjLZ.^&KT\7e135&%/C+s0WI+sr`q&Q>,d>c_:S$6iN\3"\%HP),#Zj`LtUk-PaudhCa,:F>(Ciff'0%&1>QC"JRNSc2g>5q\b3R9pQ\"Lm*ge<[(;+[$;lTaW=/5"VE+]8J6$Ka#Wl'&LW!of2,\u\kHb'N>%GOIjSXI1ErikO%O:XUr8m^%W-M]^SVXidD_a?c-QB!%)^O]mm]>O287\t;M3O5\'%LN9hpIQGSP4KT3YAbM[4cC$W#_@U)NiUKc2+rQ,B<9ElX_882S;3V&bTRt%hOg[s`WT!nO>oTX+qqA..YWa9c;-phm&"#1EQ7ZA,gIb>VYX7;9&A\2\0DU3iZo,dB-50;SrVt/:""lsC&_X;7*=h`M!EW:2Yui0%SDuFc&SE'[BLBbl>+-bI=L[6o<(5\+67WjbW4:-l)=fet=BDG+[(N'+m\9I?EJ?pN!,`_&ZTh!4=Iem-+_#GsL.C-?;(I_D#e;po%_pVO;:=d3")D4XQ"QYN"PKn6Uc7e4P,lR*bM2RSBJmO(f'CO<0@S2iB'@%0"=;g.(<!IJ'J5NkUbP5bTF"sSXMjj&f[HZ0'l/8j^%k35FnRKd%S4kbi@T;NoBGA2C>[1LBdE`$t+7lR=0SCm]e)_S.EhW8H4Ek]5XKm>_"m^a3/keSX'#8[W;aW"J)XE2-5>YKDVqIU'a%\^/dQq.o;S)2ur?A#9_eqO"5aN\rV8Zu/TP"sZ_lVWqieqU5'g%ec?Tb!do@Z$%[aP7F.eQ&F?l\s1?+.uN&aW$UtSU/$7m5qWp8%%E,g@&#C6r(J>2g#EQJd])W.,I_cF^SY<Vh[1Q^65Uh:^kI1oOmoR>-ls0T;^f\607kiZeA1CJF-Pb+^0e*rgoP]I.9mK(1`&Vcb%(*!"8)CT?lhqnX^No2f8MH4J%$cQRB$ko;49+:M5h5=MO68@R>((6^u74`c2D_lf=M@7+9c:'mS;sda>BQ[i:lD6AfT#JMnm0=A]%B\oRW3`73c4F'fec>>):35CVh-L'`HX1KsfR#p<kFD<i`l"IP>T-ie*@5(7XcUDLokt(KoB,AN4SWrjIe)g8BU-lB2>R]5=@#Pug%+<s=EN5k@'aMuSC#fj/cE]Z<-)r`Rl)tG]tRgdAQfFX/gfT;6Sf47F,?:.>>>sh;??'@8dEXb;PEXbSXDG<T3\2?ZG9`?Cj_lUte%$n6b;%)7P4%)4,&1]/.81CP3h1DH<Pbtr6C=Vp*p'cUJl>qgK%ILVbFbM_hTO;=EphshPL`EEZW`oX%'6[FJSA,*D9XL_ZcoKf2p%(O_BYqaDSPbSipKhQO$pW]jd$e'I7.-pgGUF#ZJ@9E<sGO$LAI3NS]/km(]GXVt^5e4MU<:cq8V6TX&Woc_L,6_irW7ZB,:c\K=l%2DqM3;`>sA)gcJ55L4:7LR%U$T('!J[3$#6%5AbN%7/]N>K*j]%rX]REfm4_UrPWei<53TJjmR*JFsXcl,(IjqiaF(`)(-+Vp!F*%2!I:OL#^KKe=9s.K"u,M%2i.DJP`/+;`41b_s.pW@"bJJCX"<'pq*EYSTtsUrb[mDNUCp->7u&I#VJlBT@CChV@[hrl^k5%\+\WO%cA<*SVA$`".HoEJjcXGT%3')Ob\IJF3n)/^0L4"4fguhK`B#L49Y@c!d$^o\@[Eq:HI.N.3&V.M[.12Xk,4k.l"g(*+U">B[n6"#%[ccHAK/P1B8:%*;Zk[pOSW8i<#_q2?`B%Rl`AW>coQ+VoD\DbQPN*p()G>5.fb1-Q1TTdrL-&gic>6:d*^\33'BH+T==\J'YJV\2%=\F'F6dO/7B6!mg"<IH2jqf$YI5'L`M+>rGa')^k[i:!J46si&.X(EUaV\*$jqE5Z%2>?N%o[k^X,>3hZ6B_uSJfn[+m@.Ik&D2<%QkMR>i90T<K(O,+U5[kj)F'"<VPBb>i>SVdU\1C_X&s4E#>4-eJ[NZj]0>n,T&WBDB'2j()8a_)\,2+_>/r^A\/-0TdYHe@U$'KC%1-uqKlrf:Bou(;e2S4m<?1`1b5-=m7cK+reW0Q_)Z`\'.3P#NdC(<C>ZAHo,>2!jd&+.DLIml.4Ia4`f)i$miT*YBfQ-RBt+QH-V%oK%^e`4Q8/#0r/k%-)r",jeQ<E#!j^TMO7%oP!9\'QaVe:M]`8l?krg#Wb?uVToDb+m:arKV/ulKV/ulKV6ee&V<cNd06'`,6XQl%N"C)_N"C)_N,IZ4@#QZ"+p=Ip+p=HkM\'u^M\(!O7JJkP(Z!CD/>C2eMstdC(89mo(89mo(89nJ=G37Z=G37Z=G39p?kI][?kHnS%JOKi*%2Rpd";]t[&;sA,)D&Io'3'XZ'3Kp^dr5nV%_2j4LKoM*PIUr`-b'FH-b'FHVr8iTRc#CfSDYUhSBOFc3<Wi.!FURsdsr$R%:4TT%j'[gf!i$,ai$.f`i$.f`#)r%m!fZVi!fZVi1)Q_J";kFj#qeQjBt+F3-b'FF-b'FHVr8itS,d&QMM&12.i9Gn";lbH!$_W;%L5Z[aJrGfr)'S4V$5kjH5*HS1%`$/Ro)p9ASI@sp3WpZ2*J0E*%`*sD9[Fq".HlkP'Qc)J.HlkP'Qg3%ZrgsJ7UsRs2H%mF)_(!4%NEg*g0d?iBY`XB0Ag@6o_NDf,37?,EE29'm3)\'G*3&+33)\'G*3&*4Nmr,**3&*4Nmr+U7g_9pNc]@K7li\],8HaX7k-Qq,8;08%&W0=q,8D6'ObO@u#XKi3Oa[ef83\Jn57Kh)UQKR+d7?KWBV_8acj2c>A?6_h1/bR&A>Gb`18\WAN&C!5N-/0UN7;p)7d)k#N:_0^%7f#+j,Q4-#7d;uZ,P<%NOa9bl,P<%NOa7Mb83\Js&Uk53R%Ro!9^*ZE"W`c2@`HLq5pq;I64Uh6dgehS3j/WTbbT0m#XO5V`6A$"%,6XQlN"C)_N"C)_N"C)Oa@JTEaQS4NJ.[B."%EPW!Cd>U!CdlI)D8Uo'3Kp\'3Kp\P=%eH3e9^*3lE6?S-Fo>k6)MsA3iZZ3LPcO%F+T:rF+T:rEuHORC__S[cuXercuU*T6I,rf6I,rf6I9GF3(KA#<.q#6.RMNsW9B+65S8lK:_AR[K1.1L`$,U1@M+2ejs'_ni$/)h%i$/)hL5U"dJrB,>JrB,>1)HYI&<*jtJ.](]"%Lp'!QM^0K/(e3A>Gk#0LF(l0LF*"a9Y!Xa9Y!Xa9Y!XP7`+9OO<`k!9;"`?32AD%S,af+S,af3S-FrAF+T@9.S`IS3"6a@hL\)sAjAfk3XluNj9-AG%5^DuGo\_Np3_K^(N`2;9V)bM6I9Gf#XKiZ#XKiZ#XP@3,6XP[%,6XQ&,6XPAN=^15N=^3/.^YS%e$-+>3?04+"<8TK1iS,@'6&Vt6TDs/C#B7]-g6@q$Tc/Na`N3-'6Jo!'6Jo!e'J\Q:='T!:='T!%:.%P83C-1!3C-.@3Xm*&`0j@j3'*i['V0u=:ilc"@jRm!3Xllq::tR!_U'GB?-p\qKV&o[KV&o[KV-_$&TUTR&UmJ_&UmKpieZ`o%;_^01.RLRXW!GI4W!GU8W#4hG.RMJ_'qsdn("!KG:_A.O:_A.O:_A.OVBYZ&THa#u^g^_604>H=:1+Z[:1+Z_:4l"13J#.A'ZXZW%="G-\O91?V(gmr-:4kt@3J#.?",d_4?3cCU45XEXJe#>I\b!X+#W`D2+m9%F+m9%F+m:b"Ba?c972L%IM\'tK/4.\i/4.^OWm`^u%0-\EWE[X9$#q/-eBc>D2F97=2F9k>13=Q\YcNtqmaF]9<F#"E&k6)Hlk6)Hlk;5kcSeFeNSeFeNT$oA*H;6.+H;6.+Jkj5%5,(_`%+rhUYZ00J-@\PA6JOCnI_*ob5%2kl'OGkl884EkG)3+-,!fc\j!fc\j)Dq.B5iZPE3Q_@Zp)F16B^FF/F>h,S^dcC'%3'X(2h6m1%)/!HT',t6(!?-<F.fkXn$?"2r5:=e`5:=e`5:<3<H;:-\oUGnka(AWZ,P7K+,P7K+,Q+&9N::liN0Ph%`gX&<m+=Z40Eu%f7L2$a%(a7rC(aBJD6I9um0QIMK"sX9lJ<<do#t>7_)2o8O#Y#(\j<=bu*%t4:+VuTk&<%<F1)MJ(&<%<F#Y)rrR>`T@cq$HXBV_;bj$a;9%6mDjUTFlWJ-6rI/U61.!1t']ABV_4e1fDXC)PQ>)1/cFA)6)e\N7;o()6)e\N7;o>7L2$mN,-@u`^MpLi$&o,bXF!B"="X%Jrtpc%"sXj'J<>Qr^dpa=JWYBk_+6eG@&0EY_+;Iu@&0D^0[e9=@,-RV\um9?Z;!e4m2R<)/Rq>Ql&%k93mL.W3CG(aS;]l23@#gI*"ij4%:')X4*!27K%Zs:F-R04L%Z*_>LI@r1PDMgpLI=fi0d<K:&<VPSM-0$%7&6K>M+AeF7'()M+pFN=+X.&[$q(F`'5,o2ba<Am;UENN%UnC't;U?R!.Hoh`Ob+("83r#!UnEp.83r#!A0%)TB]4mL.M5UN&WqYTM+Bo['9RkVM+Bo;7&6H=O[q]l87\t;M=bj%&uk%*M9p<7%7-ZcMM7g'K7-Zd#,4qC!7-ZcX,4uogOb-=t+rq[Z&WR?_84=mNObsX284A;)UnX'884<bSKV8Jl;UA!'Un:!uda''Kl/uS$d]FZ)%l0".a[BP:>e8rFE\cq7@AXgn4g,\4<r>]j_Y#Dkj@q]qlUN/MQ=JVOPYm<Rl<dFF\Ldh/#M2Tl)a@5ASj<F8ebXL_Uj<F7:EfkfG%js'aDEfiNq\X:g]71)*:@YN$^@*AeFbf+l:'?9J#R#Hq;FC&UO%PFhpSds$ukNQCJI*C&Z6)U-J"$n<3ks3UPBfZfI1)DD'`&&J?%3\aD8Jke*t#D,^pdt+/*o5l,81_Y"HT$Po;TG',(+QtX<FWfnd9HD?\k"Hdh&8u1G?tO:MeNp1R<#rIlH)_AHS=$>:H;7K)>gLMs%Un0q+6I-ejWTReE;U6L&WTTA$'Qc)H98tQ`Mfa%@7aA'\@&0Ma0N-:A(oc_00N-:!(h)V.N&L&d;3?;;WL,M9UE]W+$q7`bKHg@7%6BQ^lJg0k-5d>4CTuae?)2beB#Y"SMKOS5b68@SEA*>qk,5%Ib7J]$peL_h*neJ#B,7n;rH;;]3JY!O=FJ<cA-L!eAM+KbTF-7c(%hRbU9#C]EAd]#Y)8NJ_7-g<nCM+KaZ(eiA/T[QT_M-(%IF<Z]93Y6C>"cFPfA1iV0'<bKW%![qtJkedF#WcL+#WdWK#WfL:*J+dk%(kN7n(kPKeA/03Ba:NHjOB<XhA4VHJ6V<*+6VN6-P;sM4%RCta%S.Id:.Agi3Fl^2"b^I^3Jj&qk7EuRk7F#Sk@A%VSjR%CSl8u8%%Qu1<1\;Yr1\;Z-PBp!dB"S/"i/BVQJ=Q-2S;b`)FNDaPrCuoL6I9Fm+S#"Ap->AB`u[e83OoA-YJ#c68D#re?1O@d:cfdCejK`g%jIGFaKUe5f+JVg!*KV6@>.a^<S#62tAkqt__Sh<1a&j_^5N5*jk^^TUDP@4G?;ArM#r.55$o*M?jVr(M5srg=6b<X&S>"p'A;E]D%,t6kM2T09R3LQZ$jUe5]iK0iq_bbZa94!XaeDC6G<#Y:A13bfKe#96/,?$UDj1J/*;QIC2H9#/d8s2sOlJKV)=lj,>R:OF_=bXm@%?JMCkk,j-9KU9%1nC1?C)P`i]g<['Bou/ql^9MgZ0@!_n=ruB6kP2F+qVn$q?PO8]N_\3U)(/ZZ]c<Ni=mCodenVLXQ_W$F]!6['%cAIfZ01XH&_9gA.EHgJmo]jtuVJ31dc<7P.J#k<K=X@%rf6=J.#(+dYgl061'q6/R'Q[<)95dfQHL7?qIU&=%g+1d7ou/q\]eI!F%ER&/LS>n6f=fM>:bgE#mIVrM_ZguLB(m<E\VY]EprOC'7=0^/F<AfB)^-"o41,j]&U>6bh7#G*emeZL>c'j<RURe)OM3mD,rYG/c%].2sE3f@ZS_T]8;eo_<WB8,]-SY/Jug:"`04%I^WZ&!:X9it]TGNVMg6'cE6MX-dMc>$:TRWmpc<pBMXmMqclf['6H3NKoVQ\T0r%cDka353*^-^9)1lD1='qS$VCI1Z-Ph?(-4@Jt8[-OW"g?-T80OqXo+dHVJj[9KPa.[m>;h9ft?c?FI6;:rYQjCOO*rN`5.HdAWPC%+2!mQHB*,+Y$pKadcT\#2eqM,=s9le3*WJ07MBFb5c^/koF'ZoE7%3\^PfSa.%RemD,1)3W8>1<RdNl1V49oII9NBfoB$uS6I#m$%@bs6C#W\gA,NPBQ,NPBQ,NPALO-"F7O"TSu*[0]'G_DS#G_DS#G]XUsTjqUn*$OJJ*$OK%E.j_pE.j_pE.je2^sVP>?t0lgfEaR:%@3bE7?mG<6?mG<6L5jQ$JrS,uJrS,u)E'q.#rZ6dQ>D5Fe$'F-:9Y=R:9Y=V:;]QQErq?JF+TCuF#"_Dk6)cuk6)d`k;7.2TG)9t%TG)9tT[U[gH;21pi5ks=+m:b%KV9'$N,=**cts[^6I?qslQSg=81$C/TG)9tU(_L!U=7I$MGDM1MGDM1MG?N/3''>qGB<nHE-*!X%_U/ZL_U0MHU$+=PKVB-%XCuT7eo]9Dj/j>DN6;EIKV?lQ&OoOR1"*i^%%UJ9,:CfM4MoGg*BA<bFJPUokt"0sFJPTt3mu@u*O1VB%3i!u0*TE39:<"Lf*TE39c<?bSlgN#E9R-h5)EJ!H%35M5lV&aRUnL.@;UNU:UnU4Cem`\e;UNU>Un^:Dda93]l0)YEda93]l0+4j%FEB8]l0+4jFEBc=.QWuZ<-1Z%.QSh#*M#kp3]]YS*$#Y)N_TX$'cd@=NXc'r8LO+lQ4E^]98@njV3C^GabG2=V*dGpd`HliVF*Js%9fO3YggiOqdfCN=,5j3lUuO2\=DRCs:PX=NVj$XA:PX1jVaESpe&cj1W'`[Fe0,n_l=<(Ve0,n_l@=rfF>=rskn&m^/V_<1-6B/N%&<HLQEBHS:a`O>E6TWf*dug*Eld0Y2[?]q]9dfFd$1u.\1n=i3cu]>Mcu]>Mcua<t851K$kaG8n&XlH^7qaqL7qaqL8(Vi$34bt#%CkSZ!CkS[LK1BZ;_+&*!_+&Z1%3+-P#rG,6!KHSj)Dje1#rFuu#rFuuC![,_-dW,r-dW,rVa2OqSNnDf*MO.;:4pPHi_;of4In_^%7%FOA0'WQW+mK1K+mNSr_UAfL6IZ<"_UN;X#ZW81#ZW81#Z[dR,=J#Oj33\f3'u/0i&EOd"W_(lTHhCEL5q@<8B8:I??(X/%3DM6%"<AZO"<AZO1jF\T'6o23'6o23e)1hH:>jN:SY.3DSVE0/Fb5XXF\#$D3Xm)QlNA7Z>9&\8F#"ePeqsRIFTXbCeS4da2^eA;C%)_;%cKju)n,c71FB9jZLl(cB,@$cDO)T4CO)T4CO)T4[4MoVT4MoVT5/Piap]sqKp]sr6X`fVJ3=R*HSeDa>:(S&@:.%R^3^H<H3^H<X%3Xm5UlNAE,fRQN63Xm9AlNAD?lNAD?lSOENXV6MDXV6LAm.!](KWPoDKWRU06Ioi^=X)dG6pfH27)IMh&.)Pg(cbVZR]Ve43:c=m%J0Sm$J>;Ek%3+9l"<6=c"<6=c1i.h_'5SY6(;NE73Xm$6fEjCS-@eS<2[p[6lk#-fG)4.?,G>^`:7r3=:7s>QLD(S7li\58li\58%lniC/Z4go)Z4h&-ZI?#ib"f/Qaq!)1A#E`[N1F?djbgCLVLsj>G(P]n_17LVFrE8*cj;U")Jk)2o/^^SG\&0Z6J)T(@PU+*#[sW^%,D;V<,D;V<,D;VbBanJui98$QYS"`I_aXnn_+"\lCUIE[k<GXpZCHjbG(PYaG+*S3KUj51KUj5qa,ul[7Q5JlN)=*cA&nTB"@ae$%!CeJ!!CeJ!%2bf*";mj!";mj!1gl!B'4?L!6SQC0Bu&@k\ERCSYnLO33G=VlkfQY>&^!ka&^!kg,E/2/A'`Oci"=70_ad6Z_+.$X%_+.$X%3PHa\T'h,4;m'ecbYa^7p%hRaOg[sflP([!OClJKEJM4JsRK$R/lL":@POOO;%C+?,VS\cut#%cut#%cup<k_V5A\R^WrP%KX]FW&`-:0&`+#^#]6K5,IF#7@jR&^Z)3/6Y]bVYERfT"Y]^pG_U8`O7N-B%[IYkijM^mg7p8!M,:D&pNjNsb*GOo&Nj*[47p7u7%Ehp*137?M(*GOnO3mu_**GOo&N\ki5*`J[#Ok($<88BSCNjNuN7p8"8j2/'lMFVDCjC9dK"f%WkMe#$"gKEQP\@4gh_V<1WUpi]R%db>odl0W"Ddb@pb]XkQS4@7fEFBg';1cSCf+WTb6A2r#l+W]h7OH/sV&fmt=OH/sV84SP!R>s+J84T+1Ua+-T9LmeqUuN5g_WaU4%-e!&C0%RG$MtCsD([:@<MeNdlM.X&6Old.i#^;&/Uq;i$#^;&+Uq8uF_VN=5UqB&E;ViQ5.IUe"6J`k$.IR7pFE]JUl0]+@#q:VJ%PU70FmLY<L@W<qsh8rcpW^A>gZt#6`cDt=bl;"3#eK%PMe*94fW]QW+<-Ll%W]S-CeX[[9;V`K3WU:=U<-L)5WU:=U<UZZ40d&BV%=A4!b,,_J'`$3a&N('a.`$3_P@Zg(Rjs&V%Ej6D7JnMI%1m5C?H&#XX]L+5JhT9$`6p5RQnd`29Gpd*and_oqGm@HI]9BcrGDBRZ%]0e2KhT9#u]L+;LhB<[amj'O6h'!SI%dH%iC%#R`;VrW5WUCCVe9<Y`.Gk\pF.A(!&,`4d>-UVJLN'?LE&^b8a`+&k"$"`dM'qP-%N=*]Dj.;9#$9W)t0.iRZ<nRb0LMWd%Z_V=)X1dYr_N>$5iCJTVE2:=6i<Y'kE2:;P3)\\VE2:9:3)4J.mdQ1)8/%$UG6l68`Aek%%mpnCY\$F%!5f:"br%Zjln%?qFT")5W<1^<p0pN!MlT(6NrLIOI&,_ucaTI#?B(Eapa`+&j'/Opln&/0HpcH`"*r%fOPm@:`9]^i+%e'-pQGs7W$r_?/LJ\TZ-k(18\PBl*T`+5HaG@I#b"+_h3o0fQd2@i($biXJm'=2u>i#s(Sn74N,i#s(Kn;rVdGVU7Qn.:U:GQ:5@%4;j0UL7&69$9Y+/%A$6`)Eaf?%3Er[##Cs<"Wl*sE(nUBBF7O),97i"0tgi?cj5CSPE?%Za]ROZ3#UuMA27'B+W9T(S;\c2Zq<ek%4<Pjp*g!Y0;9>3rN/b2hep'!*><J=5[!2jH=?L+=/Y:0UBKS#/#9$C^j$@IaRE#Dh-g'qaj5E*A=?Ohj*`tNZO/I$;kOI&Dbi=8m%'D$J.K#'Pj83G-Z*`sjGO!iAC`rh1]<S/-$:PN@M4JZK2QNnQ\nROh<`'ZeE`'ZkG`06\@+n:YV+n6,,+n9)8<f)U%%#JU+eHHR]%-=o_1CWu^3`'[R[`04UI&eA[o&eAt"(/O((=?H^uQj=sL=?IIh@7QEIU%+55U%)Z0L;lSuL;lT$L;oG))&a%=)&a%Dfu5I\.m1`/%+[*a&+[/9RanuR,LB%dC-[I)4n`4"J=?Ot]M.U/f8k($^oh(fp5NnAca:l7MI.TnnP_@*kSWXP0U/M[K:X^a1d4m[.3AuOS8SC+Y%T-RAWp.<-^@@q)3Onp=HnjKB$<1`<<KZ_bc8j_V_6pp&Z7]GrhN/#MCOEU/=$O:CU4IN!B>D^dIH,.j)Gqr&\jWR@9g`]F6#'l[/%<^4GDP7psL'k>Ek>eW@2<+fsgE2\N5o.!`<gR(+WhlDoM13p5S\Y#pc@Qho%3^<Kld$L`Gai!soX=q0!@7QMB2hWN=G$W8lECRZ"%D1#`e^0sO\klj.0-8LgsMMaNb2tB[%_s$,+h%V&oVT0ib!BtX!:@]AKO/ATef^M[TF)tQJa*QeE4X;BFBR3saaJ/hb"5[TXOiIZ)%C74`Y1Q365p@ic(]J%38c"WcM&O(rG@hnti,9s7dLS9.2NolU;n^tq#]S4=7@i$H`&t>P)_[la`(`T?[AX9@df]Q27@j==/2lpe.%4F3t"U-E<Rp2u*jj3b'C/0d"n)`cVAC-7q!W\bcX'bXiPUE5I2+l8QlqP2f"Tman?Ap$]*d5.OCUrK1oM%;"bK;3]ThO&q:dHRsd%GcZXYTbu$\-J%FD2ISboP]F,TDI'=5fHB$I4W[>lrlQ4`ZR3LZLT9^H=SqT4oWl;KN@#aqRFh652XS]-6)Qn'T"_O&S$[G4j.RB'%5+'ujTGnXW7q??(fU-<ZA^'/=J`&^;*ZL)A[]k!m6t_?89W?"+=j(&%*ZIW'`is\E4dNY+GjP>'OV'Ds7R6"]dcb"N4I.qOqinPB%N7<*.ZVPB6@r?_47VFmb7ng&r35X]ii!>C!E.l4EE.l6[^_%J\^sP"\Z4RjJ_a[`j_+%Nh_+(VO%2s$5jEcrJoE6%?nMFd0`=ld8%`=ld8`RBpr/KTG)j[Cl?iG$(5LPK8j_@p=1_UF#I$;Z0a$;Z0a$;Uan-p.N"N6_\FiUA[3KYnI2KYnI2KYu8hd2eh:+rm0S,93;0%N0&:9N0&:9N0&9>)<(&f)<(&f)<('AA;#FGA/sT>3#U]E1h;9W'54K%E&>GQC![-@-d\6H0f7JRRe<DKOqA=&O:`+$7O&nE5U.6i%U(I`.K177OJOW^cJrENN)DXY<+W4_X"<!p&1h;9V'51'Al*dig#9)Rj"<&e&*0"o^)E,Ic#r^AAZOm\nX0@^"lSBL=n.:SL=ALbO%ilPl0_uhjEi?9-(n.:R]`>fqnOU_oS8;/FtOU;WP8;2h8Uoop?R.DZVMbN(Q*NAOiNa-3hE?c2>dZFl4VBZfsa((>On48*Xj,jBR%n48%aGbi*<nOS.bGbi)A4OW-/Gbi)A4OW+1*\$Sh4At)\*\$RiNtcgo*\$T?Nt?Pl7gM5FN\kuO7iFLc,7L.H7g_A3,6].*OTJ=5%,OHGeOTH'P8:`/+&HWKrQo<nl"W\tsOTH'HR$[(-g)QoRNNpW0_aYP,KHgns`'t(rA0V7!Y`\o[Ag@6pZB>+riCJGG_iap.i(/9O%E2:74i<XpgCs6#G[]rDfN>-WY`l&b0(V@JHd7@]$BM<,-,6a[j5pI`02e[l['5YUgqHtNVSq`4YGfW>[4MaJm4?75R^_:O+JVRol%^XJhfr_B*ur_B-6rLJ\%mdC8qiU6mdiU>j3OoA++&cPOU&cPN-7e_,B7@"b##^`K.,4$=j&b8\9&b8]7`AuYlc:,f9_*uF,%2U2V%";`6M";bM81gHPdW+fLi]b=Y(^!grJm@D$:m%*&Ym%"?>d!#PMd!#PMd!%5_@IF=:@IF=:@IH$`KR"5ASE"->).DtjA=On0FYqZd%3#^c81h_QU'51(_oQY?cdVBVV&4q'ERO$@+!fbQN1)jZj"<1e<OH#?G)E'q=#r]B-'53o1]f.9,`oJ/7&aiDe&b8\L7`[[-`l+-[%)aiIrfU26\@EtB_2T"<bi!<O7i)nG<(t^pR"%US8DrBjQ:9Y>:l@Y)CG8`A+h]WqImfXS<mkej6]b>48]gFbGhJ(mRGphMUGphMU%;5^*tb*uWe13k8:#^N>a,NPE2,NPE2,NPC"O-"S$8!Y%g#^*'(,Ldb)&`ujX&`uj+8!lBS8!lBS8!l@I+(=R?+(=R?+//*ZHn7/+%1d47^#sL]3C%qsV-NH/-2O_5+O:gnUO:gnUOO;mT$q@0W!Cj"L!Cj"L%2e'[";o0=$P#Y)3t3$4h$G^b9fNq4i\Xnn\eA>%]+\GN%l`<Z->.qW5>_K^&>\'aOiZcmCi$-YkEY7G/_aTqS_*s_Q!QGbS]eT=;B'p4h&9e270R"Eh_V>GO-Dkm6.7ZG7=JDS?_,ql@@"c,?%J.\eVJ?bslN)4_)#E5$Hhgc=(:66&Dl@Y%7G8`6Rh'!Z0mK=E$mPHM1W&m:7=*Fp>T"GJ$Qob=<Qob>gNh--6M`#9:ZXOnQe-L,n%BhlS$#qWsK#qU6SFAoI.jpn?2o'1"8hiFV1,.npo&_]uV&_]uI7;+bK7;+bK7;+al'qt!t'qt!t(#eO:<:"Cr3M?+b"MdP"raD%g%;UN1KJ0MXs+="OiL5cagJrL=cJrL=c1*#9?"<?Cf"<?Cf1iVgI:egC)^m!/SaMnHP1*#9?"<HedU@2N]?:9d$N'(p4Z"'2nI3)<+%27g:2E.k_7E+I".Jg7q!J0V]I_@bKs"%R#d!CtU^dac=VhO*@@)r;q\@I419U$X[MKXMP-9N8i9<29VU?$)=:nOUgH5c.7PDpSbc%-dYuECm=c(V-X7`S5c-.88j8sjK*[%OlB,*,K1[r&`+#>88flrN:_9a7X@-],IO)$7VY"Q,IJPdObunGA'US5b`p@*03AC\mGsXs%g(*(4D23(8@PB1^88ZE+(a[bR_b7T.79:_1*Pdf_%cI\+-aSr\%bXBcLMWcmPM&K>LMWcm6T.9ba_4ppN&g[NbtQh7)(Fr`1/cgL%)Cb%bNKeTA)JSRMNO3kb7Tqk[NKeUB7S5a1,Ggri7VXkMj&Ss0Tombu7cP7\9P[R^1'K$mOjX`5R$[(-+=Eu:A.j$$6`n)F;BnY7%3sge+G0!'D4('8&SW#rt4%(9`*C>n6:50s_*AEVu%[fk#-Spn1%[i](deP/_8<\mpG0%UTQe<IM\c%>@P]Y!bPb'U0hP?]D@3VM<%N'p9"6mCgB'8a)>1(n<g!/Zq`a@&W^3Ei5c6RG^b!>F_aA1#aX+VW<tlAUSlF#"DMhW-jt@4c\k^n%%?6omD?,+T`0Oj6^V,+Ta0%@[(";04$S5,X[^6%\O)9LJ4MJPG(NULJXeN6RY:Ra\8M76RG^`+VSSVA15mY+Vj/GRdd25N\^_<MDTJ^72e7@,)r-%74LBP,*X*'%OigF.,)mTuOi@m!87O#'OgY^e37frp9T3%]-770n+W8`epjtG"FU9hOfHD-3m#[0?S[HU.98s^dlk#+TFqPX#lk#+4FoXu=4.2$A%G">(04!Z&)SP2KY4!5br*KlQ%:*q3>*KlP:%`t*e,U89hOtfgGp6XIDZ'3:sh@F=2bjUJ.>C]2eJ9ciO41r)oX;sM$T!NSoQ(DZB%ZBNC$AHubAYsU:pfZ@["YsU:pfDuj=lsqkLfHD+]m#[0jF#"VShW-Fh@4c\g@-1^]3c>8?%`q7MLLd3bPK?@(a2o/e`ecdER@VGj%>mFnnX[=klf#_HuX[=k\efblElXVd!efboFl]@(TFYXh-MD1<Se9-R:l8ffBe9-R:l8h<XFe+I\qDq"hHl\s/I%A2El8muMFWGK7%\k^6h<?#DPeC.f-Uoood86q!Q9\V6PQMRhB^`mnA@ZeA7Z'a*FP=`]oDXG?n+W0J0,VW-J+W7!>!0":-1)OHcOGgJgaMji2n`l>Z%fK'!WAK?Ab[S@#OD&n3_1W?6XUi];`JZ_?o-H>hF*U#O%N1/@,^5JEse9)ai<S)5VD4_$Pcuh)]6e<J"@o>GB87*a^0mk"g0m"Gq%0m&uARLWVYJ.,]gKFD'4,I6#aKOi^rUh&+=)3\LpOHX,=&<pVhA5\/a6WAfB6WSrDP@5?;Nmfag*TAhZS]o9]*rsM]Fbn7<FYYa?%eKHb:eKHh<e]HST<JTK@<JTY2X-:XCXq&hsXq',&Y"j^a\2pEu\2qPU?(HpMau[HgAKC?JY><T'T#d,JO7u&ZeKI9VG^ju*LkMfr%K[SBo6L!cGK_@8Up6[lFK=j,Fk"R0N>oaQBZ4720elf%B1s]me,@ql.Pd4%.-s[i+1gD%TPc@JjBW*tf-rh9c1fU$)d99\DULEF!%UnR'aP(ou(P_OlZQ8TV6Bp6(;F+YdVBt-3lVkN6,d``REC5/e\.^A-naOS*D=a"rKcDcebQpP/]Z!UcW8aCD8G0/:^dCGsbG":#>%^I#tPSYCOTobBO=W6r\ceCX-\a:DKF/XWekm>g=gj&U";*Aei6C?lQCBNnW;KE:!?OQ&F^+mWg7[>%02I<$6BD5GB9P$YW3auVu5%[C!6"jD@8VMp3_SkW5J742u^b$j:cqf2l<loQR6fYG4;+fY2Juo87lk5-<F+BWJ;2A'5Nh"OqR%G(d#nbH+@eF[dI3`&^'n,^I@9%<9%B<EUZkC*W7nVaAr/H?ef:eXeUgH+mTj2o6[f:ZAo]_^SSt^*A,,SaZ;lh^R71RJJ=)ALS`]cH><:SD4T[mhln1dI+2MI36'I#%"icVX3pNA3eaW)9CGT>H->[R(Qo@H<>>`U^lfc;QUW:E8Vge(*3c_QFD&p;BgbnX'/039tWi`$tBD^*tS'S>b>A(`U6E'4kk<npm%peXp/ILf^SRn@SUH2+C<>_Z38I6VshPYVCFjQQ#klT.)H]nR7YqmG'0b>NI'SN"tE>t<=(H%QnBo2\(2?8MakfB%'l1g]0mnHlX%%-^(X-BtUBW_38K?n[3J0N(<.oj<Nj8PE4491*<L]OH9$Va@H(fR?-u_a@H"d`$9u,N(44:`$9sViXp?/U1;H!"5lO/KHko9$qL.T%KHkmc_NDQ-L*M'dZEY15Z]W7&Ag<9UZB<9>fgo[%Z]WB?fgoZZCo">"fgoV.CuiA_fgoU#Z]W6;fgoTXCo";!fa)#ABV_j72U^4!%E29[)37?D%*9ld"3)\BP*%C4cNYHXl*%BVRNYHXB7g_<qNYHY-a1;_X,NYCg7g_>R@p6n9=OTQ+#Wm\aKcS$m_G6gMKcSU(_@Gg$%@jf`f`X_5=@u#$!Z'4-;@g?tKYsUM!fZA*.YsUQ!Z5=T\3p9+ELNKVac+oZgRB_tG84//Wb\=_hBD,9sl$//doEgR8G!O*88Imk:%Z'4Ag`X_2Laq!VPaq!WkF^3T#*CJLg<(U^MiA$iCi%^`Bi%b/"b/^"U&\sYP!&BcZ!0ZYA.=)D6#Cm4o-NPue*=st@S)6mfm3G#Q%Zi`XL[0&aM[?Ck6ed_s'erCD!Un'opOEMIT:tbpn6eY+b$u#s"$u*`g)9tu$A2lY9,b5r',aFo'aA@$[aA@$[81H]XO5]GUO5]GU%O5]FN5)+"Y5)-D]fU^;_iZk!7i%])c`<c<!$'4'3!0;CC`FDN$oef0%V#u)RB*Wg[ZW$B2c49=\c49=\dS@Yh83=Us83>a>83;Zh%+mh626eVP_6eY+ZUpL4dB!Ng+F..=^Bnt/#lSUKfD-^I4JrV#=J<!>B0C%M$k>/!#-eDul;VE983LQI`UpQ?U883j(UpWQP:,-rL%K#b*=LdtQ/Ua*:<9LihZUa*8fdLk2.Jg7@f&gDj14(KS<SJ42@[6lk#g*%DLm:8,lg*%AMOZ=?Em:8'%gE@IamLY?lG;:*"BI,_Y%.II1qoQDu.l0T%AoQH$[H93"(Et(*e^Sb\^N,(d*[@N7GBKIIa[2kp&ekTi;*6g?RiuBX5B-XOL%*(@r#DXP3*Q!rm:51!Y)o@`k%%cKrq-c;)#%d@*)iUr6=:8T8D*RZYo@s"ed#*5JFOH.h684RDV$'3SZLdu2A`$;sdN(81U`$;o8dW(/!?_o!\*RKr*%d?N&-e"47%%e5q5@X+]DPOY%2eoAd_c%*9GH$<ra,<[(<0rOQ=SnWVTk`KrO1EYTC&<E>Z:H[([a`sVj6Te9%+W`*#A3?/3B,lsHGA<bGRld%!%1j@#2RQKRT/Y*$cPQ`;I`>oSSi_CgG`>oSSiXQ8dE@2E_iXQQ'MiD!S/raC0;V`K?l0]+FFE]Jal0]+FFE`7+W]M)\<-O-hW]NTo%eX_Z?;BsKHTp<+PJ4Q+j)3Hb"aN-+*ki,?l,K1\?EJt[iat?K)d8`*Qg`[VNmZ<DbG;:,:h2mUQGA=%ZRld$t,MSfKgpm_],;#FE%7[cD,,L%7'Z*"aRUq&iLdbGuaffu"R899Q"Uq&iL;VfH.Uq0K6>uu6k`Y-P1b!s5TCo"X02H&AQCo"X02C>Ntm%Qm/fN=k+`pRf^%Yc6dM:1b_N*O7DtnYVmlI')%`PNjqCWU:=XS5`9D;VfH6Uq/oQdbQ&dl0dW02;K:i&aiDB\/NVmb!sN8A0^1VZE[p&J"X(/5R;=Q%VhCZr6BA58C:ZJP,MaB'Z&=a78k-<P"Cj$h)#<L<dXmVT%`(\aLL?plPJKe<LL?pl"#/0[a^CpX6SQsF+W+q^A2*^7hCLikm-Qf`%Z&^W/$:`)uj<E\+^le%[`a^*m2902K%D7r:E1>%/fTG_7q+,ddI-a5$X*j:"a:0IZEU8>(YiFA,j^TBl:HjkngMfFO0k+)_fuH(j%1hFLYJ?7u8,ig!:Z&^Uek9Kk['-A[lOH5WMa@FrGR?+_!8m%3KMB'6Aoi4%r&NB3M;*_bBOnMPI,OHN"0nH1ia!MgKUqMsS8mF4U%hUU^DeMA4[l]@,eNApNhgFG^Q0tfcu1$fq-0rEQTNa_B%3ek<M3`=i9*(/UTO^mT:J7Ie)TO[aYM2pQ`J<!9Nd@nrB>b-bmSE4e,%b.\q0Fp\"?MB#"@!?X\d!?[XFgBfus^&pQr6K;!<]Br%r@gG3T@i.>d,7U5ta"Vaga"V`XO!4!<4GLX-o)3eEG^r9k4Gf)6NAQPV%oG.Lh__M(["NU"U5f`A<S;s<3,W^[o"$21N"$21NPNWk_%d4c/%d4c/:825831sdV4.p*Y4,Ju%E&"JS="2&+8R)[R#@,KroQ-YR%jC7mG!$hF_E&%9]b!l.g^gd(#"5f[1D3.0)&9pIZ&9u"0&9ng(.I];46f7t\6f:O<%"SXcbX>;Zjts=[!`+5!,VPJ"hpSq2#`Bkm%!/jR_>H>R2)H`fNPGf<"&#^=DlTrK$GS1`YhuOS1huOV2i(5Y5(d,TC(d,TC-p.foU$r&?U$r&?U$GZ/jt&Fn@.4/S@IPNnL;<sC%L;<sCL;B(`(^:M\R#9.u(_0@$@Q6L.+se:<0dN@/`K5>[`K5>7Mfa1V(;o)3(;o)3(;o*&>RZAm@%?8^&B_sgGS1f[i;j`^iGgK)%_3;AG"qS4'8))=n(^<dQ@OO@S@OO@S@OO>FMkT#.MkTV?MkTVc/;D"D32UO0*(.b<E"%F*E"%F*E(oR/N\e^=%?7(NJ;p8l<&RY5%!?4Db)>F90R=1Y-a)H8'a)H8'a)H89*9lrP*5g_9*5g`,E"%L,E"$@aE6N%50cV7M0jQMd^T._P:P*(94+Lh)p,DZ'*N),Mnl-Z:%>Bq\/*?Iu;iV\!sjak=5BCaF.iCk:b4IjM\M'p+o,Tb7lTu=jJ4LBA(<$#4*SB=3WLJrJ3m%h0S.Eh)Y83EEd6]!0dk+T`2aZPf4%315O7:S,ctM2/E_C8q#F*r7+,2@hYdcK9\u"#u%UPMd9!&)^!>a4V:J:P*(i4FgpT4FgpT4:.#o`L4^%<<J6$knk13U17:fTOV(d%:</H@&fj@!!?Fh?m>R&XnK]rG`<.rO`<.sFi^mYh!s`?FM[*c$M^OWA/09m-D8XF3qFr/D=?I^9=?I^9>)-Y4=e.WFDXi7:@I[;T%L;a6Sdc)/>rZnj:&f[h?E#K6E*mWfFD7qukLDg]cnPJ9)4<A6"GodJR*mWe;=L!-6.38#)W:=gJ:VC.`*Y1-"4HG9O%d3BC[(iU'%ogYs^`fo=_2'1,LcBebW6fUacX;VTL=Zmf;Z?eX4=^=030X?!eJ7KC?&g`a_"&;mZ#GA.B:F0TFGRA*_e)LHZX2gE3=ZmhQZ?eXK%AbC9\0<<+q?riHr`2k:]6=uK-^s&hLJ=9L"8_C*o&%GbB*[bSXGnN0=aTH]eP6^RcP:+2QRQR6U20g16<THaLX<J/T>"'M)9%)bA%]or#4fIL*oJ_hnKO!jZoT#?)j=-=a<HR0j+jA&:(4RA<.aMUbEMEJFJZF3TC;_l@I]MF\g:@==AaMU25MEL6hXQr9H,Xibt8lF_Y%V^+^&e1!tO#8"!]cbMIg_;n0)XX4QD)C>t[>"tSVdTTcoV:FW-9<60u?s68Gd'Php^hJue`f$\YojdqZR7qWA>K4a0HDN,F9chPa%qL+j\YK>i[Wd^Z^q):'SF?5!.T<lY79oCX;5t5(<gJglg8^I([*o;[I/]fHTG":!7E=jPDS0g19A8'Pn_HSmCFM>\^9HJ%P/p3`$%Vo\Mj;FR0[d5G'g8(,i:BMG($:\%CX*_EQQ:edNacXqU=O'TM6O+tb4qfKG(H))TDU_aPE5EFlB@kr=AGL44fRC,Wd_W6ilGt99C%c8or<_==N=AEGQ`guOU1dEMiemQ:=+!GM&f4Id^(LuWQ@FRk=(7)h`3kHJ=KjM?3cX>=h@:Do>;U[s5;WN&'AX_<`=_YC6_eco_d%H"J.IU!'4'DI`#'BH^*ljcOX"H)*i$$'E13<G%l2(a>$LSBG))*pXSd+nEi<6$TLUcg2<u6fa@JU#$(,nIc`+SIK]TK2/-K.;.5*%p*_X3H"L+f6KF8N^Fjf&:+HNme+kebV&g&qjI(B@O=$#pS`PRJUN>A%TrL3g?5>kmB@96fX,NN1;nT3RDot7&01;DR>,AW=@bTTk%V&/Ua<1]e@4?>4%%q!CG*m%Tt;FR2!-Z4XF1\nBd?8Kf0k9Zm8S]<5N8832=^g,[B]QMmdku+P&"/('Gl^uYl1E@q8&<E>f:HWeT%_6Dp]+qO37Ob\1WaHQ-bOb\17a?r!djN2M>a9+KOiuoFOm:83-/7Tnn*jUnP:M(h?*jUnP&(sL9-aOC/&(/HB,8r$%A2I3F+W;g#%&<.BL1)_V4&<.BLJ4>DY)3#>ULdhm&cJcLIaHP"BOb[VGa?qf4jN2(ga[7i3j<5G@nmjXVjWPSBne`>1nROQ+iuoB+nW8b&GVU6&%i/ipcS-imR4eBkeH9?jjh1ih0:/6Ng4W_Hp/Rrb$kmBq:4Cf[**jUnP:PL)g*l=$d&)g'C-c(oh&)deV#Ag3VPM&KfLMWd-"#eTf%a_[cn6T?Es(`ZI8i(/oaE3,^P37?j/FJQB53p*g(JF;s?"s%2sIA.rL*l'KWf)q&lnK^)K`re;U`re;U`re;1*VXdYa7+==a7+<d%*Q-oW3ekWV3eju)n<igKLPm2ap_Y%_prITT'K_&i"$VI[PP>t9%fdKd#!dp`P5lIA%fdIg%fdIg:BG'O49/o:4>U>jj;q(uA9^3:%A9^4Xa=m);"9L>@*WRrX*WRr`Scm+GGsFoX49-X$T#AZ'H,.HSH'FB>GS2&birL2girL2gj%4J(#7#J^N<a\:N@3\I)@u&!2IU\9%,q%(p1`k!u0@R*t:)b3`S[F34iUHo/oQUuh6f\7g6f\7g6fb4g%$,%YpGMdBJC^tp].`Xj)@u<S*fo>91nK@jC-8/!#)h:`;jqe:%N<aQ!UbOo.j%41uD$P#rd\Tp&k>gH]\b6o$e9FMScE/H7WUXL[;WAo@WUZ(1e9FmT(`EqL#`XUYUrJVW3/'h1E2:H?39#$m2F?FI%)QE6<NRW2NkSP5a*5m&\LM3L'PL0YqLLaqXOc7e71)[(]OGq\684I>VR>c2DOe%H\GX+`54IM/XGXt;=4EHlCY46$Xc8FB.6dg5Y%5P!ZRfsW3-c?k09%f;;3O<W7fAELDU^L3aSi7LrKaN+o&7n%F_JBDJrP)CeDDsu*.V.ZE9SJ"c,OYecoSNV#<S<qH^D<.OA]iuB!%nPj'6a(&O7a(&[;aA\q_+HNAH+:k9q'Mm7K;`rW#;`rW#;`n&!:#K+mpZr5OY=\7`D;93hgQg7-mm1qMO]06H'[N@$J:('QO*[?q%a(C:Nib4:kib4:KWhVQqX.qZrX.q\HU5m6<XH(/B1g7=mohBE_`FEmE`ZoI[`Dab''T^eL-qg<Lo>mr3@jsM6UFH`'d1fBA7oML8%a*LH_,fT@LjO*\t.Z^<KXH%JU>9-H.<-:%:@s'WI@s'WI;q980O4DVlO6+b':R+FK4H`3%4I/JN4&m@qR8-7DnQ6o.nPk&r`A;or%Mnh2[^>+RK!bmP4$L)0/6CQo5$>GC<$>GC<$>GBq.\nL7/#4Vch2.3*gGK_o'TX!W'TX!W'Mh`M1$>%$(Q-6?BoJr>UbNo`j>thR%*)G*SF$/#CF$.f=5s/-c%ImO=%ImO=%ImD31kB.N>dFrqYU)Uu<>l&2=;g:+:`0`'<+Ro)ZY,@569J;g=_B4Z.3:"7.@tC^#M9uu%b.&dp87aWt@q@L:;j>ZDc^$k\8F[r8S25\211*Tmp9!GUZDGq[:R+C:4I4!].Y:+\3i-iWIOV+5apb,o&5SQ\6T^URHHkJl*r1:!%Bsb@`8u!ONCSST9ej`"h<>uD;=;q_>=;q_>e9//B*c%Mn*_W7OSgo_SGU/8\GV"i42uTX0cD#_,'B68N)WI`SC-t*!7RK9R`[).8%VD&A:YqEW0XG_gXW\,4LYq?sSYq?sSWOcc!a1Ae).0ca^69J6a%ImO:%Irf,]sR,(bd#FGk3*!.YqEIIYF2sMMT<#9MT=FaN2N\N%0cmBj0cm9g)4i==Ap>kfAp>kfApC=<[WuQ8Q2"'Z0pIdEV]o%\>>BCS+rU8@W/iM@Ml&\,iNYS4f<k.Jf2EapnQ6hAnQ6jG5@!<t%'T_A''T_A''Mji]6TgZ)69Gn$-'s!X*1)VE5]JX!,B5QX;oR,mO2\Bf8n7kU]M<HOEkdju3-Bu8BSNFBUR<-\A%a2p8;?;3LgrL4%M`<'$,B6D4]u2WCSg'3:n44PDn44L^i@4B<A9ao0am_h@PMmtMQjaME0bGI`A+DZL*G\g!@kp00a(0G;]J19Fa^[(gP/ef.F]'6D%iK667UIcMji@4>b%$0I()'6np)4mR_am_hAPMr2r-Grd30c;%3@kp0Y\JI"`73'W6cO=YaL.Bsb&5U]nKQnc&$1UP+PN"%NQkYV"%0e&\*a$b003$uKeED2$Uig:!I&]]QD,`^LC#`)t74@L6nPf6N>ZC!UHOi9_5,`D=Qm6'ZVb$m+gdR>rSP/UsVMC]\*OX_]rZT4?b%QQT3@PMt2bYt5ESb$lPW72CmP8/7?ITdhD+;cGI`*iWT`PYf>FD,j8_8#fYo#-+$r:Jo)!G,1!+f,t'In9bUD1r<0Z0bGI`@QNg$%MM^g:;+uX5U6l4I<&"uV11O"28#hp^O&RhGSt_+!n5'j`i/oK9Y#A<)QA(nU_BW&SKVtbX,!8cB7!PMbM=;3^9S>pAR*?s\9SB=b%@Nmpt73aom`C+s./1/4Y=\OK]=8&ELH8fJ1KL`&0#`hq>&Y:2)M==%PNUTISPMmsrQjf$d0c;%S@R<1G(),\i/:*<tWgEob;8jf*%Ul%b58/7?H.B8d-NDsnir;]hkJu>PV&j4U^nfH/tUiD8M-G^pD9S,dg=R)\?$K7+&-Gh!A9SB<7UDY+E@kp09;_!X_RG+#6cfW/?%Rl:NFrL=!dd7+d3d`+\"W/XC<'Q$Nq8(s?KNjQ&t>8rdaOZ!uGJMnjk;m\99*GOQOob`nNq'I.(&$>-U0u7?1O0/*Kn;-#%(*4,O%[d][BZ%^4$:XR0-G\l=n_.+":$(gG@0u5(FNr^;KGYIF&'2L'0MoPs]>s'HYWf+n#O'OjpGjOEE_,FW%-?s@eEN@d4@s4[%GYIVZ%`Zp(*g6`"=dDdGVUl?^G.#ggf'Q$Nq8(s=5cYi/^GW)2J36Ed.ZnVk.M.7_l73!!"OZ4]),B6D3Vheh<4;(.?4<]^fG`"7'^a!Da%J4IaqJ>WZ__D`+I0foEQQiKno`WUN3N9*2FN(Mk?@8)2A_O(=aKX'#u@B=#`NCiV1)O').d[1<$[*]0*k+#%IJkTl8_.3M*#p't/%k!Eu)GRX)o^ghsd"s*k/e\G[F`s/-0.PU@VlSS)Ji3@iGWXK>!#'d/!a2!]E4S9U(i:63[W$fAZZuH.0'$"^MQT?J/;rhp"4OV7V%n44ZL^p@+@_Z5`CEWSAOa9h>MOXpJCATI?'d`KW"'VV#sO-FYd4Hdhnn.`!p!0>'=!^'B($1JY>S,eWBEWQLZbR*bQ`LKVT,]a#L%'$UaP'\/]RO(<;54M*?nD7P.YauKJD8`p5$Un%h]'^_CjO2Q)@4AsKsn.b\g"HW1r&j5$51r<18,`V;<8(,RGlq!T&WB698o2E.D%Bn")aP2^]NL8=VcDb->SnV3k8S[ot)B?&_gb[Vga8".DrqiU#b]H:j:a8;"*cJ4I;^uGkq"$GG%1r*$K,Ydc!6RT^V3PU^_SuJFt%i7XXD8H99DFRhL^8E[Z9-(P#HV0)8i78##C,;Gb!Nn!]p^iK9JGj`V)0L8NJ-D$s1'A&AB4r,gsQM@"h+fbR%pmj*ESIbM@H*7PN%2Ega-[BPmdiPi9SB):HR9l-rRL(D*\nP0DZK_J+g"(o4<]b>9,]5oH-SCsIcAp]ktk:WbpGg6l.51,oW=G=uj_.ib&=l_tp:0PjT%h)XLh30>-IadpRaBlrOP%Tci.4'-AVn'IUU*$-Dua@5;Dd@KU;SO`Z!#P.:EF-$sh\M0*l\e>RiZb$]k`%P<P'&C)4'u902=SJsl%O$dCigl9?bGN<@0Fsm:Wah?Au]54S'A9Yoja6YI,15*^=gg#V1rTc8ZK%Z]>aYrb[gjb;raEK:kh*EPcFQ^@HO\:#`MSnJl+2ZKk%fYg`0r&ALsY*7_!rPWJuUj#Qd*Ko8>3Q@9>3Fi);&jO$;n(Zq"<8I]Ueg,6Eds',]-G=JeD'jWIFo7QA?L-rjgE5[N]<%!5dQ?EF%*0]69Z+7QCG>:]lUj(,*'%\ME':Y\Z?mEC,B'q!0P2e\2jDk$B?XJ/j4d?VP+,/U_Y;alh"F*\O7.i:Hm+,f2-bfb%B&Rr/*kcmX%\Er98Zdu3%M`.F?J?/(^<G2Kj_GO78([;(t*=CNh[e.&0^5/QK*NPr0ohn;t4&m:1moUS>mmnJDmM'e#\mojs\mo_:\l6PpjGq1+%jGq2VQql2O=TiFq\RT>1\Po?PjGp(ajGp(ajA(t0OZQT52j]fWjA&]EP<2gbQDS7DUWK(,N$`bMN$`bMN(/#k1)euR1AY\8b%Pmp%.\kB3/#1K4/#1L_Wf08g/<!&BXGfVmW\bXMOYiN^Yr!BUWR>I)a3nXGa3nXGVb3`#)bZsb*D<0dSLTVRGH?eq4fF>EEN1o8hQ\u)%f0C;<p!cII4-i@R4-i@R4&m4/moUM<moUM<mo4-\]lRfRVS8R!)NF2bBf*P6Bf*P6Bf*S'Us\st[BTuF['<l62B(JX2GU*B2B(JP%ib2T;i`N@MopY[$2\="dePC1$Jp4#MBrS!g2R>J6)r$dB$ad1,h)RV'jnahfW#?q*UlEX[Nl82jgmR0S%.6q3S&$,%@l'oZe?P>,%Rm<NSc5`=i*Qb)BCh;b]%.6Y-S&(X>O3QUCoJ)h/qUc5E'Rad%GGL;Ei/[H7);H\;fF71=+.L*;.ruepgaW*P9^YFnS&l[l0ID"$%4smfbI8"ZOqO$>=dDmMV,`j?sUlQjHMEE5r6[;@E8+L>:Vl4,(cAS]mjNF3VamKjc9^kO:R-]j_1"i+lNb3J\No_juH*?ORigB(m%`3I$'`3EQ7*4*pN-]Z=:80,tC'QHfi8)i1FmRS=efps=Ic1'#HBq)WW,'@^7Y5;*;S*:rm@l(eCF_k^IJQBf<H:QssKdF[B?<\D=%koGUjOW(Fm#/qanZ'j1*2V.2JZG<$YDkW0!fGAB]]45ifUL)qnFJk"kd2e.?d@JbV2+[/ZM.8?O@rW3m@r4'4;mas-NjR3hNjUSr%XXT7hG-$YbG-$YbG07b.RG4u%RbP)&RbOga-uR)BkiT0)RbOgYBPtl-BPtl-BPs^Tj.=G(hNm;I/;sdWW\>@HYqR*OWIWq"3,rd3%S88]'"EGMq@5PJmKi-cgFj]--L!egR<CVU&Q[S(&fi]2PmSmmW\moG2\moG2\l5HQfZcF;j8,,Va(BFk9&lKs*jp"%7ma!&qD`J2%7X(qnjYbk9ebV7FCdrWMNCJ,nNCJ,l3#^VX3#^VX3#^VPib3MUi[Aujg:67EDec'+*G_G/*G_G7SYD*uG:\bC=kZp7SLTYr9_KDu%NK;s-bBKt]@3)CY\R&=)kg+0(F0r!^W2%][Mk`H.&kA-I<?+a$=<(''S5(;(E2SMe\K-U'\K.`G\XfIT`ce/<`ceGD7WbXmQEjdN%W7SB"*0'>bI5JBBI5JBBI5JB2p!MEP"k$+WJMaf6"k)%`"k)%`"k)$u'hDgr=(]dRldl2PDPmi;\K)'R\Xf/pnbp[Obh;,dW&$'g%/<K";W^*$-YsPTl*6ISIBf*:DBf*8.Bj<ffSB>Mca3&(9a3&(9V^eIHRra<&D,O!R59tHQ19Or);AeS$A6-p<_fZ<]aW1baaW1cL%X>>RXjGnrAjGnrA42Y&8:$u+#:$u+#:$tth1qIaWSnS\c12@jcYed`64**![7^G0W7`.;V)9qSO)2kN%D0rcfAK86b\gk.uFiL,/%amN,>1ok+t/Ct7uJZ&J(65aX>0?RsKa3nWk]qj'6:6e;$4-i?g4-E'S4(V9+CrasPCra\3Co8\VW?!F_W?!La&=k;0ZY87mUirht%VKV6^g=2.*dF=2!dF:qA78Z.475pQEdF:pV78l:678l:678l9J(/=0u(7,mr!O?BTVoka=*Qt1^*Qt1^SLTP7c8?c'`c`nk/WXYD%/.1.:.N7'H1`G,Jib3-uib3)Iib3;/Wh[BNX/!KOX/!M%WfCqff5r@fnU\_,pr<U`;]T'p3[p-]4XcAGE2l%/4F<_`QIeACkOk'0%JNHn&K0*+(mg`EA1q7%<1q7%<1q6K7dH&T@3Lc$aCKto%2mmYIUsIO[UH@$rZTCSpNUBmfMlo;abB7R[P.RR?`[NaFW$7\[X#:mH%Yr7p6KsEsck8S)E)XF:Z-Fb:;9OBrj0tEjLNQLQY)pRbH)ACknZc8ea,`PC_8/mcHRG+%T%^e$b*GK!b3^k$(=f>gs4&X+PG06m@%TcL+B69A(86T[^V'AAR0AqNYq'A=o#R*^lC0qfVeUS45&NX>)D*#%%g3$u%3`%e53M.9FF&k>k^72sQ5b7&)YC.H^>e4u.GUirPn%8aT%fPM.J>R+)VR0qfV%@raY")jB$=2C>mXD+niFBOd2ad`1?kUlEL`'Q(K\'h`DB@PTo3'pIC7.b<4).[KC"`T21fMro2YMTP6"%<A_00;+tjtU1eGBBOZQTV\:r0)C8BWEi5k1aW64IOuj;q7!GLV-Fk?uXF_(Z=Ka<68a]+`Mo+D4:3*7g@Zibb`Ho5!f-GRSJLDGl%R@9MuN\iKho[LgtG)@Un[NeL?CknaPeBXR;-F>!p9P?qjR*a+m`FO-?MTP3U'U-ilU0,V4X\WP!U6s/"&]J:(,`9_18/.9@.B8cZ%N`7a&9WFK(:/Su@G,1"-FsMselkEGnAk/kgbg,='7tc&C-ml;G;+tXnU6s;&;8n33,`@D#Ul#KG'NIh?8#hs'N`7a,SYCuJm8+PB%lpqg(gF8kafT&?SYoS[1@QR!m'=j5R-FP-r9PgV_@U_E^`pt14`^Fd'1a]XUBhW>5dTGe12"!QoKJ4a],@sPbV^S=F*@YK-4&X):%G)A+'[rXT3e)pTo87R6572cX'8/`/sOYeDq1SlhB*D'am3g.L/D.u[_8((LmAgL>#E2Q6:Ji](7HG-E3"F%S6H,mh'R!4MVfXt]]%^!&R4G,fc,e;h4(VKV%V0sia50ps&/GKfF+]OPQOR!4MUaLl"na6"E&3RtfAb$a*]Z=EclOe$7E0sY<dNfb@:GDtlfqi6dZqfgh)%p@"@aWW!n_48/-ej4!5H7!=GE-F+k11pS?;9P11n@kp-/`aj6<NQLN$BcL]E):FnrNjLO/SYD+clpr(Zfo\0>ZW"4cR2p%;OWA-\%WLY5l8aT%cPM2-QRbB4%R)Fu+0rZ2X@T#9V(R*R8/sc6^/gbF6F>9a8l!dOPd`#*3Fg75i6:[hpUl7n4'P0sQ8()'c8'74K:/OJj%4#ZLDgTbg40(c#^a4u]G46C_QgbH<;S3,kVm+a%i!p<=h:?RYJ*BSJBbg<n1DPoO>bj!cj;m,*70t6``P]:.o;]7$k,Ait5G`#ut%4%1/;Zm0jdcjo_g1-9PC4cpa6j@"/:OV?E9)Hhk:WoPFK,a4GE.69JG*=:gQG,1@dfI9]YM&g<l,^(H!PLq=!3JecujWo#FQ]p&N%JiP7c.HVn!Um[G!.AAhZ*NA0HFtP..19si3F!<\DcACmY3YU0qdQ*F1C$.m-,b>\&.I&pU*QdJ4G.\c.A>eib)VNMUUmHSfNAS"@%G9]?8kAWB.d#N;p"msga84,JqN&7p%bt(2`FYe'@9Xu%/-UQUH1k8O!+q<pa0@J4-pEF7@\JJsna.&3GG.\],BW#`;)VU=,:2!-A%Ra=eAd7N_q:>7%/7l!-1SYDnNL6[iqCe%)Y\Xb1G'AJY8:*<&9qG7`<qY!h9m[POUW\U\EMk"r<`:A/6m7:(r$C5N\fFDH].Bsn<%:R>+mSLEdhjEBPZIN0ZD'A)1cq!M^F4&L0l'ASH1F&-aFVV&AE$1:2Y-T_<I#MrWq\qsEP>`[IA:67P7[^DFb:)L4#Jck43>i5MS%JF5hYIZ-[=@+sI-U-%?(NR%1Zm*)B3X\K/OkQ?jY6_c_Og)_R1:hN+KrAo:B2=P3IGMq33*mpN,g\6QmKL`R-EsVsbG3UC&Nf_$C%Gdo'2")INee*bT:S`t+O9nN>58Rud*Mq=&6!P3ouO0"!*TI=;b)FurkdFTXfn8ja@_1Ot$n[TsU'<bMuh;D'+obpEO!8KjZ-+=Oh%OWMg'%U*!QgW]%Q=dTB:m6o9ja-GFT>jqUlgPMZ=?]"0C_o:41[Y#Np-W.7W4n(imDfJ"@ejOK:5.o0W046lO2m4a:S[`jG+4\1.%[6J83g6(6VW$b?FC_dhq6_AT]!:4#W-H8SmV_:XU,&@K(a-FOHfM7[5bJ\QhDD6n]B!7jrY'&Ti>mXtr"2PK`fA!_][UV,(L;9r3%1@`:6dXkC+1HKLr2IhddQX.d;8'MZF4)m>YVtnRqA[c?TT:bEAEidCM:so!oEU>DDrI[4igduon';Rf!h0I@;Tf]676?fMl6?fFn%$Je:%,eB31.!4W<*l[QC4:9r=4=7^.F\F^/71][>3tTGL_E/SblQh-AhR'aO:3_QR38pD5E?r2\g,N;1\PPPL:`>PiJ5IqqZ-@AB%NOf48k<U$*mSFfL]0g%=Z9+pi<!Ul6809nrVmE1*Y%2`)NEHMQ%]"*:lqV;jfH'm]jal6]2YL[*.#sMITfPB14&I8T"RHWZED1N\%mCYZh4-2u+r2!bEbN!,W+HPoPh+<%]fc-:\RGG\BdN7'^#imboSJ4V73#'G(FsdI!]I$1/Ed^0eNlpcT+1KA[Ucs[ln]dehJ_c6n%Z9!*bVa--q_-f8FfprgJ%`?ddIp<E(o9%kF5j";al=55V]>Ijd4hs,jaDlVXi^/2If:1dE)W%/QN]M81OFh]Gq.G^aS53!*a/=6s%lkA6\W;THug!1RJWK<,7NWl`1;f@5'ichCf2XrjEa<l@+!nkN\W+T'3r/LrdM;PR)2Xrk/+e&HQ.qB=0@te`nFfIj\Z<`KJ:&"Lp%9nLD(krN$D+=G!8NGKe`W^\lY4;Q&eC.a<aBV^Mr'>S+?C]\i4P"bpP(!.eQa!01>n5psL!j*[""RoM=RfFLfA.uaW7C!6XYt-bR%4;Q$cJ>\98'>S+CC]nu6P)TH;dE!Y``u<V6n5pnS!M1d'hOC`;2?>q+a<lG88n8T`@u5#'p&u_I$/hcqfa.(L+j4(T+e)l0WfTpT%Ntnt7VY<rkTo`DIdn9/)::Xt<lJNdUKkpg8XH6-VNtnr,i2I(:"RoM:RfFL&A.uaW-*dj8Ys^JN4I4&8J>Z!b(\"Dc79jY^a_ND;%'>\14/E:?imbm"TOoj<)lrYCros.AFkM$:'Q31q1U_o\&8/^_l+U.Bu.&7uW<(K;;<_,M=I81ppnYAJai^n\8`:G+5U3KQYL%1s(%AhprsO2Q9@*ej-[4::-5AI<.1-fn2B:WfFdSd0Nd`fo[I>O2n$dDt8]dM,KWUF;^57o;AZl6qN;ePR#VWhUu6#B^a"PNjQR-e2'.%c\":HF4rYJ8b&T;MW/nX7oDGuNhUbr*C]KtGne2\ngKACj\Z`<K0G1P8UV;lPPQ\bk<U1Yi1rR)fc/F2;*5Bc\E=9f!]f.j!\#>V%5p/VdUd16toKMP_:*E@%Ud0gs8V%Spo:V2>GZ#\RnYAL/id"?k;*:h>Uj,c[7I`JGUaVfK85VJuOJ6t@"B$(4.caPF.\r/s#DF^?%Qh0q;Et2oCk<U;GmA*.9lXc\*caT%XOeZ_b,XJ#$8/^bm+[tra.&9D*<(N-6<_/?8<?Xg%UdBt"8Vn/'o,s/^Gu>j*nt\[2gNh/e%;?i6tbEF,!QKLOZ`U]fqMWIEl'[-(jP%&]7-"j8-4UN$h#F-"GP:A#G-WO%mc\"gsj[k^Ob*+;8EpmeDUemX^8YJ8GP!XF8<-$3.%-WEtl:TC3eSd1Mpb*+Tk:5&hn;tX!5:[6u/lUpI&lDPS!*ej0\4::1AGneEm+HPN$;BFHV#0N];Sd0Ndb*2*Mhh(,A/E];>L%;$#%$KXj%S9:\i$KXj%'ZuX)3-U7X3XXt?FVMu^l6qn[5ok[MUcJkE8U2:3LNCV5:nEnATfacb6?sX5;(PMcj&?f:A%>?['[)^23!ToS%;(U%G4GqrdGq@R/8$P267NRm9?;hn6o;"RmA=r]HSEE0[L%D*($KnZX$KpYbN@gYJooV40b+ipI#C.$0PO^,p-fo@<0u-c/=Ti^Y%d$*H;TVpBF[Xaq`7fbb%N_>u/9Q;?)PM/!#9Y"$5pHGu^4AT^eGb3DSnN7?9.%VfoELBCmToJ&W*jed,:MQYLT%$7"4:g/uk,]6M%.%VfoZ/tf+e40!k.?3>4;BNmL<.u%3P7$"6S<""+T'&B``UflnMW[Qf'[Q@nO_p]M5U'G+"spS:8]d4<Q7:"VOn1`7OY+n?VFJ!V%PFtC2f0CSDp!cP'4=QCEO.[n`F2rMtUj/Jq8F\ekOlCX-,Z6a#8gJYQ'M.aV%g"2O-O!C1:C<nBSd0f\d$"Mk[=nZbY#?GHoV=at%O[F[6d.8BA!dITcb;BE#5gMA$8/put5T8ml5h^0qJMbhS"k$)*"]A$To[-?.R6R/)Ys+W@Ys=cBW<-e4`r]tT`r]t,V^c4/$]-^j%@u3%m;s04=H7Y2UH7Y1K*qc<qRd..GQ8W6I'S7T1+q=3I+q=3I+pIX=Kf%:hKf%:hKf%:X(",p>(",p>'iIk((!(IA2a\YroiN:F%oi->re74%de74%de5HLu9TKA*:lbe.:eqfs6Tl2U6Tl2U6TnElNTF7bYLs^'84,O?+Kq$L;B+%t5c75LTcQj:I8*7B\P?iqe73>0%e732Le5N2@:lgmh:lgl=:eqfq6Tl2S6Tp`)6TnEf"nbt8%J<g@%J<\31t?)I/>@ad>-G&eVL#>&A\^PK:%_Is1rWs9XOj/)VL#t5%1(*?H_J$*m_J$QpL!a:('h3g=(.Np>;FZ:%A`d[1a3&)"a3&)"V^eI`*\4#5*\4!?SuRaW/<nOqO-S++:K9lZ4]Y%I4]Y%I4]ND[%p/i5+X"dHYEKVf2-@7;',($DM-@;aLRd@:9Rd@:9MX7=bBX5\$BX5\$BX4O.UWK*&Dbo_)fr5Y5(jhp%Rb6A)Yc#\!'4B/#=W-r:%H[9]+)!jO%RHs)mpR(:2`S;-nN-?paq]K3dHJSr*#/8)@]fd]_XGZoA#'bJgp%782feM`.eAeqG.dmCT1pPMf\]7[1[B[H#8V$@m%brmD%]$*<!cCJ-rj"@F0(O(qM*h.N#oiN3Yoi-!n\K7fH\K7fH\XmR(&_CN2cN`"VS2Zo&WSS\K4Z<%No:ZV91rRk$\Yka!b?;jo%e1m2daZ-Wf=!Pf8jmK,"bHWDHe%^aOB+D-0mLe/_H*lbkngLrEWh\5gX/">hWMA.<U5ii4XH$n>TT2^1j(6iENcL3em]egAmccVo%MWF"W5I+%u0E"&.Hb.I_U3h2D5Dnmn2F!)ekr(b`m]#Jb]#X)<)NElL;'ioE+%>p+*r??d)tI[RVoke!*d\ttpK/G1pN0O[^O)Aj%:RCb%FAHgE@YQ9'Bmgt4ZAHLWKR582L3ne?RdI@BRdI@BRdI*FBXW]e3:_#!nd)V#C89/tCST8uMkeXjU5c$jXGp``!OU6b:Xqpu%4k@XD*md@i3E7"mp/i8.p/i8,S^bY_es+)8d&>Yh*Ne$P8Sp<;@rW49@r4'U;mfJ5:YL+_p8"n4bJ!1f'\S\a8!,t!lOhhAi-Q0l%PK(Wl.pV>(lSLd4mBJR8&OTodd%77s7X;(pobs;E6@6G'2C@0W`A-<mX(,>s/WZcUW]hcc@t@=b7gbZ+:S1;GUjK2*8bZ=4PO>D"%3Un0VAF_l!b2doNPl-R$HRtH(pK/r0n#9caI#lf5q&[^jni]u+POGba-C\D^9YRDsB&XHSbiF,PR`Y;'fhB-#\s[r,Pr&6-.\4]U%=?D`8Z$;`+WT$Kn.!t&BAts^df;LKecPV%94BOh3m]h;^kW6.\n'@SI:K>d(<?2e'E/u<pE)0K]O;Dac0\2cP*iS9o\4:mm1C0<1%*p>$$lWf/H(1K7rH`3^#FH:RO]E_:]TfZ7ENV>gYU0Eu9FJ:h1^30(8GgE5(D8Jo#2mBaX9Y@:HXiSg3hEr;H-f.3:4b39G*EJsm%q&YFXR=#O`Pf]W?pJ=TI%I;^3eNr9hGW8N,\%PMMV[@/?5#g$IniW#`ZTT(+;sPQ0Xu7?NC"Z)UX>]ODX<u6q>u_f7/6IpJ!^8#G%^Z1d\*s_T=l&QX1F7)O^s2t;q71eLh,\=lW>&uo\p45/&fgtGU<FP<.`&"Ymn0a<MAL>lW&U;6;=s8A\[M89[:3+B:nn3@4eCs!0%R\UA6TDNs#R1k60q3@MCjA4,Va#1u2PoDCU*";6mZFOh9r/#Jld6f8p\+J)*OZu.U>_QTgBtZ=t'0+4@q."*C>N9.5:@Q;sM8>fl%<VefHBDp'MQGK1n&HrUB">hkhQO`CVCE1Hd'DtuVp_3R^^O,runE2DCk<@"[+A_d'q<Wppds'F&[,CrPH1XLS<]Qe*riEBsFp4$n%d72:+F"gH#h:ZCiU7KUdlWehhd#?*GpfuS?%t8&<0fJ6$f$=EtX;q6Hs27(kaSpiq@!jGBY[H!kN+\,)2A60EjCk^KHVO-F`0+`V%3Wg`8O6B@JN8pAj:JC,GO9jL`*]#/A(4*pY*aR*KrX:ejNW/.C?2#\nT94u%pr"47fJWMHhm5tFpEi+:)][9_OU[lXR/@gqiMM[h%q<mT,;`ujJkC<(a]Ra)nQX-c+n/D2t,(JV$QYTXT`$-'Qde,@/p@nmjDHd5:i`CObpg\l^(Z,:.n4*QUSa*:U!=GX=*t+md*sq#_%90n%YO@"GuO%+W!4rXC)5"6:D<n'WZ5#iY:&_,4lO4DYA:K9o[5?::L5?::L5?/_Xr`C/rAo%7+!Lm&.2#:^%2#9!W4JG&?*0'r"%*0'r"*0'qsEGTYM=WDjOCN5:hkd*L2UX:0AUX:0AUX>\`N^A5sNCJEK["\'eL?eQi90n'/N^eN"N^eMu3]<PB=</dDC"JFA:oGU&%a4QF&Yqs<sWh[t6U5i+#\!4r/%[9IN4H`3a1Hk1UO7=-NX535!Y*?scIkurljjE.Mjfr6Fn>MBpJ#n\XImuKufm6X?:&\6:7K/8<%^!I<kjO)nHjfuop2Wg\mN&Qnif4gRBC-t9$Qb,O/,cd_`b^<JE]D>OHLAGTQV[?t![6k"p_5?Ne`W/dnQMrs`&>U,W.&=[$$"R60%*Oa_\:D$-J5CLg"'E!tX-M^SPOGWs-+;=^9672P-'Je&X.3r4UjpX""T-BE*9W9MR;Y!*u'E+%_]$=>gOGWs-,8:#))O]fM6o*M6%c0QtZGaq&HqBM+roOhbQ,l1G-''RY"B97uLXI1ld=UA"P'E+%a-MesL9_>6=A>2:$a[CV(P)9/PO\GC;.V\NfbmYFSJ#5[^qBLtn%oLBg6oVY5jU-Fg^7"63:guqOraQ.LiObs'.+qspC&o$ol$<c4n;,Af14@LD,r/j>.CS['R3YaEd+":`P5>k%)5=H\.r/j5kp`k>`%n>?P&Jj1KdmI6'PA>!i^nP=j4mRIVPgs;@-J2J-;Kf&NKJLoLVJP=(]#\5O!PYb7eZR_9_hul.7&T<#@!m,HElU?AdZ%;aGo[1t^%WfQ:k/<G&7>9M2h<.Qn#@t?K2@t?K3;eD+_r`C:3r`C7:r`";&q."gUkqct6-@`$XMYs_?Rf'EORf"Tja<Z8:N[B7WN[B7U3f<j?%34d?[N[B7U31BcM31BcM31BcEije/LRGqoNa5Ue'Vi%7k+,co9+,f0Nlea.O-@[S,-@[S,-@`$TMYs_;Rf'EMRf"W"B_'4/B_'4/%B_&(DUWFV$UWFV$UWK,XO/@(OO*gR)jjE-bOiKWJ^X1$s%b+!)4B3KJrE(0?)XHFrc38B35M!k<GGqI$k'j<qRes?TRes?TRes&c%C$s"C.IP7QB^Ve^UTkp,UTkp,UTpGkO2cW"OAfC4O@FVt5aF/2j:iO?Up6PlON)[LOQCd36:gJ+Rjb)Wpf/JkrE(30`OA)Nql'X2%m)K0Am)K0Am\^Df_&j&\_&k2'_4R`h#(N_9#(P2LAI/*2M(E5b8:s.X8:s-,,7XWS,7XWS,7XWONAUE?O`\3,,Rs`POYliCOYliC%OYli37<7IPR3HA7B?f4'HX#&kOc8%sPo6BA9.Z7RD<neOjI!:!6$/#X4,]oNT.6!.J#nh!'M*g?732p;=<?'&\3kOHSOn4/j,11.%WK(uSb2b;VgYPXG:$l%'fB`^AUVWRsNiV?V&BFSN'LsB2<?."s=<(D^^IrQgSN;&gVLZW??F-!?j!s,dMPIEuMkdO!MkdPL.ZVMt%/<7`!XH(;LME74&YrWBIaJM"eqPianl=]00ARV8nNnc(Sl<)3%N`0YjNcG"m*!^!RV)Xe,L%HM$!T-9bD8`X;B^!M%\E&r,e^;`>%<C]D@<_#MA<_$(QFa^samP*0gfT4#!fM<5P@m:aLGg2Jm`<QBA).sP7dEmr.dEkZp=r[=C0H0em0J7XD1PJ]QO*/i%-=&J#;g$L7%O*/jsO*/js:Xqm$5Lr7j5Lr7j5?/L/rE'jFrE'jFrD['=F2A5h2"Y9`CjC1[F]$MHA^Skc[F*>s;+Eu<<_#MA<_#MA<?;VJ=<7qM%=<7qM<-`<O!2lFmqQW.$qC1uKk"#8-hgtXVo%7X@A':'2l=8")$L6ZaSs)Yf5F+ea5F+h.'N]Q:nmcr%nmcr%nl+YtaH,GFaH+;[%ab=)ZUPU(NUPU(NUPYTmN_>s=n\1I/6?-7NRrjNt.>'TTTqOH7po3NqY8Lp:=KWIGK-Yo[KfZ(K^SkWT5>oNYj%CDVpaPKq`/iEq%`/hhkOe4CO9]ek)R*:W@0q"Z.Nlh2i*TK!rk<.,3jElbLf!8,nA:C>9ao%C&@kp8HaCKaqO@Po4Ud-9u,DF?BUI$=!;\V!T+":_U%5>k$.5=H]Yq2moho-8f[k,/Jq1-ZDmA:>ecAq#V$Re`(.-M&I-9]i7o@kp9sa(0XpO3.;nI8&cnqO#KfoJ)c+U6!Fo80=&kOZk,`%;tMfD*U2TAqZ?V]bg4eZS2lnH:r];TMD?OK,A#*N8/]Tn.Us)UP"$*L;T9u2MDCXqOYA-P1RsM_bE/HV8c0!pI?L-nb*^,n<(6sS%'#k'',`E'-PXFa>IWT=11^3VZ]oILmeY1S^Vq+:HE9AP:;hQk++!"S;l_X)7hr<;B]MF[/jF&;3l,&c<-LXlD0mOk_@e)_2`<:Y4%UbR]Jl!b8id`!J\MCp7G,@+"&B/LnY\u4b$/IPiXi^^SI`)"e",^uPI8c2*qPP?TDR)G&=1#%])R)Dc4`[$!YN$a"LMb3g\@8,ZN%_O/9fl4ci9IYoa)nKV=5i^^SI`(pub,^uPJHQMfG(nJjJ$=b8E&k;'TYqRNq1PIQ?*sn^1+6d5i5=HBZbK%3X>X$_-kOPU`R)G#,%EM$Oa`!p#+@^RgLQ&jG"]E?Y<=e2:Iao"[MPOXbrAt>ZV]8o1MNR$TpEHEP".ZPj),`YIo%-M3U^%7ZWR)I<iqPVSbK2BT6I\o.E%plRTuOcS$IJY/Zs$2d=7'DR\Nen_<r!^BT'+uN1eBC`%eR"16pNV.V.[L)kZMeQZ^nZ/_2^lMbaG2dk@9#+4[obdJ/WQ2f89g'hP%WpA'RO%hc,F6r0Hnl&gW7Xj^h1%JgUO-(O+,O=]&cdC?SjN"tU,<s`1A)t\E*[<oCobdM(^)eL`2YOZ6AF)$f;N3gdIVe?_nKW<Q%ihsk-&jMOL'0fC8,^tV5-Li=+9]AS5R)Dd_a&/_&+chKX808N@.JfFUO7Y/p+6d8j5>rX;q2miZqN3rSqC1Ekd#Z+"Tc],dTqA'=%8aJtea6\R.DWoLiMR>14+)5;2#A@VQ3^k!Oq2mQ^o-8+r3^k!'=X11>k""^(bYM*VA:>ebAq#J51MJ!VFjqEV_so==f49=s*0H[?%(OUcFqmP9sG`;H)pu8rb`b7QL)1&?Y4C(F*m-'kS6:[+,T'GMgAT798U#E#jaA6sNgguE!0PEQn5BcZ9q=tfk30BgWNt_>O5#,%i%">Z+3iX;C"O!J`i5LRWpr"P9`d#V.H69gXT$2kR//C9HBE^E!k_&,O(AL]^6T@J=>Tc^8qKRSe`:?Y2o3M@N$k(J2@@SZ,WOu[dk%C?B&UMJ,cI8#eS;+6houIYr)>k"!QSR@i"YQH]7@nXRgae8mB0P0[Zf+J8XEAq!'2anQ/<Oap3j-[sco:]3OFO$`e16]Xh;XPC2$%5*M=VhOX:J0N</_PP\Ks'4i2(5<*U2g^f)1RbWtL4]KHXF7)elqsj*M\Y#/-JD\$SmKZY$I4F^%rCJe-Tqs=QSn]=mQ]+TbjQlCO%g6pSh$lreMLICO^La[O)*nCl[)mLJ]&#3Ms+f:o=N;\Eu[S.,VlplAjfT5ZH@QtRVmp7L:,=S0QO!JjG5LNM31\EPOX0nI<6WG38%6<5Bi)F`*).Sp]-8c9?7SWJo.oq>d([R0q?$ZZ-9W1Q;&q)9u,_]SgHprU;HiFi2iVn`)YpV6VLY.(q?ahR_l&-)Wq5QB\D5QB]G%?=-k5LYr-^c[VmCGklR`3W@H-rolZFrR\gZ`F$CXhKQa0qY@>oqWEA(Q[f&2L[T`cGJEq7s8DaHIf22is5Ejiq4#]KJ,e+bs5@VJ%s70O1r;-DB%psb\oY92]pqQ6k^\bBeqR<*rO8j:soWu1%ci3"eF^%&cs82JCs8<T1IDnEW+9$tDr:&a+\blPh\U=7;Qi$L4(1:eL%kh)#9lL*sJ/G*+T3NR/r#;6VKe%1FG>sC]]^1KrpB0$4&T,jm4@sd`'mN/l2<:J_e/$uOgI*!<''k\sYp@%V$T5iJ%dFe8*c*peb%AU7#Jr"td5^%e),`8B'_o)?+Gp[U8Xh;,VhqP0B7k$tll^Z%rGgnJ@jc@6!iHc"TeYI)Wfi;+GjaKGusYAZ^L8Mgq&Girkn:<)f=%.)[]hfbgpE/SWfX5;gS;k+c?SB\Gf[kgI3tYI^4]\tAHdj/k04Hej[ga6$"i:+lAQ/QlEp5PFO1f5]RVPPb<+h7!rHckVde]Kaj1%I;#3:s(r_0n$KpJYh!u(@E9=mS\s_)O8@HBbUdd-hp9aH1:/oV6"EdWC?m[!CQ?dAD!LdELUOp0$16Js>@,cg]!6H:oW=gj@q"ed%nss$]L*!ZHRk]q3O-\C[$BeOE?#jVhoY,U"kB;m*]K"?icE5pOP<PHR&#K'+H0_tNhTkp8hp1sumkJOGUOD&A/,/T@JnBB["W`>K%LH@LkQhsqRA=FpgS_S8_a*4g^nkQog/)Vd\T)g+*j[MEO*U%pHr78"IVa"MTp]'U;IehGWrhE9hj/:f3o$bARrg,he5NtE.=.fJi%:VV*<I$UD[(%/h#.*oe@"V3d]p3utgDI*+Bo0E,HQ[ih;QkXK88pXU@b!<C@\qM!s[*`19Bic<0WPqP@iEi#^GQTg6,%aF%5X+Ri%]eXJZek"ua"IXJ\]i)c\(QL)Q+O2?E,5\k@26TCEJT1p':qb`[VEtg_gUI6m:W*KX62\M=GL$jO3*dT:-/[&L#jN3I[eHook:_>[%(O$\ohOjf:_b\$rs0GLNouj!,m-!9`mC`EKokAL9L*\SVkUl<,n<@^\rp[*tcHr$o06nRH`kTR:IC!7bi4a^=^>(:Q;u&ZTqU.jc%S@<\q54;W,R]*mo&&3JEXoJRu%rZhLW*FW8f9Zt/lLjSQk:V_RiO(oL-'!$U&&n5:*WGWDS,Vmfs2foZpZkI:rVjS/`NT:%qsT"(%bFdVX)h0L-RB=#JqY`YSrhk8EDh%Va?iL!']jLBqpYPo-O8ij8`rGb!^\Hnlr^f'H4VWD>Mnf&d-\(X+=,b3"n>j>(lgK<Y5P<jj%]Z9'gbP`O3bPqP1Nl=fg35.7_^R'nO<h>'$K4r(-fKFJag;LXUO0.mbiqX15$JW5U0^>dQ,)/sJFa/nPRojFf3/W?XL&_>r,CH_(%"+1kh>"/F-Gu6]"@_3PBZ[QncF%#@,Iii#rLQAdS,_"i<&]M@i_4:ar%]l>B\:%\?0(_s.RcZPhW9p32U9OUX)g&n@>@VE+>;RIa%IQumNVFCuMa&cbI@2V17bs=5`[=3Mh0HFtFI5+4AJOfp)090JK`QIi3`P:AY?sK8s'Dq<Hr/2Y!+$09@)Ha0tTfL`R6OOR1Nn#Y8%<m89f7M\La^6O+0LK;,5LK9M;A!BJ_Hr=a,Ii)BE57^YsP\ct3W)j4*9XTNBT7^q@q,i(j?^JUjU)Zi#]C`<YbgEjR)0-U"GO;U[%Ht]).34eh@G'*E0Y^%'kpRM`QnrJb_^:K=W^\UGi=2&g;Y'fc[dA7YGd8aNN)nnf_?0-G2M]Z4H3r:jqY(,dH\(u,\hf=JK)a4>r%/oUaID?%ik5LZ4K5Ah;#5Q0U-pRf4uoKWB@(]Tp#2[r^@s.8q'mcen60KZ/VlZs&:ruT?!LA.(HD@9@i05]GU,A`&k,b0X&S9k.e%:Z(R++O1WK<\1QE@<+(FaQrfsLr7C1g+ZMZ39%l:D\O?Cg%Z7KUYiDt0-B'9b<7D*oN1J\d'*AfmSa!_Rp%&FQK(L/HO><lk4ds!%6ltuZmB^/4CmokO8*kAHhELnobNl[9lERJfg,@Z`^V8Wu&Wl=$Q!`Uq9C0`m-mUp@K3qsQeLl#1?:-RoY1&^ZH+,F[J+;:$a02n;%Gi+F'6QAYQ^+\Zpj+o3>L9R9<"97TZS.-XlhZ"ghlgooSg@!#)^s)/<BDMP#G\Z3jTKkkO:^5o#bPBf5M?i3^?$b&S<3kq>%1XuX%LYVj:q\fpNo>p&%MG?iGn$3\WfI2TK&1'ia9'ciX1LGcI:V9\tM.*lh1$;0aHL]oq2j=d<Q2tK5Hr]OP]E4C*=O7;u?XF+r`37/^%lG?cEnJm"OXDh$W"`5@="u%1bD>;?\cY;6Brom=ajo6%AHgKQ4nkn0@bKBR^J9nG<7n5DKmG%cN=qK'bB8f,ko<,USL)]=S5Mcc7%b\'sniPe.N.nU_+3-J&8AJfDdT`IF(m0q'i?&=o^`PZkW?.SAc='u5@T6e36(grI*r8i@c_+oj^)<4':IHP(9IEu^6pY6=RjjgN4%GR]%OG6^?s`P1"manFs`h@lrLOSu4ig"d`o:RCLce$'%m0&VcB.pU`^l`@%.KY`P(*@*+lOtG=4ghC$F7i=Pb*YT5Q'LaEqlt7k2%[oZA\WYfCCK]YMY)tXdc3>eP=^1Y>X\C1BTkOIkaUccFSX:\.abIb'bma)um)iM"#rItUHEBM@C4^(%\Cr]07jK.PQMIL.Gs-F-M%5^/6JJ9q3)4;uMZE$SgI"-_W#ZcA1,pG^FQDgDQa6R,$_pH-M<Uc6L"nGpIH@jq2i:a>]AZXM2X$d.&qM>%YSmeZ8;M&+rLY(:6-%\3_ZMmgVmrmgWhj(&e9R=tim9cTJar]0n(#=-,B\eS3o-qI3ZV^%bVU%mODq?LVaH=V,-u1uc^IHBh*G:#J<E+NbaSFuZ/SrPQd<%pU]hkm:'!:U*`KaMi&,MrqP,ND_Jleak_GLa*oW!g>[2n':J=pUKap5kr;\uc[MPJ<\bXj^Al6#iHb[V*X>?)bie>/,T;T3$UA%`%m"b]6H7DO(P[#S[(gM+$L@I1fZ*V8(^IG-A/\ss)*[)cg1W)Q'K#Z)RCZ@5YcIs\gq^);o`bo$DTt3>_;J.5f1;<Z(9>ju=1H.J_%@C)(\]CGji87lLQD.Q3]%Lbu?F_t6M4uV"W;eLT)B`1!hs*(!W4SJcfAB/c242bLrFMF^qS&Ra,1U#bse_'18TC7Sn<(^[,c[+!_%3!@\iMo1-"-ppBONlHYL6$T*u2Xn5Lg4K(cnE=U2Ea@F[\H\(WppKOXN&L-68er^-M6A4X@3A\@i_[DIp5"@=q]C>u^7YmCTCBmp%Ip`@@^*ln8Ir):N)X9J%E9`CiTs)@Q,40u+NK)(:Tsj/m/t.6fY>l4<p9iC[?c2:,aodPpID%;'oJn<QQ?8GJ'/,[,ZRU,&U.VGl%nJ#hKmVKTBGA9KXlt_"GJL<dMN!LZoHL%9M7f3SJ?Ir<0fl.Y3O#u5C4=TW#lj:CEY3-kj\"8V)W8TQdg?L1(W7Q>9)?ubMTS:S/%_a(5Y`&=Hfh`\EMZecX#"0&,;QuS[9NUFX83>`?t(EJ2i)!^)88A;SmI"uK+bHD?;`p^;U)`8ML;=Nu+LS[CsnEi$\g#-KrW4%9q%M78B6a^@@'On&*AZ4;=\`5qr1>Yd6*EDEaD]u.eb(%&IM6T=kXL5<R``#0T,?eW7o?`PFVc$%BYm-DA;lt^haf[oWej,^eeGZ,9U%MauQor6mCGm-A4o?R's%qYFCKC&8(m%4C#Cerh]lp-\M7TcQFFgN8o:I&KPc/5?FZdG"-O?4lB$?/'X>o%73n4jpU6d7Cge*BG:k%jGT!+2`F4BC^*<)Mcj6p]50&:ghq>L2i,JfWsj`-G1\R]5'!/m;9e8_7d+<pKnC%)e'VS30G6J_#,`B;J-J^%[Z26gZ>]%W--,ro%$\nWjI":P8'jFE&rpK\)F7kPK3,)3p6Df?'><dOPXf!*$4&21_3WfI#IGKp\\I`6-Z*Ws[Ua/Hg"/aR.-qc0TL<$C9c3E>KA_?S4%[cY:E*-jdX=>JO^E'gn&>'7Vg(4D10*mnV>1paB*$UraNdk/:74#I+N6"&)WCoVYmbMp0Qre>XS@P8O']nIPoT,=K.;:;][JgK/:%kJ(f7k8rilJ',D#ra>nC1Le80n(KupUo2j/%k/Te7R=CYN0$c;@`aY<;Od@IAj0\XUY5G#5S$Z3Kc/Lf-oi^/&$EP@I3V8(2Y^rM%&8:Ma^;8@)@>G2ZSBbs`ki(I"OcP8td!RFU-i`DoW5n/XLjaWo,`g`>\u1%HQQN\G`KnGJZLZj7R"s[2CH^35O$11)j'm0>0`,Xm%i$)lp7HlS[Wn_Van@MNOqbK<*<%cj&+&i\Th%AuuhB&.(kj*)el>(^h%Toh..^0>[f@:asp/*$p(g#$W2lb0CIMp`+,G$VoMRlG]%(s9JUER?^Ck`=&/F^qJ48_(>Q'0g[$@nNHW4uV#6O7_'hj`$.9Prk#`?ZDlfYT7,e`'A"kR?)n1O^h]ZVFdnS$ip]<0+QWUQ4tKQ%3C-al&0?`@L^O@gF2F,<j%sT+")$:&Sim40e%*MGKuY3@Mi8TuJhLr/+oL[&:pM9=5O)s$3e"OsLt)C2#S,#]+fQC7#17OAUq*(3%XN)Ns6`KM!(l_1rc^/eo&)+bEWa0s^LUJCXL@)BZUdh:(3kHu6R%G?`?[)Zpp&E1+Q-b;72EXfuR;$0o@ss<=4tsL@0CUFWlLiM4%')[XWeKsOfA4J1Mf&N)`,O564S,XeW,&FQV#X$Rl+rhu(CEn)Da6%^5Yo[F*c4fVMkLa:;2t>s?&2]*.."bnRM,[*5Flu_/eRCR0%!^)5TNf>s8dH<d5a2B#p9TaZidD:Q4XKQX#\+&VH/^?aOEZ<>X\>4pF!_L6@B^F_g,:N7sB#0&&=f?IOO9\119cU(q_8.hgI.;J4%pkWp[.o-<[Lus+94k'2onMKVQ%p)$hdD^OKeAVl[\_oSmj`gdM(8_4OTk-f"fa"O3@<BJGS7OD.U5sX/DB>F[WC&bd(F*QY\efYT%kmNMM(MYAXe?@BYHT$T^G#0))Lp;uU9;Q%VM@6h2f>[2AGMQ'M[KhfZcVo#"Xr@e-YRbUCe73ep9QCSp0VNlB$2ZRAVoVJ]\Q_$8%_KQiVE5j^BV"cuc_1L=V=m><"n:GN?JC4X>4@i6W_@lpDhkhVZ>Dq`a4@/#CF[`mN!:Bo"I<AeM(kX)r?\,fE:[7frX3\*0!&_hi%\G^H]h$FbPmh><7"m=g7BmB@(F?*HR.$l#ZkEuPGL8.H<(HYKkcU@RWBX"lE$pHZ/+GeY\>osDEHtK2l2^Bn\]AhR6f:IN@nS'Kd%c^fk[s,(n:!6?+r1dhAmUn`!n`%m4C)pu4:Ff@#ud%)Zs]NQo>&`a[lih^SgW<`:3H[gND<%!&sR#IeJ3McBg_U(D'cVonbqa%fI%q&VmGNgRSq*!f]^eN<aQJQhMe2aS;PX-G`n[PDcG/B'acVqnDn>EA:iqe*8pKQM#2@NE,L)ZZB6cJ:E_<H/Ph\+/L$@rd)%7qQNg%\EM`#(qfMN^D$3"+P$6a!SCi4cR+>of[`^`Md&q?1sRldj*T'CVq,8.cfj!jR=M#qOELjLb=-!h1U/.X]fM\fj+:@KQ(hp3:bVME%K/i^E3UH]J)`eVt.PTD/63A<]Z#''5-<=o0,^&c$Q91!9*[49lbBh]jF4k]N@.F1258.YH=2u;:Nc!F.`M^-@/&tTj90nZd)ktbD%[*;M[iHBE=jK$8U+1'4=neI!':YKeB4MSNO<pS%SMHuuQH2d8a/'#=Q7H9C1KN$b.V;L_TL'>`t`aKkk*$hf`EWeK`%M#6S-D23'%g6fQHO?j+YBC'XM_9Rh2Y;f"pK'(g(B,[@#r_b0>:3uD&'QK`j4tP^#703?\Rt>LkDk:S[`,TCsTMOtc#R*]Tau?cW5`*KKfK^k<%c=!?h\ui<sMSLU[2Ch5RmL`5#DnX*?jHl4dEuPiK$82#=(-C>L$+l?$%Ra5R"Ri"s%sl'p>u_SoRIErka1RFO&`$HI_2ad*1T^4!%qis()kf,S&6c$nHA97Rn2#jrfnW/^qIkE)Vp4X!J0$22??.dqmkWc,-/2.@rL2::9i6fo;jou1"ld=M'j6)NW1X-@FFsdciNQB5I%L''/XZ.tP#H4*DE*NEps_[`.M6;R/fD:i@14u36Mcf"NqZ/hJs?`\Dk_a]rWDpMN84H+mq]Ul[6C`<'BUE6bR&$>Lu_]6[TET,*E%8)$fW=dG7a4SuOHm-F02ibXDi:Fcr79$*r]iHd8bT^rZK#@2b;(cCiOkJ=;j8?Z\m&Dj@o!@E^n2XLaseJO)ikpG(c@#52NA?9qD%h-jNT,ljo'<a3UY)[ib0B.T13b;L,<1Es%NiZ1DnbWCT)a,d@qeB`'';W9A\Nq)-l6U$geG)h/F:!$6tGArLm6WVMh;Jqb_/s!U0%aiDhRNNtO$UpgB`G;'fCq)k$&1TU]Ad0tpk]I&03T&,3c:+FKKjD>_qm>6fMd>Rr\V*p&pqbIVYL>UfuEl#:LN@]>F`+L7s'M>U>%`dI`Z`]U]];[rCm;=).`*4&d0=l>d15gF2%R/T@-cTK67#5GltoLS@0X3&D6IBX*V_-nEY?dNa$H_`'(;IZHE7(q^;VPf]-IErJW%f*IY@^?1I3_Y>DHeM6g>K%Ns?Y-e`4[,r:8R)6ftGc#X54<dC:#'9fs`iBVep"TXtO2#KL.+fho77cr92W:^[6@]ajFU4LW_E838%+>4X6NI/ramc,iCN4t%1kFF=;#J5ru5QolWYgFB^\m0i7R\,JR*]FoO=0c&##AmGI\K*t!NpEBLZgi"t\AV1_RZ=6n*U')NHl$AA%^GsX&AiM.940XacVL#6cSpM5IWJJsLN$s]=Mb%=DB\HDQNZG`X)NjH#ai.4@=cGT#Fur_$BeU'cf$XB<6,*b9R,G6S1mTuPQ/lOg%=(B:6=u)niS.F$gaf4/a(V'miTtVVO[1DsfUW(\dg1aq4gtQW,Z_Bk;!\G00Rd.FRpe]%<9Mlu[4oHmXQ[X.i8@R#$gdd8bB5ML^%jDHH%a)X>s<t;fi3j#CRYH3)>H`t8Rdua59'KbU-!'E54VL^$6M*2g_oJE'C/W&fD&5nA_FtH#07+PQ'BOK%m4B?9)d4#RCa25K0%pmFR8n3^,;eIWgJ/0,\&a,kT.`6NL8b%c+,N#do2eR'>aBpS+3nu<J-.u8b-n[;@QB,>_n\"d?OSp\WJ?pH3[\jWT/]X!m%=7k;@%V=m@M!4PRP1$`$qM1^mqVu_SRp==lf7%@&i[UO_q8(Kj<i2]8<@LMTk4$E?5?EhtaBL'Lb'jW<m_W(P:Q]2Es-$SA439Q9/PBms:%mY9f(aS"b#M)64k?UI;;'@Ao2R96Gj[[P/"%q#WO(WelI-Nn9:fK]i=kW(IRJQ[#)LIc_#cgL1oA3DU!X"Nhd+I:T$a:?sM1>Z'V%,\"(roQeoJ>HA)";a31l;[r;Oa1RtV0f[<[1"PBoZ*t7to`nt:^06H$+Dg//@"OY6Jmgq'EEL+El&][LX78.NC$aMQI1660WXY@r%O5AC:LQ&Cp9g7+XffqR778G!uaY%M^L-/g]r6<_;3(iptXqa0Z<m2/N+In47'dD**87OgU;"&t7bCGAP_ltu=GII%/(S6B$oeq!/%&E%[KLUKH#7`ARKAj393[5(5+m-MHr]Isb6/E(&]I)n=La`'@:GBs75*c*DRJ)aO!oK^I+$9*$9)>n@1`fR)qfD?Dl?L;#gZ^8`e%ES>E.lFVB*n^kifL7JJ-LIQTeiSB-`>NI_*&?d&#KOqZKHq.D\U0A7RiA8B[.nkR!b<Q4&XG%-jA3JX#@aMlB^'8,P`FuhU\iL\]%02[^)rgg2nfTMX"#oG(IJfo7LaVP`6\<.]iN7WZ(Zcs2lhXH0^7btV['<[V,R6uKD3=7f3+)pk-7XF>c]dr)Y%"i4=QrZTejD@[l%@-G$hhLJ>DT.FYC02QnNQBl%j.!Sc`S7'Qp7n&3$&Jc\:6[,)rD0,h'8j.S3K76[j!q<9FE5>f_ooJ;"OS)ERpZc.u<2nnkFo!#=%isV0<],:dUa&h,=,&f=4l2.?'VNDicX@_8,)ckI)Ogk1]q4N6u4gIRo#`:gLD*:l6fN!rRW-4-ZfkH4^;[+\bP/okM>6*ekH8f8$%NGdPh-R4SC`:/Of/n&XV\T^GNi?U/dR&qVa^#=1<l<)\*ULRlQM,0%Th]A],ElVWlotGF;H2q=G!ep/f_,bj"hdH(DKrYJ\6egu"%N@_&UiA,Z6\70KD[hg$!-mSm-k/7_8_97ATM?bXuE"%&?E?)B4EJ8'KB\V?*6'"i\RqrP0!Q%Ym,(\DoqhhSbO+o,d#$g)<(l;ck%BX'6Kk]eI=CCb?@h??2a[Rb'*Y%aJA"J6:j8MW5JKV(:L,HgHNGq9JAeB'`6*pH>:i2E<HSKDu`b]pJlU3e[Wp4E/T*u5*KCU-'2%k<9A$5so%RB\[I'@unk8.Qb3El@71C$cNBLL\A/-cj\3bhXF0nI)!JnUMH"Q*$5qDT)g"'Rl*D3j1TB%V]N`8W,;0N.Qdqo1=].2%hnqmea^<-drSSYTYAI!1Q"\n&Ya=d/'R.d;m:VBc"i5KW2W=2o8;7uI*>Cn`*/m&bp?nIXB(9__T%O@Dpr584Y"]Z7N4dSjH4K_G%njGO/N$hY;NOc7fBa<[+l[A3sJc%$ZXn,6((mMYFn4U^>5hF/-'2'RcctuX%"B_FGpp5e<b\Kqq>UTAkV(m21SGN[T>9\s?.<1$R%aLmRnWY;(Elo!VKZ"[^$a+,1Wb.*6f1#bLclU(^!=C(/#5BCUq/>+t!`OY<N?]Om^.-Q$iJDgFR2U=OB2]V)PrXVl?HQ&@jZjsrc%ICG)3J&"/c(?!i5`5tmmFN7\Qc5dQG;qiIfmXe^VYk!Z0LSq/ihRkTc$VWu>G1jdm(OJqrn_jlR/]dPdBK5]let#8Z$rVaOctcmZ%)f9.Em5OrBS5P%mPb#K<KMm2"Hta;9s%%4eqrW1(;&j\[N7-A+M(#;0?NDUn,V-Mhj&4b9K^ibD(5.(X(6;)O>HV2J-QIn>khCGQ%_Z:Q'JEp-^I4U9J^9[^taFIRNRS9=^Y`ODHON6S9Nb#r35agS9kDd5tUIeI*)PZ-Q0H<327)<?kn"2eNc+cBm=Zfi0:^Md#=+i?@%c@aNHE'DC2O:6he`M&D\kqRM+/;`sb`X?Fm2hXh)[%%:;WUX:^-N!R3[_C$')u#WE7HF%!Yt1#n1l+jZlfq$+MTuo?h3q>Zh45i"%:UO?oTW8AT/"L!-B#bde)EaE*bJH-G_K@H&'4?0'X_/R9!3-mg,U/j9ph+A:nO!NJ,BqhpB[YYnQ:AbBb(r\O'=DC7G'#rE`?#uj%(SVj[.?U/W9"GL_(Q%E?Mq:h7c6)$Z<sQOq[)(Q<^TJ0I_RJt@c(pN<N-#>cA<1[*dESNode9s2gXHcqkIC-uC<L7,SNJa[;a7t+%?b>gs0I,@BS5TY(Cl=(aElrd*86?J^6LholP3Wq7A$jg6]"QE5`d!=:FZD))U4MMn4:L;.HoZ5B+ZVVoj=1(CQsY-AMVnf!U;%ZL%L6&#VX][E&#70!8fc[\S]^ISqrn+UO^o?S8,;'*ZL5uLRK+H6">bc[Jki1fb#$-eSOpZp)J>'5&\]UtJTL5WPTTg'Y`H==e[W\$!%2iZMDU\cjZenkLD6ZEao2m%Vt(V4d6p.d^<TV4fF%9=UK*1J-[a@oN)[e4T&%J1YgRCp3k%J9U?o;T9\c^C3u'-lHb35f<R4o&4K%%VrRDR"SJr@]Ae2af\m]&O_Q[_3#o*oWBL]J"-,f?5Ou"QbRlg#g;Us[tJ0K;:7I4l1RKPXuJO2hX<.k.)aQJD]54<$6H)lKC;(S%GV/0\%]B'Wf&A1jC$^R14qaL/pP]_&?>-hEcreUOdKbt^U+>5kc)udk)TIao23/:ZBGgtK6*A=b&h/M!EC?@@3e3[uU@)A.LM>j>%o6kDQ?RV_^f$L\7>.3d5Nn?<,]c<NM%ipc]TQf02D1*st@n]-1?*B^1+n+\Gf;kY"L1ahPU6rLM:7%=/Z+Z`UUgJCL'HqMnOL81K%^m/mHC#V;So[G,#_fkNOEmi^;H>eL.^c9NYRb.t`@'nC8D\\A"@TqXJ6)e/AUc]JO+eI-&d-t"p^;JqE<g;uWaZVdM<,JPBplpn`%kCSp1ni37t:P9>Y8iO\kq!K4Bla]K2g]a%U@d'6:50LCH18p_aRAI/mLcS&L0A#_rU-;XAN[Qmn2Kff3H8u[t;A&(mD6_$#!L-F1%F/V1ee>TR_C]fb"G'7XO4&Y6Ac*juWU6rp3]qPA[)rJC\(;uK3Z?@)<i1<rIX:<,3ViU6<g`q6.amRmU>]#*ZnqI4]_MTkq[^:Nc%(L1Z@QmFiCM7FO/=]9kgAiBXP1;bi@ArcW;Af$2I'odT\c#fg7pk#\7#Fu?eG9)XHFYOnEI!$I%]-IZ"lGLScS8];e3m,!?^[XJp%S&D.B3cmgXnXMQuje1Go6Xr:083^QXWrltPW^TuF*ug$<<O"3<K97c2l-ho<.ORJ1fe/#3=$=O:>W(ke^dp9W[E6!62XT$CGk&U8%orKOqdE)ZhdFZJ"cJuC_O_M@-&Bd&/D?uD55Pmf>djRA-FGZX'.O5pU!RTMCX+X&Q@JE2akKP&qBWgM>kPul>pZUcaT5j=A=.e7Z%V/ol2XCE5d#AqFIYB#IO`2>Ol?a1"Z*bW'J'GI-F$CH2&>6V(6OSr!,iCJ3t$399t5FF^1MtBh<5itj4]"rO:E>qOpObXa/n=%,^%=!R`_/.ouN8*Z/?/)h)#?)-JDC@Jb26Yej887+0C."]NHlt^35LZRQ0Ep5*57dSE.>'*"'p7[[iQ\=1<b^-&i(m+pjaAtaE<;73p%il$(*Wh0Po8#%,cc/Lj3O=?-EMru7=_K+i]4Ej:a6H[=Cp'T)!9,nfslL>o8fOi\$F`F?)+HMQD[s!?>+O,eX`Rjq4?I(da(Bh/1%3og_%i[^`F1AH>h3a.:[e5Q=?1FUJdL\o:Anq4Oqm)DOWe/K6=?cXdk!k-2W""^>Po%\j=DY'W;HPOpZd:E^7#K/'*KLWo33Z'/)%c?9b_/`q;5Jr-]7Lk>fO/?9c20j.koYC%`rA'du.q[s.6as>k([mV>kHB-lAfi&@T"bD2HXF3LL)t^YjrF2u]2!ma`Y$K6l&02nf%g+;dd:\@6l&2lhE1'XM.K3O,s&ISU;b9^$@!uRQ/UQ7l;YM&"_5N=THB0`("K[e(N8I47!l0qa'=e*BHQg1+Kkn^/,PJ)n;!P3[-%R#b#PXpksW)2pHL(NK16[b4T?qMnt@8tQl-E5!M/@TVS3qmjnsSXqQ(Vi(Ns%?Ftb]HYo(?L#@]XD%^TgQ2sAb2@!^Ok@.l@J-lR%?D8\BS.PUPi>EA.KWP.S\4L[1&7_nHO_;MW_gQ)_"2rJ`%'X]_in5BbMjM9_Jb>$)`o-1Ab<td3a(BXpE?7Umh(b2S=S(k%bf&&N%^d`C"Rn^.70pu=)'Q\FZJK!-M#Y_HLESA"fkRo3XQD'F<U2t,49oiJigNZ(:V8WIo,AIm?/IOn^kW&R!i1r(-qiK>0,tQ+TW-P?8%L7_//eR6DOYaTJ1_!lU]SKnOR<Au*pX`2S"CT"'Ofpa5.Fp+E(E$[T/?%tb*D&,W56Su(S<k%<N-qL^X`ZttnfVrDs]lj17Rf]mt%9_m4$-&bZ'0bnSdI>r'.d.GuCh%e0>@0#<a.->p7!@N:&Zc'!H9.II7g).S%Bqr`>fH$'UnRgV[3m^r]%6g/F;pl5hD',50R7?h=%f>dUj;b,^HM/^2V9afZ_Ght7oUGbFiXR_jR+Rp?$!D#JGW\_F7\or7%]+Fp])[A58X/i+^A'qSD&<.e?&`"[@?B(-e]5j&T!L:MA%\X'a2.N$CXXuZj\V@!4D21@r>gQ,'+_m!\c"^o3bB+oUq+55kV7kl5I1C>"Q/<%]FTFd4se(#IZ^?TSX4,h7Yq?-uDiO[GVU*4Pt%[Q3ZpCB&=%>)]C.fJ0IIQ8q.R&;n(Ei'h<$%bZJ=S+1nHb3ctOr6l6/+[/'t*5V>V-3Q`bA,)&)e9O@YB)ol@Vkk2'NVn%rBg8uN%1C`C"M<[,nN6Z8rga#fQ6uI^p6%FTLh%8EonBb5Whupu6,#2=^1%sroV5&iu96kG[*.LI)A."15-#9nMT5[3;>7]S+]+3=$ZLtK_%7=SPX.&7A'SIFSg1+G\f@i^BNE.0t^3Ye8&F/q)=1lQ_WksP&)ogjfLiR!sJAth4%Ahi*23,ces5s'2/[iJ<X4XsDBX5#E[]tM?r%oq=!8c6!J6EG3/D?iA(?3LNiW##Z/J&H:a]aTD?NJ+=#=GhpiFCPP+l(7%j;d6Dn:Th,)\*1B>$=)PUq.#?#P)D2F^Ij:*(V[op$%9]J+X1WRWkO-g^Hg(fXeN\+_Z-"P0TkfK46"RIj"!`Ul;pMhKI^m"li?kfmb!E7ZT:7*7E$4nEV"G4`(\dNP1>pOGfJj^aF=mjZ0%Mu5\(\3Qg%_;4eIXRsM>HE_$nGsmBYA`j4N1CF\aiI,C2Iu0asg&)&DN`O/B.,Q3[3EcWPa/-o!&5*JN=fWkCI/0<*_VqkBK+Y$@%ar_P.Y9r!3ZhL-2OTAo`X0BV9;"08Y+4t`6MT,0'PUUh(C3t'?rnV'U/-]*mZ]e7CUkWf.m"GNt5\rk&D6"9`HE6eF[@V*6,J\eM%fVo&8!V\kG5jObRX,:4!+YF1B*.<;f;':O`G/IG#%f(g@SFap^_c,S?R=]%1f]3CE_f]$[A&K;il\UZajf-&2<):sMYqgq82c]bN%=<^jsVN6ZX]uYE*DFu!r"Weftf:aEi,p)DHL@MORT)'&EA4XkEGpm6#!6pO2kV3XaS<=uV(e?;nQJCelCXuuGbOE49IZht3etUrJ%*d^Vba*K7q&S#YNPFnE/m!\?J&^;OR(_[,bE)sP+8dQ^CU>Be>Q&NafYc^>W`o/$lMBoII)H(P^khpd=>#.$"j#GaQ)'`t.qKcX8%j5J)O36Q%lIW!mh=$_%n:7(;i;d>B3c,k.]__qtqm)SuZ,8l2q("iE;MMlfGCF*L[@dccVg2WY#I>tbXiJcH3%(gZXNNsh3NMuTK%TAB;99bsd#&Lk0uBC%$,AEp^9VL33^-QhMHC`58*7W[$JLk(+CNP+626A%OPYL3(0Z"/%k`N<bt?^n^C3B5@+,pm-GTp,,bmb,^:%dHGVtO+ugY#Nlrp5p1\<^R%FJaW2=4E*TkU&tQ#s*7mkNWrr2CN_pe/;s>cmcP`NOV@8/iq9WBm2:,EeSC&2_EDFuNg?kKDFEdF2%#?O.^qsP'-*_SCdP#RL59hqg)=\I*+[E8Zl$ns)l5B(ZN\p_Y"G-pDWmKd:W'Jim_IEF&dlae;#5EsrIjf3Wno7=BJ-cF-e[!39>%ZZCfo\JQ4N>\os9L,57Kk'HT\^-lorH;YM2h&,X,hlLQeIR.+ip3Z-YCmqa\IRf\DV`]ZB8Jr#?Bp`mE(B)\u5&=GEe1Ao,Q!=jm%<^dWd#!NOCeXhH-/^n9IGb;gG3^U>>Q3a4q(d*qhX0]pci>ZL9EAeYi73OcPV6FJ)p(,F@>XQ1ZJIhZ_p*Y%hL-Fr7N5"01+D*_>%ppAl//ci]TC)g'jOF#VMJo4gRn4mPM?'kX.3JI8;4`Hnp=4HB(*qZL?,gt5lk@3&;n.8G,V53RXlT#i-`9QIU^L^O(CJj.7"qj8L%<r$s,$LiIB4ngWpJ:>nq!4;bVgk(CmSjOX[7'H/9m@1C6PIIY?4(h*cVP*!UGl_to,2<!p@5s'dbch0ZT7/f#!+H-\4`kIs(npUj%(lU*c<#D1rEr<?s3?8khl=C<+ibdYgi&_siG8pjg9EmYI^c<jD%rLu=@m"jIaHU=MEl=?sN!_:$d%k]B7)*13h%g/fW$U*Tb^/X@%]kP\>:(OtAZ)]fP;SCd5;*O&@^2FF'"h%TF-/TG\iafEukij\$0K='e*(R,q-ncn36$d"0:U*N2Y_SfNP1o]LFYKeH4Zot)IqYhE%*o^r>aD!b$r!Jc5ll-cB$[JF/dj\a>_m-7a9j+\$'$=C:;nY/c*dkffXEH"X$Lah7BqV`Wa&)Tp@ab?9D<WU;?(j?J*IPeU7Zf7i%A,pY<U0OuQ$9P8iMUo?fDGB:l%fWKDg1XJh_K(9l?"1&`B]b)YHE&,08"*00^,*e%DClBoVf972Za)#+B*9F>R7J)i(L.:F][ADR%_el5N6mjUEXTI]?bjLhVIO6hknFSLECOD]XC*s,&NoiY:VNVZ*aG6KTbRtl!3dp^?%-#M6^#fe%f6MnuPbf6&n9P:HpZHs'4nfM+%RBndaDD)D-JM!)U0Ed,M%LdoK^sGD3Z=M4EE2rZP^sn;QUEKhoWWIrs*$TpAZLeWH`)1AOhEE;G)U8=">r%XTIE+'XAs7Q^RD[H!%E=31dV=X+Z-H-me,e\]GXtV$-cma<[r,tcuhRD$6%Ip;P;)I3>UNI8,08r.)!8bC:aoOM1e*NoA/WNY=CO&A,Q'ETcfXdTopAB,;%4V;udrA$H,qR+s@-&sf+di`$Rr$K@R7S./]&+_2u,aKR]Q]>pO1S/!4Ja^?fbJ")p)CK,AYs]Q=#t$34?#)Ur-uZA'Z*HN$7guld%Z7.-Hb%DW&6;KPpJO%6lo9SUO3PCJ(+\q^-e*GYLDG%)RPBU3%(bC1!;NA+qkbGa2QK+*`Y/*:8T?$Rg0ZPlFB/L8WgK[/04Z>B5%=E*.XS.e:JfITA(rII3W_lgKt&C_I*pJ5eR>An$$O:UaN9EVpNGlugV\`FTs2X/59Z]DeIk`peLf'n0$1/IJ90`?u6%isJk'g9"R%:W:7r-a)1dS/0IG7jHj`Mp0rp+*`o$%&;>/Fn]aun%C6j<4HMM<U-:^5sAhsJJu5\Q_2"$#g#iJX9*K6!MP="P7E8lIVc0b*oZjS%g8X-p4a^T]e9>M+7"@UWL??&b"!B/I>p@=)jn$S4Dhq#6O#4Dt[`2/)h0E=N`_'I&9:0l/XEYQBJ2uh66GNR<Lm<ZW:st7+@d!':%[$7dnWcNUU#KRcq-k/'c7I(EW#.'Rh!:?G'(9&pOT(7ie-6J]>R0NABAEOT7`ic`>2TTOLo8cB`p_fkq4n#P]bKSRq+m^]+\!LP@%8+'A<_fo`qh\gbm8i/E[Gp'@7/*(HO'Wc;Z$\LF_@@psBI7E1'TAX=<\HY3m=g0Yl.k3hoig9'g>qL_;="ghj!cu9UHr(Cd=QFo%%4S:[oj$SJ$%gUe'6>Xsse+%]^;WY&hVYC$1O4h-<]>oR33hslu:=t?*P;u92kLgki9fmX+1=AF6dSggE30#U$lgPF'U;SZ0F8WuK%lJ]Pt$b,>p?a,YN$Tsu<3nW=O5Dq%OZtF?WT;gIo(F/+Ik_A[bk%5^(k*a6Y@Al2>liK2OkC&h^aFj:nj\3R.BhOLi((>k\bt9^(%4Rn0PTVH/UD^W4B\TC.ZYS]/:]Drk:!EZ^7-=&TM7)*aaoIb]]%O[D);%!k/[kHo/$)\rE!@N_17!7mUl?b;9rgDp"'*1<][*;O1%?iV1i7NW54UTpPR4PDQ`_;ZJ6Vq=RF'ZBLjjRp$cZ^)S9+M1h$_TpKM$DBlN?X@cccIc8J;)fE\=J9&b9o00Wjb`'G(hQkI>)]A:%kWG:C-u)R-;6YYs$Xs$Nfd^#Da[U7"+b(I/Yq4Shd.)5EZ*g0;<+@86(t(BL\lSLs/WB&'SI'i9I-p4aeQol!X&jH:]e$b#)S<S'%KegNR)nT9[_`01.TMZu#fXFu8dgE$0R-fYlIF%_#08YOMHC>)6X'u<B9)X"JD_eWc3dntC<o+r=_pV30:Gi7GbXT_)GaE<'+K!2V%HLaqI3&9&SVpJL)!Ol'cKC4G4P<0=QW#isoh59AI;/mV_g)FoRR=@'1^:Z..q`$da\60j70tE:4^n5sgXlqp=a'\@f4SR^#e<<6u%k@G6nBBL&T`qus(1^8/_=`gua&K>=WBLIW@:4&9#La@p-7F(ctCH^8tB9"<^`hH<O2H.Sl<6FRklB>AFRW1P1en[k>?=[SLX@G4g%;8]OeHb+'Lm>)sF2L-,V\2C:gE\)*e7ZEGJdQ7k27roO(G,\/CDmrBBPRPS-;S>$fB&.8L3\*"S,,S_BY;L>ETgTh`n([-<LH2*W%.-hYumOR\W4d13F)L,Mm/KmkIc9E(u[*+WmOGC0=EBJE;1bp`A7>g3gQrtib=C&Q4ddLbPgdkq!Gh09HjiQ.6%o#&q:;oqZEEo]i%'#j`/,;Q(>FE6LtcOoPE3q,:g(8>>>*(V^A5;^qiNUj;k/kQEbCM@oKLBqp5F`mAfSW5G&6VeS^98Qo$XN'dP3%l+V?oc8_!hZ#$%:LS@uSbg=S0]k<MfLO,NOa'ZElZ+V<`4I!=KDuP@I<T9HQRK+Ee>&5qoW7H$o/'u@P5VYdVa3bfW^@`CqmLhA;8-3H:WAOr8e^E_%Y(0N:[b]bZM"c)>A(XSb?^C&JL4teF+Mr$Fqr\j8"V11R%%2e^ob1E<W$gI?G[Z;<`?HI#>`[\QE#Ace0mQeg$u:0S8iDD#ML+Gp%^S1el?I&!Z&#L[`gL0KRp<9,#Po9(>F$8,7hb;jr[,/-q-0[o@?A1mk3)\k3=EE9>XsK%&i-G`S]ZAr_!46*T""`eTd^N(_HPk5F%3`$`_Jo,^E@i#jj(jGYQP3XfI^c:VUK[IV4X4oFUfYs^$[;a5B*[F)1Iq!tbK`gu5LUMO"ENZZ'(_m9m%`j'G8M=0"!]?%RPj0/#%35$_5[]Y)3d[,:4N!=N^h:6\.3_%;M'"h4HNRk8SqmD4bgN5cqITB^O8;OM(QV&b_ipa#PPM2l)>F!,jYVUNoVlb'2THe<5DXKLB%;#mP:-gJC.L3VTZcS`ok!mX4^8e323I4\B1Cfn)<Xh#`?!p"PZf<*WMV*o*8eRNMR$4EH<>Pd$8*l2_2'IYZ!DCHOH@li8om-LF]%0q3M.PAb!=;BY,LPQr^3FM-23`QOmT^gcJP3\E+=43$G@V,l6X`_cW70ZhA$HL='?S(XAZ!tP;;?_ESX[*K)R]6r1dB-T)Jbn*HR%+%nT`AhAbNjf/j/lS-RLqsb)U"U:19(aP,.^&:p/SmC(,S>RdPi,/1Go7;i[4CA[9k9+ifXm*-_76OE+@W*puDb=Dcip9b:Pp0R&%PTVG;(46*l5IAs>%IqmR2j$]8)$XG6KK&U6gTSeKI4a0-i++88i>?)VEF<8-@rL82E_XD<#j=S2G@dB[&/6FrQM!rqkQfF(HR;^J%hF9-[0YT+;>0<Y+2O$X-f!FF(FCg.9C3!#Y"apI=O.KA`8<D.6U3eA@B(Tl:C%AO.SpQE7n70q`E(342YBXWZ1Lta3QtT6N&[90@%I;rk`,q%jDX(rm</X76lCNhUMfhrP+$RMiIAK@1OO>gee14F%s`-Mjq>`T?cKa[,i!6._fH@eM?0<VgFZU@;j;2m;s[rc,_Ye7cP%G`ca!:Y]>X]]<kB+"3M.IV>XW)W,KW8.G<Qj#_E"0(g@bII-,[@o=p"rHoZeCn`K&Gf6b?T'h6I:^._-?X?>`%^"]nZn@E`L".&g%\hj1!]D=X,:Le"ck\3NU$n"`%:4>?(J6`d8BSS]-(XM^BZPRaAXAX#cXg5sJg),VYkGRA&_2%0!mP,cpcb-qMSfGPMaAh;E&1BCl%#!q&0.q[8*P\eVcXD3Q6CR='Nf-,O[%[NmR=X\"^#$b<ukugi;);'a@m?\n_cg\&;jrTBS4je*kSV^LRmY_-k[+I?_j"G:rpMi73%r/"rWpd?ffq+dD'7=8dIV]+Xd(i(n0gr$Y.Rk<`ABXHEE^TOm=17['eJS/8o@@#MX4[q;0#2+tJB$o*%@o>J7S[9e*A=$_>YfJmk%j78KR'NUiMLCYFD';MJ585b?8q!q>A=gH4N\N=AAr+t%,G$6D(VXq--e"/hNi*i,K%6cW#;\/HgQXX;&j!(F(Qkjo!cutelB[14G%#E/_;^9gg;"eD73X99@0:_8sR0LO@%S4[&-O*mimJO;nq,IA$i(\+Z1h(r_=:=_3H:rKA'ki0Lr2R=Ya^i-O.0Vn\7Dla?dkJ9uU%rBdTA:8Y:mVrOEnraS;Ydia^QOCECm&U;Bd)F8l7d_h@tg=.R$G6Qu>1"9`!FNL@]BWCerAAQ+/0L!k8ZVd&c"-fnPCZYeY,<KEV%Mh^)Xqc^o1A?&;rooL&JU!"856'[qe7@V.VUZ+`BjJEL6&\4lZN;S&!@=I]VG!X(GK75CGjZg3+;ic"<=rMJiiP=sK91LD.?:R;B%>Y^08(Q7Te^fEJQGeGeGL9&*]geNU2`s>o:(h[YjLY[h#]<*]*^d3qIH4e(AN5UUZ2kp8Ui+n(s#1Al^!:"'#b+4=q39^`N"?s+u%LrKZ1ULt#PT[A!hSVdc/TPbj?kEuPKaI&<6OFaYW6&W:nM)]7:]_@=)M9O,4<*0pC;f5"QM89;(N!!h`4G0'XFt-+1PRL"(6Rp.\%gY^A:MbtbH[:G:eYa[.3QRU(t_U.B"E5O6Z)5nX"E5.Bkpit2@"gacPOc,_%;:*u;YdT$pTVijRa(IQ_@K^d4bp1`_V1=;&nUu+*%>r^r+><_%S*dX^[HI^/?<=n)Sd>^;Tihk+^4?b9-_,12(+,pXV!+[gK#+rmPJ-T^a"2UlQiO3TnFU'c@EJe`@nS1#"Lt?PS0#k_5%Tb2XP#D55^N&`[41JC:>12Do(M.o12bVK^f_o$Q6g[#B_\hfa]FAY,5[.hHh(<)nH502l_1)dYho][?<K86B-@8kgVM#9(lI)eS*%_/Q9\B\@H8>hp'jj_0&g.D5PBZ\Qqq^N)+Q2@D-j*+pS!q[Nk)+3fP\QqgqumBF5f&=9/e!.NH/D=cXAf&Ap36Mn8?Q^s-@87U;A%/d8&j@0fXf_S*W2`?O<ETF7/6[Zh?AG.j8uh[<Dq#Z$09)Nc_>T*V>s>donENZbX&OusK%m3Z,sq<#+?]FHLTSONb#gL:RkAXLZ(%VU-R5O;1"5)%O9-h(_]=&CCY-Rppoq2t<T<SnX!j<m![2.sDKUchf?hg#C6C&]ReT,`13nNIT$FRjH*([kI#8rudE&4JjW]A"XcP%.IGNt_i[W$D<o\R-_SDL21'Y_FHR(DP^45eq[k*1nEr__jItWM+N9$qAA!b+Xa!)lo"tl'@GA/t30bot+hTGPr>usDW?9jH,&q_+%dmiGiM7=DWN+(#K'0Md=RqE'u*"_S"-0lb!,3lFuZS0bbIW:IbZd@!5/rS[*]>Sm>-l#%TLj@#G132Y??*kL>m8S]4q!s2HV39(.%S/H^B5?mTk.j8c&X,P>LHqp:'<d_H\g<^ni6ZYEB5[P8W,5b(1TtYCSRHJsg4`b(Nb/PJs^U2#__RcnI!OXH!=ltR`']6N332&b1%SdnK\#CUY`4:[+X]#htu!u&H"5p5+`g_PU;=#T%hfpoDDTH.0!g*-L%KDY^K?.d]PR5:'@H'eEfI:GG936qlP-T@("_?-f0a%Gqp%>O\X(C<eoGo^-rQ(cDDh&l%U.V?q$^G1Y/R?eVk]ZZJW=4"m"gGIj42#P#+Gkf\T*";%1&:)!f?-PW/'Ok=7Pd`S2^GM9&Jo9M.k%b,S-P]=:kV&m:X0>^YF0cS`d`&AV/j0D4p1bhh(4IQgMMUI"m<;<]&BfN3/@p+rVt1#Vm\8,Bq[]\0S3T*cNX$LC$cQ.:tW8H$2C%\YNml`OW#HC'RXn`tprrJFC?"gq2&1RZ1'Ora:04AamgH@c0XZjG(Kg>_`3(f20dV^,%u#fJu(6=!t]L0P%@L0"gXcm@5oug1K)i%$hfNnUhVm-<//L[LlOhgY;/0;^i2L8:?Q8]Z/RJfBH'ffEJAaVb].lU7b/9F@3YC_VK1>6&!e0H]qo7<QE[=NIJeEt%$HIPNos7G%g(GJf@'&m&`HEg+T&)EV;iU4-ajEjQ=S^)V9u_Wjk$U\h%kEZ"?lTM,iE0m;XiK$>2Ld-YCHR3ZN>7RjGI]$Nh0^gK30-1s4;j+<%Q&ffoU$.C2E\:*nTd33l\Q52JQTu/DVqSV8P$K6C/n?eL:HQH`7"`o7rntp`5-Zj/Mpbo*;c_ujNV1e2I)-E9_YoN$CB@^=9\%XA%9fo$\%,^uk^oKk\B?Ar'5s:`I[`,kRVh,bgFaFhPanf/us&_[[7(lUt+M5qO\s(L"2Q;nE:MM+DN(NC.o^ebE3I.>?WKRKgSkndh%Oucb@X0i`W8+K<kg4]hr2JL'#pT_9#C7m3c_(dnZ&j$Dc5l5B@Wl)hLL5"*<8OT`3-G)n\`PGq>N$ulc78F1@'9"smT/[t)$UatM%4IC@m*fAUZ1Na>'lG7@4lK!CWcI$*&FD!MaIDD+E8sI4+ob@D%+37oERu>ojbiaf#7aIg0Qe5'oYmD03@q.[p80>].@g?Ou_;u^Z%.l+]TAn5BoRmFE.i,guJ,n^2/B.ZD=fJRG!^s:6L1SZ77FS?&F00Tq!)^TkW8$3tHUHFfJ1j6nW""B8A(_(uY/'%C!N!+AA`I69#%X(QOF8WHYZB*aBgVgWbeZO#uRD;EJ`qoF!Gg_bFr7*d]u]*%+_(W9Wno^C)P#EUnbN$0J6i8=^**TuG*VKn=s[RKSeC2`3mF#;U@%E&Mn*3K,3QOg'[2&aA33Lq7RA\rW&gIeV:90#"V"nWD2;9HQG&G@V8(FZ^AZ(HF<ZJ&@>ebVS[cI:GH7jt_o[NMRIjS+$t:rpZVP%rbDu.Iu]o;e#.db9eqCB3(8^X"^&u*2a/jjB*KBV:pO3A_MHEq2q?q,k^oEc=<I!D7MMbQ94E16\r[,h?A"C;BII/rp4`=IAbrE<%V>DJ-Xu+Dj=8Ia-rC5Qbj[RU:/(CRJL8'rgJ^lpl`'XF>5bX)_SVU/UlOCYmN)A%YR=*Ug^NI:]T,mlZSj]p)@)S-e+olO,fkCO5%Gg69#q^m7fF(W-%.5ojZ46-'Bgl#cG.20eEE8uoTXK;XYI)DM]QYPk9;ALi[cd7$*!'b=VG+*[n.9\a*[R2?S\@3);]8H\Y='bBf%Ks)b&5S5XA:c:ASo`;KM5K.V_ZQutgD0LRGTsO)S3uHRocaikSAbCi0qQ9XpIJT_+fA/6J--"NLVHikUJ*c4,nC1fT[g9bXEYC\:%(Lul/n4X1!DiERh56q1mgs<3#&U-BuQ6cW_&/35_J+o*AZ?=fO&mP6Pfaf?K`+(ACKjgji1N$I=i'O?o\oNl/bK'ARo(!S]hAZ8U%cl1-"pA[8?<d\2+S(4h`Urc[R/XK3^ED+:'hrS93>[/$f6Vol]@Ku>`j*Q3"q+i[Dqo]NHoQ^00Oi6`2fr4A3FP^J`.EU-8?2(4Z%.lQo0d!=$\CJZN0BR5+:KHR9`BPG-&aTA,mpn19@MNtHe_YL)Sh/1qS'k&Ul$0V+4coEc]eY84a(1r*6]/2ZlKCF0dPCDiprEoS.%\,;&$#U^Z7H^J#I9/F4REQd8>1XPL?\\S1:rZ??B5Q:@tFXt(Pi]uV1"kW?O/,*lAG<PJiYKCd-)e\KlWqP(oqu3aXS!uCL@;VVX%46i-o%mMJr3,Z]jcX/=(d-]2.%_pj?$h5IM_1Hjq[_HaYmp7bY1Kl/H1Ii"tKc_/LTRMGZ0abNHqY64.'uUBi[%:ECII8#,McqKd%E;1#`Z>1U&Th@V`s$?0Bs7N#`\+(#W./7.VY4AKf2uiEWr[4k96J:A\O+$r"L5,<i.uUds>W=6#W)5/72QSQ/ZE#-1ejCP9lC2SB%0VE\G$51'g8*#\4Lk[I?fKl2BLO0$QV[Ocn?Vu^kj9:V=fN<+4VrMhNDHlIdH58U&?4()(/C4kp5K/f\rWXdtXgUV=[-q<tU_nOL%5N5reIfLZNIeZA3*GF.'+0S._f0CFHn4/uDYp\E&eGGm;A'IpjODe#8q8u1PN``J\5Lrj']2N0>^&n!epeusV7q%nO#"IY?f9=h_%#"W_,?+KD?n0[q06P>=`;tV(L%.MW76ju/#-[oh@.0#<cqeuq(@_^rre&Eq^'+kfSP#4+qiBI18s53(o.]5qSEcSU;G-jlfbr3P'%a6rcb&iCq0jh?+iVf+2#Rt_Zde7%bPq!;,X`V@)QQ+JG&M<!Hp"eM2POURf>P/EdQTS?COs,Xgr>Yc^")Eg$p4bOC%\f5j;P)oeP%&0XS3#T@5cchHJ3p/BC7)_u("hWL;PncE*&Z>.pq=qY5n:hXS8+nUCG4qr&I!1ef$SKX1]&p\'r^(W22An9hK$$3fVnOuf5hpH3<%%7ln#h5C=>#W>4)P6+M_?]'K>BFg,H8[NZ*pf[ro5T#,0-itG#?9e#_^B#U&,Mo*oF`Xo.Nf497-RfglHq[R</<ot`1e&'H-t@Z\%&AhqN9RuV7-jq_#O<F@Q6CD3c9]ZMDk)Nh%O5N/&3_2p`PgMgBer\%D'-0:S]5rVQb_Iot!q;*-BM&4gO>2op-^%$s&5N!%=Y5:F%/.`@>;#Op,SHHo0_Na9c>lOgcoD+J6hN+Dm@AGV^ne1e6j'*JdieJ1B!LA?.US/C-\DdRH1OB@hd"gG.^kSU'>?H>/K#?0m:`hU3%!VRa'[2oSqPEZW5bsUe-]R0u-*tOb8$E?#J`W0/WN`MN'A;:.'[ao1N=OQ6!l#nbPdAsr$*IJKs66sA5#^E*MM#i\MTE0^6;um(@%o`i>F(_I7mAZ(V`qnZ>j(Fk"dgn;<M!Gmc&6'i=1#V5u=HNSa!YWhSOB8IUs;*YOl[%Hhd$?(YBT*X>i[,rdJr$FLWp(T`s>=!*W%*"8d*$@ZJS"m8)XpR-mA;#1]94S+=QUuKRH(n?Ii7X##=h/i;KKIUr_*_=bqPU?G5Ze:PgRTJ/6`r!!s5LZD#Fpp8?5*kOCq!<F+%#E/JqIQRECG^a/GAL]!<VjinCG)7:q#PlB*)6\g;5?!F2_6dPBIkBkJ5GHNa#R1=-$D7rQ3XRU*,WMTNOPgVIO"on7/0Y\e]a)5Z%Dus?Fckau!!pAB+Ng.nc&gjQ50^`-g*:O#NQCtV.d'3i<qBm-E)'td[gn9n%9^XRRBZY_?RB$;qL\ZW0-@mhmm"Z2eF/_c/eesi<%L5<(*^gM2e%<B(9M(p+\3EhQndCUP>aH<9jK:FU55VD9LF81Ok5r+4Vn2'8F$8UfNYoIjRik%QsKWo(p3.+O=n<:?lEs/COP^,&Q%U0I]V9iT(W`#V#Cq4s_5a!U/<*>Ze3GZYfobFUm>'0Sn_!tg6LK-[Uc$!n+8%.*IpI?P-rf<sgBGQI\KIepFV8G2m(Jc#*:"F/_S%,a_745sA@f#a`9""D'2_Seg8qka$F'i.$VlD[$QtFF6hl!GU1<c7]W\+2l8t`ZjP+#otm:l&%/4"AqdR0!Z39$QVq?#i.HgOtFD,%l5EPZD:Ab#*l8,$BIaL2M+5D(KI1$f"a>*pYB`5(oi<@Ld*#H3r'bQ$A=r/AD]j("8-7cSGUbu_j]c"=mC38:%JV#!/+da#rp*#q%gnIU._b,AYKXNdiQ*a2lM,UT9`/[47c(>3T%pu3M*+0rR;rA0Omn33SWjGhdpi.2\KH'-<$ee9'``FpIh(bSAJACDI:s:+[<?k2_%:O'RoAlbXF&i7$#/l^O0V%Hg'aX>/7LV,_t&$ABTrOPgB#X=#G%!!]2`MWPseia"6iBm;Emoc<oX"I[!]Qca-8VG?G+2QL;_7CfX%U/h&WUt6mg'Y*[%E&oqJK*bfa;(+5D!&%:+;r*Nu>:VtYJt!jl#KYml@<iR4%L+0:b6f?&d=ZZ.\BG2/YO9fH?ir<'KmbqV*M%WK%"?jYq)lK=-:QGSJ6Wg,gp]6:(_;W0\)65]Q,C88N@!d,M8jsRE+AkpI:W^FV4+?+1+M7da13__o'&4eYUZKOmaae-B\1Y'2#D$cC%-nL;WD$2q>+L.2'=H:=)3,tHC&$-:GifIA#P@u6&@C,&>rsJNA77Ejg=a8E\LNe@_I'&F!Bi/%dCc(aI>a[r-GG3qQ5BP,d8RE[O%^(!2g3!tNpD[MUJ(WSipXk:H..Bj'g+s`Y?$CiYLeH5tC^`6aDh&cYIB,DiJo<C_UI6bu1Ngh`5$;@0-@"R#Tpbiuo6GYp/k^UeN%V4a?&#Ts!n*s-KDORradqL"!"+8r*4T`=N@oS<`ko\U/g$mA=-REp?j+(,h"kb05#gSa86TE&01O,^HaR2r!+`e45m0Y+!r6l8ct%!bWX.Fibk!l3K+4MQ(G#PIVo2U(<OE_W3`DpG$mprOLl_puDLH_hnFeE5f/_"1aN3`7,T8&n%HP.6+LPEq5lb,!`Eo'[Qt)FAG3s%bQ.AL[6Pur^s#a4;dDueVsF[c0S9le\k-YYq>j^2!jGVe=:Ekt!%)<1-TN#sU+^UA!?(r]AO7"g$M4F`IL,KYE)qS;Xb3E[?OXa`%*.B/M_fU/f,Vu&O@TM*:J58N!3d:bm/7?4$%4V6?6PMcA<E7`L$sN5Z#mZcT5kZKN+ZNWH%1`(<,;fQ9J#8Gc,5u^3'5RqGS[cNY%VCI+1+d"V*OVImqoFX(3JJ(nWW$!^#O)j%6hgdi.,a)a".E!-m[&Sp>eo;jIP_dg"]fE@AJClZb;aG[]_Sd:BF+K4eqdHpE4@)/&%&H=L@-<$:!1)\HDLG0CML0`N0J7=Aihp)iL#b4\@!YK;G(4nQ)JB/-L2#/Sf0S>%H8!#\s635^J*P8Q\(CidL3-6AJoSl7)Q.-6L%2ZPDjpr+p!,]WH7TJg29rR`<<hM>;t,DO'd&6&HVk[SYfrE%@TUJ:^ePJ!Fj#/-1l&*X"*CAnQ-T_I)S'f5-`YSt:S[2c=cn9Y.a%m6@[RNU:PiT<4u.2uYg1:M23:"2i"\5)J2F/F7NaDf)o]F+q>Y&T*rdH=[?9#/CBhmX:KT2[c(&HIfJV\)-BZ<0VpOHfMlO^No]!%DT:Vdc83(4hSoOhod4:\n`K'BpfD'B2h844RniD]r&Qegp)b4Ej/a_f+7OdCg/bQs6n0_nTa/@\*]Z&3X>*i(q`TqC\M;Ss=kh[e%G^HpW%Nr',f[6\ar/X/?]:gr7fGa(pHuP9Vmr'*H0\1DYB9"FQ>57!EhunPbCujH)SMd_.Rb4U3Ea7m;DShr.!Z>`lcFF&_)a2&.%)g:h&%(=Q0l'X/9PK@1''tsWg]q'Maf1Xgr+)LZ:NEs!/n?ACakhXOJqeIojNTmQN8iL_Pb*-AeS6q<e90b$!KDbetFlrQUZXZPb%_g5#"4p2#Y?d$Cq4Ec@ZfZo5,4hY@87:s.Pr4hLU$N1?9NP9%`nWmM?2AF%>fr+>cSn!U8bA,Z/A$Fe.!,6ZY]s"<mVLK!i#IZ5^%IAbF%1,4e$1(@Ohn^%;IS^mh/`HjA=a*JlG[WMJSlPbB8#:<(.=;sMc(OH+3(88E*@I#F\s+QOW<?\&OrNj=Z60ggac!C9D3p=sU%F<>YXoH2(d\@g3t[pLfg=\AD^iF-geJ.`g^H/OMC7E<1A>_'B_)boG/iKWaWJ,UC.j+$h@lkZqTIl]1T5u1>p@#""Ub%prKcgLf*%:Qo+/+JQ9*J*B;KIsN7lO.F9Wrg\uBhg-'U2#Lu&6q3R9bSmPYVJ"@r4]Iqeq%'[p`g^8;<>IDrmsuTXV^MA^m0r3:HBraPcG'D/%8(?s<IFsSDm/!q)s5R?+n>:\]$;5\0(]trFdWn55S;1h&=<7$AQ_<l2,oUfW+F?R:K/',B&hK>%#J7MLnTUJq?IESmR-e!:`iO!h%R<e9tIcd!EHElSVeWlWJ@DBO%*piUmG4n/-UrQ.TEjHX"kj?W4[QH+&h2>Dt[KdG`%JrEk"))ptcfdU"l[O&gi[opK%^u8nHE\FI%J@VbjglU`FDS+b9[e([EJFa"oFNeR69oW[2i/[TcO$Ni5Ce#R76kKB5a01Wa0_:*m-j'Wj9K3G:h&u?`B;`rlQZ@`/++rAW#:GlE%-D7lQ)tIU^iJIW2,^I;%_TdJ9*mN;lrQTGr5&=2fc?=!-!As#(7[cCpd/_#B%@k6t^&-r8'5c@G1C[YQn2hGZ@%L-48Q0"H1p+7S%QF18u#gkaU&,Qf<Q240&6-oGq@("_t^sO/#"_KG-",pa+X>pY0baLU;=I`u-DK2Ic7iGTX7rSF#Djp=5p,@]qCd/c^(:3sH@SB7.%3O9u-9FdP]qHu0D%&WYkA%c<[g\,edO(X6E!'JV!hce8oJ:t-s9!5Y_!nrZ9i,k\Bm;I6EM\(Z"RgI[XT\<k`U2P5Pm<['`0iF_8%BJJ6A?pL"K?N:pA0Je\I2CrOmJ'cpZ[+k$@c"@PPaaaKi]mGF^A=fb7%uUV'pbohAJXM%dbR7iGJHWf1%7nhr08S<Zn4$TXD-8";%fOP;Hr-KEO,6ZaS>j)ro"SX#1BFf&t3*6Si,E=^-7@0+)GE`1,.PtIL*[S$+D@Udk8Gj\7j;6dP'2#BqgfA)^KO(RD(Q5pjl_+P'%+%W?+9N9_^"3pp,oM\r;+HDo,PmnK:oiA^#Cbl2JS_I/B[\X#+Fu3IA<o:,4;.-&/4$K(\2q^+mCQ!1s"(#\Af>GaGZG(n:PqkjA%.o]7SZfaiJ71+>6C<`BdS(S,hiq73/DMeM;&^VFQ%2J_[KO[#5.rl'#GS\_b:dD<IbS7^,Hk`m'UEJQ.\2AWfIPY)c)>5Cc,9k]k%?`HKGA@D7Z7&He6BnHBf=sj_t@q?c&\!9+@6<N2Y\q,R)T*d1JQ8Z6pdNmdSpt*Lf)2Rj7":`qOd9<<]Nn.kt5+KJ[-*OM**:p+Y%E/8_0a^I'TFnei"_.ps3jmo2X[DHNjAI:7tHBqqQB%WF4`H1WC%fpDG\iRQN\%TF<2W!g[Io,Dd!o7\$lcEs/MZk_))aG\4)69*[%49a72##q0`3$C<p8,_oM$dT[aLr^0$GVt!X?Xqg]H_fhqbnrcbZ-ke7buf2QGh]_e8Bt<_Cq//74gQGBDOq"pg$<D[n&qu7)tBu<%h"(#--pXc@`V']M]oSYC@,!otPKAjACGl!T1m@$i@sU)'Xp2oj^+=UO1A2-a*`59*$ELTSm"VkFEhGa??rPim/"pp&X[e:$OChOD%PO>-UXYNo/P2j&;&/hGQ,,=PXZee"u4jY#e1n4OYqRtbb%tbo1XUoOip*I&%E)\O/`F.a%f%KI%jgf6*bINC7_)iH]k6J\N%hQLF%HJS[,[\)rtrV'+h=fdBQ_3'I7<FC)PS2uluB0ZgQBXSX8r+IoU>2sS+h5LAj2$>%sa5Ac\k_"o8*/W%i<^7pPZkeg]TORNS?p!8&%B<@p`2esFN"gce-=u^:X&hdSO@7LFu0akarSDqY*mhmc:gW=c<G1\a(JHIe1.*,.(/Tr1#0qf'_?(M2YQ^f2)PnG>fhT<0ql60G0%qSJJ402rN_g0p1qL+jl6nYFqm@@;t7RWgjTOcaU7blsm(?Y]4rDn+YRdp!Q;"$WP->/<**lXt0r<+Ma*63?2r'Ntf]6u5,5!Yf<q%1]6Pc^Rb<(B<+Y`_##;n</F2)8=C0LVFB\I(m(s61:6:HB%?!QaRsd<<LKCoVqN[,[/!'s6]l;p)\!Q>gQuM6(&!>#D&/n]<"KbO%)6J's+9cWUZNY!%<TFWOk^TSZ##Qm&0!f+<Wn`gn!>B=,Cn'6haKEZ5:Uh24+7qmbZjgZ\:V/rW'g3T,Apd$F$3\#,HCG'E$1<>7%ZM_^0Er/!:dp%B/;mqsY,)>64.R4aq2EIN8-c7hVgMjBOs3`O94-^_)"Vt6Z^_<YO5HYn,_-uK`K!>DSRG)K^,DjDE*Z%l8TH56p%GYeMCj<GZBquc$Ob<HTbA%CQXFJQFQqKaCuG^TG,`g.[jG"9D4SD8-UO0PfR[`]J;E:eT4S3AluN`9Bk^ZCs\j+`QXjN&D91AHL9%#IJle=jS%CXUYC(VNEMe[MpVeXuC]DPn@64WpAWg,CUoBn9D8qf&Dg;a]0hL5b<_[&jGrc*\D<UphR_b)g#=bTB4Ik9lE\Jn*"k)%X;6dJRl*,DG]n;I<k/bu7FSA:o%p!rf&*V(l0Vmn.Meu[YaP.\9a%`Es5^(1i[u8KoJk9=f4LB+eL7W;S;u-Z>IICOT:M:?lKPgN%I`]hIa\gpTYtg@7WfOc"]MQ=UNeVkVIK&CSlgMAiRH;#o!s%)*4-MtZTpYT3]k2a0elRJa59[$og!9"PO\)MMo_+kjjudMB6&"^#%+6iR5plUU)4A0>DANgfFV=DK37_gL&ocF_?aiA0F]1=S9d7O%YTDK,k8.dhq/GTl\s%UO4elUW;R.;m(3W338:R9mcAR$s%h;P!<%b_t5__K4oL`Wq,Vnmca$$DYD#/beZ$a5RuCcf3/4\A"KtS@)A@d0E1I>r@&N7\dd>I[W8)PPR3ZR3]FtcusU,'qKbRa4Z/,AT_p^%mtXU8`UXE"DbnERh`cZQ(i+Vs1TQX\ktKmQ]V4G6@MT;rG8"=q40"CfH'IB9*9F652?6t&8r$`$`&Kg$Gm@`,anpb9m@pqF:h,>`%d&ied\OtZL>&Zn340UB'\"G/fb,mn!nb2`08e"K:W8$CU$l5'93_XKchL_rIV\Ok`1-;rMh$e&,a*!"30\tp*K=IakFS<.^PTYAC%M0_H^$t`sn>OeK7c=AZTI#>ZSC:JQ7<VXG%;-g1':q&eOPKAE7b,;*CVOuI.4?!1apd@3c9c3NsQjkaEJ4A3A2h;Kg!i.F<$ldTC%oNT+uc1_gKoCOZs&,(T>UJ*KDj31<3[GSi/@(j_fLTRIF_q\s;*cp"(Ie#8k:&fZ1VZq4nhei'A0RLWUYL"YfmB"'dGqA*-?Mh:d%:XC&M/BuXQDW2c>!0^c`d.;M,Nu*9@?.LclF[rR$[uY;A2CtLUmXs?QD`gh@<."+m(R,>_#O,?3J"(.QpP7e*8K]O6"1o/9Xc`#9%"e;+'gtlEkoZ$#BobC9aM;im9LJT,m'ee\MFuWaPloO\dh((3jKcA3Q"NHt]p[3R)"P+cM;mfrSoW'7SR(.2Nq^U;H2,As_2g^ef%mPBkN+pLR,n/S-[2Ts+3q[Pg9$dQ>]aC?\Z!8TN.0JA,7`6^>#<(dU$R`V.jIM[1$fVnJ5$2(5ukoM\(MmfSQgJYlT)Fier,Vl95%3J0?@]H939Kh4c)fm7ip2d=d0d&tk-9u*GO:]sehh]H@R^/;6r(9q=4d%d,Qd[/]rk19c;24>3eq*6>IF?d2G_=<WK[L3P5pO6s!%fq84fR9coJlV-o^EsK:T3OoVX"kWU%.U(W$\'4I)gBq86YQ1h;Rt:0_],3Z?MY=`-N(CI/7Y8+!9BOYm"9Y]-T72Qb(@-D5h3Rek%g(!5,N'7DpM9['-iR]*r;o%)LT'+.P\$u"\eCjFM)f5nSV5o/T?^fM4UbJ8;=r:X14#"cUHjXQXU:?f952SPh+#6RUf`M6PlA.8J%fl$4nSknCEqq=52ln:Kubfes_<Z!_&2R(9SO*n'=I,UZC=\R](MfmCFL00@08-LfQ&SLCZq&+LM=@\Uh@SB](?a`5]QUI/91:f:*%'Buga,#l:h9N(hc2(eUjbMgX=2[j;,bHV/a8/7*"*.IG$(WfOnXLEc;@GYT$_#<3:ioM@aCrW'GJg6jW9piqS!ZZod*c*+g#E8e@%JtrdjjLI4jd9A;cB7m)b-\m#!Er_unAYL7)Ul$7^(\A[7%'9kt!oK;oLnCt`d,FUKNaW%eK+NC`V$(^(6:-^fb7ls/hdlq`7)S3F%ma;LXCOmiS";m`%pu6khjk6*]+_rc)2G/..:YlB!2K5G(5*bVRiC*3SrSAmC^e"Y=glDDl3^_(Z,Kn:sIP#lS"K_ZR@XDWl'7E;_%!VSqg0pL)&j7oV^<lLhk%'\(\0T$jScrr.L=E"Ps$ld@k(#alI(b>YiLe1VVhdOOb\e*1WE(KN(LZ@oWUAjYTi$hn=^K]]'`NXtX%U?3""E^tgDORP,P!!GiM3lS^lT:ZO,/UTi,8#Q`[`o.cDnbbI^4S[nRBSa-N>qUdI3lu@-@`88eHpZbHbJ5W&A0R+g2uUL_=U+@Y%f,BJ04'ODlnipY/hF1P^0_Y1^@sYbr]ba-C;]#k9(;Rnh,r3F.]1B]#I<m:/ns)i:(T8e/`F@_Br._;sOe95P.4hDPJg2%'Q=?.-%C,[0`OU_P+9;r]g^>m0Y0opA_'K7f%V_cXLHS.86-Js`8n8k"):ajnq(GgLo9([\Yc]Bd1:5D@_9^0"9<[p'Nf&O(#3>%H;bq9ca%9^q`B,FYe_N->obN"N;N?"K]4.gCqG-lU?;I]Z,W7Wpc9duM;O85U(F0R@VIrNB1Z(!hIATY8A.*bT:+r=2-HZC'Kd^K^^$rG)b^%ZJiT8)n]:=Kpi2//ETVGCrQ=(bS&Gk'`9Bl1KL4kXtLR9%;$3,"s'4k)hT'r*)!\H+e&cF;le@/G3G!IQh)lC#J>G+Ufdu7!Yjd=%rU"^o%Eb!7l>J%cDa7&%\lrJiUE]=;6R(s>e(_!_TGr_)[o[#uQ/D2@CsWM#`'-S&:Je$RPsp$(C]ML4PmTH7&LdS_KVt<mN<Y$u%/b>Jm!$1nj?^dHu+S\.>_7i0kP*eXEf@#LB2'l;VXXC[4DAE@IC3Gp?I`pE\*:LY&]04RiQmU;:Db+:tF=ltKPZ-MfPKRTaG^X%m%Y:W.UIMau!H>U.mKZd(=SuW]jML@dU,=bEO\I,\?LTWZ/\B1&q.#0?>\lq0jjo"UuI<k_66t/#4pOGVSW$=5A1t\\9?_I*5l+kP?%3`bS'!o3f610P:nIh\>K*]#IGnP:lG88P8Ib8A(<XR"1/QEVAX3a6K*-MRV>RYDWMD&KSj"RX!Boph;+N)-9llt_Yu0XE/Fb^t<#%4kp%2ioc*7<%P*\?^*RV%.en&6_erbqp\.q.!p16+P;=ELR0nc3Te0DO,qi1.!Kd(X5k';J/qGR9Jb:8'aA#DVmFb<PZbpXm7TV2%f=GXrQ"G!qX$jAbRtJ';n^JG\a[@ddIT\?s3#0Y>nj>Y?JoL&^@j:@%,V;3p_Tm7p?Ch6#9jI#^QJMB%f(#SbH3FtEkjEt&B']D6%<m)<O=NW7Jdl79!nJ8TIQ#bV)h$Qr]qsBf(V]X9Ak8g4*:.K9?ZRGRFTD_Hmn+M*eI#2%u2t&?p]NFb19pu&9*j<X]G>C^u#Oa6r%'4UTZmqpi3[>kHKGur?1-,[`XU:o=6$TZf(fIJ*@`30!+H#>\#$X^`p*e*qtatT2lA)2Qjq6f>/>(JO+CU+]GDPj8:0RC#PTWr>6%hAJch?gPap03Z"!kdTn&CpaY*-YpV>Z&lHl!0X4Kq<ICi'q:GCdrb64$Sqf@o2A.+oJ*`]6l!pBJoP"@l])s8Yd&G,9c?9,[lS%H%mfc$L*VAoOs,o$Xe!#0]eg.Ti.(qp`%=@f2,gj!S]bL>jb9tr^9]10Bl65VA*kTnKLS),-]tqAhhA00Q`kKXo<d4SX`!QLlSdkb@%Eb1G;n7Wh\OPEU_H2`]p&+$<ER[['M_i/MPC]MNY7W?!s@68ra^&kpMhC)4cIE==&A/ARI(J5ZaBF>/4$V:=L[r@i0#GSsak&;$s%(lR=cK6&l%LF-=EH@$SKg]52:5hrl5#W=H!d6]E*bAII2+bL@eQTZAdBJg>kG-?u$+CYFtdeHMVK>tB&.I:hj685a&iE:>#pi9.H%JB?;'L!RS.,P+$[`?E$(&CQ77gXn$fE!`CnSPnl!f-YdbS!hsZ49oO3\HOhCT)o9;lK0IX-V=T7^3&.IguM+ho/<DJJAR,)jdkiU%1f%,]ab*/2Jj(5K3.n=96,7b[Vrm5gEg$_R//Bl17`-:f.hRgJRVoqjU8R8&Sp2hu^@2"hUOE+ggEc\;lf?.<Ep$+qHb=Us(7AeB%btKPV49`s-oTQ8fB((dM!Q\_rK,]<4>s9S;qGtapH/`/EJDNSGM*N1)"T5+KLsF\5._F0s>%\%QaRgLGWG`);UcDj"aknC(BN&F;%2`7<uK3AeRn8L/uS2GOr6ecrlfO->"$P&d/r/$lg9N9k@EMb$p:Ik.+&&b37[(IZmEE>*eML<1.2YgO!1+t$3rKJ"'W$g=Nds+O"%"$6-rBHA!f/bh^J7\_5s?2TZEgkLP>08m1ro,*mMF8)7b^mJqds"VCa>juF<&1rU,qYB0(obT"rm&fMs@bq7?T*bhlDS>2RcgTd0%En)hAf[.\D>M*.07^h'T8ER0W/nU^,M1-dJM%.jlPZRt)+>B2Cja993\)3TD5Vs`;_)p,m=3P5>VSudi()39-<X]<BKKIfi+I%#Q%Ij&8>q:Sq5ntWui.su?#.'?`/B?ZeN]i_<18YuJ5M+KpO$nTji'.A?016&onA,]uh29ChuDp,fgq^$qK/GmYL.9Fcqb)Y@g]K"X0%3N6Jp8(:E;nN#Vk^+'u5VV4o4WufU=5+93[D>cj0)b2YVB\gC46kSQjYm$p2aC!^Q=-M+e&e8jtG4'aSd^b"1`$/!t5Ar>R%W<:m%&=B,P6j?[eDk:76cicX.nnES.4\^#D$9X5V6FP^=J>%jDnKu-pT7#ig$qMpdk-cpF2J'aCdOLEEN8,inn/"40_N]7j_gq\K[p1Zs%`=7iXm2!"0*h6`E=L`:)eKb-A.8Tt?#IN1B<%?'*^NOj'fXf7-+(GoEFo\j45Wdj^fTJ*82_qsk7:V[)jkIEs-BQ'?SW34c`H-fq%MT)-56O\[t5jCn'#P&^6d[nuc68P9^%?^dW"H`B>Aj9E/39'V7E%$u%"6FQNMpHjI2nFbanibHL^%:<c:=H=qk]'KGJ68pHN^_Ig%@@SDm,;'SE[/jb)ICmZTSX+9#hq36$UmH2K6NmDn(2]IR2?4O$28@;j@fDH<0UFWHO'bWZICb,)007,uFPfhiUV7rnH`n4#r_3pB%B]f,V7nn*G=1":;7E6(7@oc[^*K*A*kS42_@N9LED5Ep^^`*t\(>2.?a[o=3h[t+B2[>RcZH53^!j=A_4bC'm56fA[Ac/p]=)GAi%^2/7U\"TVY+(RLmq,Bn<lfE/l^]/6hdoO$d]%o>V#jRGt`>TM),45@6>V,KZEg981E:Y*SLWjO_)R.F@lgI=KYAJ7"^lg%)-=JsT%0Y0Sm4<??lT*5K5s".h$ktUf!G?Bc7bL]-9pe+)Jo:t)KSp/DkUJT`ITF8G)V8-7*:m2\<TY(tsBjs:,BA[b<Fe]Rr\_63:Rgke>%'=<k&XR:IUQ+;[%\ii-9`SCr>POph/0-CcFo1g3uD?330lpYi$*6eT9jmbFX5=IQ_1bhg=@+R_X,FJD:cNPXg"Qc^B?8&fPZ:==A%[H)2!#Zu)uiI(o:F&_bK%fMprq+6lFh>RWBqrk,%!g*QF\]qr'*`s\L*fD@iV4#J%X=4O-_f&R8V'k$3BWDR$_,b%S.1@D]B$pl?%m&+Jt^1s/La3?PRYl-Z*?j^DHLS@Ch+,ZB@FHrK"5FffF_.qsBCGb_VD?B.IL7npd=ZUdcT:&m/*p.Yg.eqT3k]$D:IOtAb&YH*B%/,!99W+\;rQY$9V(c_'RXp!.^I_L>9?aPE;]+3#.YmH^Olee77L?03O_fSTRZ/.JLk%Jna^?=*$Z@cYq"XueV8<ioN&CeQ^P$f_K%5WJ=DIodHr?"7QP:,0L8D_5q_qoAirMi2C(+/*fCdsZbX6QbfOYm'W/pE6ffcp`D0\0%=p'8$E8)d671AH$*86"(@fkmESj^b?2Z%gaipN>jK,*ppCkhV>>pj4n9FAO`iE\SP=`2GIL'WN:*eAHSll"7Ad7m0\`lb]:cK@DJ":&(7^E4Dk=I[YE8Q>@*CW%\GPY>U1qLX%ZpC-Phu>#`G=Jjl>95*?5TZ&]&F2c0e;@%NTFhfMH`J\5#8B8)hVMKrV@:%F2Y)r"@CL3l82)#*oU?e9E)?OmEs@nPVe:A!_;L=N%qTfo%Y]c81J<Fsd<Hu%UK<I&J2='uTe9X!m#8>U!X0MB0V/JL;#(6CNonA^?K>5];VtaQ^1=[][hc-,Lb'WmKeU$l$>q]o@>TQ<(%YnUsA9%WB1Kb`r?H+eZ4A'=;BCj6?bmN[Uq.tX*D>EgtRXr_PWpg-uOY"/$,B8oG%`>>$0PEK+jouR>AKBLm$Q_srnDVr%SN<nO?%V=3_@Rj./FY!:$\!g`.I\"WK#;IU/2g6igqf>GEGV2/3&NP_lm@*Hc."@t/4@:R!<W<H/'mkH'q7N.ig)W"TcQsT0JTcl`.?e:*C%dHKhR5/8Yf.,(s^#(=`C1Y1_p/sLr8fe@k`-C6,MDPYjD7\L#\6#;B-JV?WKf[J+6_fE7*bSD\eCYVJ`f_S2N@A5*>/4Y^+;ZTVl%"r9MrEe>."O;gT)#RPFs4#?Z#re[l^!'7"ef]I@c]SCKag.e4(WQpe8P$)4<WUeF@N2iTjgWC01'O_NM+G^\.#dKXIn!2H01M'oY%@@)-0?rp4[k>OEZWWpJ#RV"Ed7`?%4XlcWXrNI^i<@S8G;sY8)_8(#WB?4SikJ?82d;bO.-YNk8BW8_ASqK[p,er[N5R#i@MlEXd%T&'KN*3msK#e&[Y9*t8_mkQaArd%BMI:QOaJ8[>N#^l4_0\%*BrgWjFID^`+hCt'f]:2%"l.+$rn-9q[YdtDr8<=qL%!M,Q5&?)#%rT:WkquCmHre`f7CON_G!&<L<81ZSuIF-?N]BN_3K'@af"1`<b@,.e5J@RW92=+d?honp"TY\l^n/"bi#8RM%%80(#_rr%7Y6'^\%Zg!A9#*61okO&=^\"<*,cZV7&eJqU5n`\j"d<;tWG7:FLi--^WjuD1YI<ME,nhibPeKNig_,V^fp`97UJBj2E(YLc$B/8rkEi.PX%0B%'14.WA>]aoRdr:-\`O*gB7I6nHR^/T0GbtfO[3V7_:j<m>SaZZJjM<Eg+dCO$PN%V,t0pms'q[R&An$=geS*8SR-pWKq5P]NQ%mN0Rq56ks%=43EEqng0UE7p/]^PZe@:W,IDb'c=[h'NB-d\?[rb^SA4AMUE2d91_=h0'3=D`Q:IA]hhgY1QGD4)+.I^&r:TQULYM%OlHXo`,e<S,4'M^Gi,dN9hOlobi<?B<K%al5O<FV]Btp<%?/T(X_MsDIZn.k[P?_q\mJ?PUH@fhN3;WAVU:t%qVfk=_PR'6cgXl!%FCa5aBGno_q<gbYTUkVjR]!7/gH=?rm7Vorna=7?.V1)ZK!2!S0t)2q_O8AdmHscp>U-o\(Hf!rgMk9inYMjo2XhWq&hG#?cLrLG%8/obo?TidU-;-f9^Cb-Us8)P&V)7E!p7qZdU+g9?/+DlW&H&1*ZXDG3@'?7\B\Ba0H@,48`f4mu;nLeG+7q!j240TTgfmcrXj5S?%+'0:9BJQuB%fuJlrS8MlbQ]0b5uCl447$hS-[`Do`>WcL'#htkX>m/4nokI6K8pCQU/]iijk!]6D,Ik+cjX7QYE*kW\r8Cs2QTs$%T),m4ml).!+QTa,E(mX>Dqg>#)ZeT?]W;#Bs5)4Fb7D05<ttrtR"Go;bet#B*d"df%$M_-5p$FDdr4_p0/r+?[)j*Z6,C9k;(4r9%aI`=&IXBZa>I5G^#JD]!!fDV^I4<a=Z3k@VR`p>%+Jgc*[nd^ic)1E3V7VDW:4Kb"TE__:PtFj2[M",6(:V]/ltYL-?5+EK>Pl^7%G4"4\%`t@JoBs'B?a=<%[#ki%Y<71dK6H'/a\"o$O/F?iW5"ZFlH?(:)AM1uA?D-O6b(tnKk1L;>gR'$6#3(LND".cK,G*pjs49u%^B_<WmVZgSc[)j`1<L*\XNW/OK>-+GRpTi*KDBboDgA'OHq*0%Xh.<PESh@l*OPd5fZ=R0BJLR9D56tI"TZ<n'<gh'<aj@,o/.QF%k%"_a\XK.(:rm"(fD9RCXCi7PI1Hr4K.j/#TF\0X4DK=a8Ho?nTOC&L4+0NtYN_9gW\ip&nPuONjTdBGaP5#>WF@R)X`_7(E1<4\%LH`?2co<81Je&AQ\D<LiS0kg1pi6KWeAVq*7_uu+->^GhKh`NpRb14m9m#360n[ar%`tC+akQ1c%8(3DA4905Sr(>%)k`L9=SFO!%HuQE^-F]?0C8(.W_1SV$"d`oL^peIQA8%.p/t/i76/a4#.AWMknA?1be9a;kd!V>HQHN[_W_kOMOifk:1P8/h4Hc!/X:p:JP$u/1%WE-\b"u&$>5Mp7phAF@.+DgG37Oktf.QfjrN5"h&_`nlW0u"_KRUgr7J(no!!bAg5.6Id^73VY4^e_pc),Zc-JuGSq'RG4%i-QoI%rg`O04j=Q2E@n-]1e6=??c.-_jdm9Ea&1r$l"Qc7aj'Pe:Z#Eq9A="<T1U7"jrp2XH^iI<!MX0'ouK@W)i<su(h0)ZdH!(1DAa,_%\b)QjJ[F""\l23slbr*p,bt#(JTqV>E\,.hT/VRt.J0>+oS<5*oGe36ha>?&cc!dePsF\!6@?4N5,Ga;6pK=b-p6m88WTV^OF)j-%2R&=+0Bum&m@fB\>!@j::LD2sdqr+Dl"EdTbc.!S`5Zu+qbsiB57N"CR^)Y%-i]Fb22kR_'hM@_TZPj/@YdmnN6tR!-h27,mA'@_%A)(GiOalZ*^H:K*oL\I"JscMS)36AA"j_7-a0U9Y]6cjY/\/-GS'LAHpOK5E19iPA<3sG'SQ/Y6[bDL12OK%>Bn\$JW135j]?P`,%&GL_4Lgi"&)<GmADp8SpI+^2,I[M!k2Ej6p?t>JIMUYM)m'J[/2^.)QhM505TL3l48DO<bFV<lEDNf:1(tue4]Ia,+-e]+Dlg698%9f1Y,ZL`;o+P+Cq"$hH\R,c1D5HJg#J%)18k\Y>+<?.5O2R?1'^+UHA#f_q3qgm1g?Rg\og_%Aq@uJ=E%gmK0(No/U@=8agq`E^.%(cuDF+Th,79fT*Ojc1F)Hh\dJ,/,]O(1E]LTKntL]#2/XT`4AKih0*d0.n]m[3FEmEDWSqN0OUDq*FQ(^D!?i_c''N:ahGSJeuQS%ICVYkWU)ehmA_W#@YRCF(d*lEC_r;B"6W+]V>n63X%0q<J_OUJ6.LTs$Pu":XR.3749/+3qNbWqJ+/ssnfK22m"Y'Y5#&UlUl5-A%-<0XUqp7e`>CJS6Y`!.F`@]cIXPrfE/H:kKOsW/92./>;5B&\kK`\X6bQVUBLO*HmOiLQJ<D>2YYLI<;Y8/qcB@%73gCbGGB`+/D%$Qm!D@(Cjq-OXN+I0on_mai::=QX8<0u!d?JN4;BKojW,^ZiBKrW*:m+tAa)$2&^'.B\g"UqgdR0)UKU-aqVh1%Q$0r4mrTZ,4T`%*W9EtLNIRioeh]^lN7]Ns#b)`+HWnt[J$eRE3PPHqN,*58EOQHMVDYF@-QO_QrAU/S:+'C==TlPoHHALaXZL\l>Fnc/0RMQQpj]i%g[6ALkM\%KUti\S#^PDTb.u[_Nen9KJS0C!HFg8=BE2rCC8?Wip5!pf!1-OqFMU[S7!e28KU),4laleQ;gC2A7,-*2#'S)O.Kd<"%HeYJe[ZsT6<d\GDQ6L,;99t>"0I@g5L,#$\jMi7uaMYO;==UH\Y6Fm0i)RnJp<Ne+n)gfd/r7DUJ3.3]iKL/nV4'gsX,FD8n!*t_%jHZVDVQ\4?$$tM"175sf199reFuJ-HhO26[,<&^G':l`Yom?PGPF61u)PAS(fpCU>rkSqP]mCPcQ#$e@0dopALMT\54'B;D9HMs6%O&%N5T9otC3cekLb`mePE[pYY6'7Pq4DtQ4qtMEaKrJpGrtfMXYJ%eEc,3b.>-""^J5p^pk_%1hFc+Damr(ci<MaMgh-GY9F+;4V%Ec>YC?QqXQB7CsWC&oh>[-<qjQ0h#?9"^=VNujF$*\f*=M;L@Cru`X=n)4+=<Nn1Ah*6^*l6;eeo/SE8oUt*)lO(`f-[58O[niHZ%J6F"<->"YB//%=K`;86!'#^$1]!EM;M;!8WK:%=dS[M)/Y/T.(p;pZui_!cDT=^#X@kaBd)6nJ2`ACR$Gm7Q/[khS9ijHV(-nBfO%c#9e+.ZrQ8<iDR`.*FZX+R&Ug@^WceCcEG<)`f@FI8\]OOqN:?hkOCY:g/c$;;f`Xg/PS=kgs"V'4E_;4;A;TTPGa9gdI059+@8%%*.+Ys)#`Q,(^Z,S-[0V/:.6s,=.6dY)kdf6L7=>%G_7oAcVF^@JO)U%!")1)l=7:Y.a'Mdj?r0^r)C&A%X(GK%8.(reD>:%!<>(`%RTHX]!.HD<"@,uE='XY>Bg%/ZgD0Ml^]Plc5lka9,l*ZV^GhNO8+rj*%A`id4cnm,_(;Y^.-T_Wk:++EScgUaZV)'9-Q[7B@%d\*%P?/e-974Z@BM,!$^9$l1**]N[Zu/V(P4(#LH`M!,Z*4uVGskk;<V3p;9X54n8Sfg%ZB/ahAAQ\bX5).mg!Aq>P:WcK<4dF*\p6YV%*VJ5WIYg_b5#j:/HS&A3HY7?@JttM/g[9.,`DU7>+K"@8fR4lE!a<#r.4GgBoO@#4gM6qf5bK>`Kch!7dm+U_lm8C50@_iD0IC74%K?q8p0YOGkCbl1"J[a10o?f&pf;*4ZN"H9c$&ih%'/RMsc:b1&Yj7rSC3[Il8XZ4/Q:JDA)MmHD1#LHd+L*:>K00'*#s_5%m6pm6%,euqfSLaeL)'-:%B;AZjk_NeQ9g5?qb@4&b$H=u,"^Vo$;\&_;;`8ilTYbkYYQb$Cqh\3\WQsl>-X8sScEuu@En48/blW!1k2@!3%+uhET/t/l!X)Q\W2SBq<l'P(-N_<.XlG[Hk?_nj2H7oK9rO>Y0rJUKCJFB8Y4;W)d2N->W]Y)?bb>+89A%;#_!H]W"2i,>l*CCk6%#0om'dRWP^:I0ee!2O.DU/]',&Ok_6R5oIlTXk9m&rHmBMb4/`P:2l-?Wu'SB^N2I72'I?\g\Q]lkG=h0Is2%Yd5iV[,'M]KsM:C%i\`-HY-WWErG^b4Yl97Nd6g:.B-U&3::kjArHK(-HLLU^R:(#*-jt!!ltFS4.Rl2PeKHlM84I#-]f>HjW:N!E:0ld:4WC)C!Lj0%%.U*?r>[&uLZulp_W5%O?ZYaia?Cf/0mTs=7(OA:g595S5/\ZS^H(<irM4L(lLk5\g_1#,qm:CX,gl.cZO1%Ald*n&AJ"2ru/irm.%Z`DcZXaof)S3/H8l.Fq&rd,CUr`+spSuV<H*U@f_(2$L/l0LP.?EPf2q/U@4+`@J7i*q>nql=Zjd#T7,<I6W*n/t'rS7/?07<,X3%OJd.eV%%LHg65=oL/@hm*V%"Fc,7_7QZ5AHOgi$8l]gA\O[a?h;&cLE,pH1V#?(Bk%4DV9YuThei7Z\Yr-D+^J#e%,AULU[+;R(<%+$@DNYa95*R]6EtmRU%';Tk=8G<3j1oO*><2e/SfSZZ1kU`F_UB\S^c),jU28^l_1-IVY)be=f$d3;EP3*\J)monSVYVQa>,31EB%[l:OtF-0Q/@bk83.3aLFALBpl\&pU2gmQ#f+7@XKDhT#O\4oeje@VF\V;#'OBS@\D`P*la1OFXnZTN]'(@=CPD]0])`Q2?]Ze.r0%$L/4F#4ltHkgUj@%-Hlod&BO^Tq!T6LnRb.TG'g'Sf^=t*^L%Vb>i$8e0F1;U'8l%Ti7#FK=O(H&OWH;6$F"pG\.ATH3>6)qfZBV%SU(F05SLm\L5nQ4Ka9_N$d!*;FQsH[6@6#<6aB>:S$oAU`!9U/''NCo&(!$W?@)j>dW4-W?gA%0'UtJ_Q]"s9enrNYbDULI"lk+c%95h^oOtXB:ec?doA7R_C:6I"EO_^)1jm`D;9-kEKQTs=]2Tb/9TJJ1\e@e$mDGG0EV4MdTf;A^.%JjO8-'pWi:.Z;uW+EM;JWiRE%*4eYk$C]G!Yb)(f<tMY"YXSWCUS>W-i<gdZp^3@TN?q6X2-O!523"HGS+PFb'g3^KYhQE=aGGX;)!V<dhIW!Z)!n-?i+:7FG#O_&%F^@%T(?!GnZ89Ra,,1rh!#R6*B-G$0mEWX&=NM_oQ3\)fVW(NfnrPnGSR)JrpW0fK9WG;6Ki1EsBoscm*)/V([tck49&3/bkGb1b%3/!Ht95Gq(6,40[il%6D<o]>MB@De@PK*.[[DWC-EI=A`%3KiNEF<gmQP`g7Yn+M<UhI^i(u:m>fE,DXo7;C=Q3kr<hEPj!Gl;W0%k*,L74cW<I_)rYS&14kD!c1WIXL@JT\a[o(Pg2,FD,,_No'OC6&6&;s5C&C*b9/,ir8IjC,1l[*=]&39>2Zf"fs5eJY!Xf_9OP?Z%N0dK,6J-hj_%B(!U=2hOT'g=g,\<%pZ^W#.mX7_!FL/9Z;?qdr!VsqkRU%1_KLT\jDP)27=a-g7rZ+&2),\e,'LUY4O/iO'nkj,4%m0cMl+qZ,`hma:Ye0Gj?+MZb:ak4TZY5Ga+<Z2_MZ((/W:brh@)6hDMbSD,UEN0U<@]H1C&Z$d_ka'8<.]8n`"aLNla`8C]8W5_d%*^k>5Uh8JGTR`Km$ANnuAs#rZ'&ptN\W!>/WB;K'_lUYm<8_k]77PZdSI:?;%o-Sl9EHM*($G"8+\C:ia=OA)Mp+1fC;.<YmHu6X%%)O`%[@qn(Mp/JQ"V2f]1quajh_jU)6bChlK;&OMLPpTU?l5>.&T`U;WLE@&B3Snk$TsBo4!?^V,rc.F7M;5dKZUg<,eV17ntm`L%Q=^$7oa&aKe%OCF-qs8)_ol8fU>\bQ6<7YZbXk9pRL[YHK8qWBqo.N(Lqfm!%auM$Vj99#Nu$6(X1KJYP0s&4>b)q&'@"$Jq%+0Q%Up.:[#Rmk7:/WBfH:>-9`)R>p8?;A0(&Xq[%!%;%:4MN@>WX!%aj,ClGW;8ia"E=+A$$*tLq*%q9K=0^6k@g(j5H$rqG9T8[H$3u%MAF_/A]SHd<=Ilu8j"(0O"?0Ej%dmbio,t>jsVGAg@9-f=TY`I%qgu`Lq?8AS5^;']%/=<f,$s.6h]ZmMAOb/'+$]u-6=Aa;MS$n%kY1eAk616q8*369dLXl1V3Z!p8F:kddTW/i_i+@'/'mD(#0'eNUE='\=lKOel1(jH"'@^VJ:X*[(`(tl%d>]!]][cFW-l'(eh"U+%>^d)/et\`a7iA5t]-^a3Fe'Ka*E.&S[]8PLH<D<3d]D?65mbrmf?"5UqU'd$'t%,mcfN3O/Z276T'HURUF/*-+P82CR.aC7)6I^R%b#W5PMnT-3q(T\CA5qiX'l"S:oXqf+NkJaT,5(Vt&ZMtcLe)so]h1[BH0`1:6n7E`$5'8AQYT!b_LAX"OUC.#oVI,)O'WLQPi)R>%8Xat2P7\oJr#t,kl#3bH%-9h7"Ea"[BUof'iHPZ0_*3+/:cKW:Xqp5I'FK&Yh,4Y9h,-RDHKB99iQujIk-S1sKk%1k3[.9O$&'&F%a7Qpu!WK&B(b0'L=6@S0WIr.2EHOTnlmT:2fa61O`-u:$J#!iK*<p',fj4n.f-S=VV+HEf]NftK#sD71>iDVmkCo_eX2=E-7W?e0%)LE%6eOae0lZ?e$XJ62Ni'm>jb3^?.T!8(%mJ/@;CP0A=J\4s;V8E+!7kI1K?2<YbUT=@h@W_;%D1^0_bQQnf#&K\`\nh6EiU+iV%$p.(_kJA[S(+4++Rn]_a>f03*lL5/@c?@dN[BOnU37uJ6]R-5#"M<@EeKX?tMk=n+5uCd%KgC><;-9&>_X:>[_QIDX-k?ZCC3,#"%A$I:VB@;*R+"AFA:[)N.TTW\A=DD#J:fNK/rT`#`Kn+<rK&*;Wih/^0UT>5>B:aJ)6`!'R.YF%CW8aJS*oF>>;HR_]A:-<>>7.Wg%7[Mh$.i,An*pb@=Y\l8uoSJRH4,bJt0Al3F7'!eLR>oVHNsVSA*k-q(>\I&eCH`A!fn0[hFkI<f'uhK!.95(S[h9"U@9N.[6k%s;%ZDa?8g9Znt4!!3]#`P+mFfa$VWLBY^;XtlF=>Xg#kR/+=pl?jaUmt@T:2WZ.h*t`<8of6[E"2.#Fl4NRo@eYA-PV]l[_eSB6r(f!%\@QT^`CBL&:Y%O2m%:?mkaHW`Uf3Gc.d3fQVgh<]s1<#W8U5O31CDLN=F)WZVUKI=\KmV=/@skD3YB<5&ksa_1kQjEcG_,CFC)*g%9m:U<UTS8k3Es.H,@;mg:<mp=[uF`FRSILMO:.iJ:>s:W8(1&='?8JbZ!*b89daRdJ_KF4UZpiKku<%WcA\Wa'+EuMHS15R'/jH4%ku@7(S/"aG-en]9r6!E/E`3VAQg7&gai2\",c*"Ze&_oo]VY@+d<'F+a&\S=?8S3X/D\u<]Sb*YEa@pcY<4P.:'4s,MPcSqV7R"B%ZI*dj+a-F6S_Q)[ZuY]ud<*58=ApsCflaE13k8?Rb`T(H9rHnOJ)t?)H0t:Yd<'C?JK4Ksd<+sWjkA+(Ekh[BI-#$&3FJdr3#"#:%G;Pk\81Ld_#?8JH'u9$.WW;&T@TNo4'.JH0\/S0KI*rs\HYgq=8JbI-=,3]L.U?;Q?C`'bZF?QcE71h(WsgAL-R>c$VocaITn$Sm%>!^ZESk5oJW`,FN;KY!R,.&^nafd:Ul\(I6oiVTT;41DQ%$J`s6O\\=h*pI4Ysq]XC.-,A7sZ_-W6F):hGCf+gp&k>e4&q$bM7rT%b:+.:4)&DLAaX*o=)%oe>p4R'Cn\Ji(F69M.TVs7%9#<qbalC8;,ZUQ&MSOSh!)Xc4^Ns0AaYdmhfN-F!PVsiZ"AtX=1'Qu=_qhS%E_um2]0\&E9p[NQ0n,"TStf*$PC*lUiZ69AO6.\#;I:R&M8$`F]Fr62.6DP5YM5rqQ);la$pl>;$^5^6fWlMJatOH(+/@;r(PAU\%b6,A<D!BQU%dWeB68JSK]V/0os2?r%i-jJ@PJe:.(Er-j3O^*<Qs.3?K3=tAPA@eQo`DH$??u\CCt'Z^\O^-lmUi]0;Zgeq^N$g"%g)o$l'Nk6"CYU3bg=D:i!lE6)a[1<j^4'aNe5nr*G:A.7AYfl/fm9j%51Ju[.p_q>WX&4%-E\3.+S?^70/BAH]aBLrCK<-*km_0"%5Psj@R>%YpLpid7%H`Sf$.P#^+G6iOC>@.s=TWP,QWC0,7Hn>TCN3O@^/,$M!BDHf62QBQaBlp-&H$]D+G6s'*nRp66=:ThKW6(*%qN%=>KtEQ6<hE[VmO7Yrnma(HiU6&)GpgQEWE%*Q7QdSARcWnkIWSQ!dq'K5\AI'A]iT354#RlC6q7WMkbfqI"F7$`1NHr4/U=BI%(7#VTi4^TDermKY=%S1oVXLZ#q5B]47n9.$eB_^W/=[sEodYO#YDS?8;I)u.+0G<]\KE4bA;[0fT!G'goH5K&a!Z#4J\b59FU"^!%LoJ-hNNZ:e@o<A>7m2Z"i")S1N!TnR<%JNVXL?=@$g?q]LV'4^+=:l5Y3T'P.)OM3fA06N/,S'WK:#(#0j$S94cJV._%9:se%XqF%$E(qS%ZbL4d;PO_W0jta?]8d/1Hm4(XFM!=q(B$6EmA`\T:M]=2V_T?g`u$?1EWZ$'_TDS%X0s3;sBNTEZRC+8Y).;3dpt;P8);T%=,uAk76PG,\:Q0o`!Cp:</*R*k;O9g?ce>Klp6'/h,=,3-:G$Ul,))e-N'&c3_,dA_$gGCE[\NFj/Y]<\BV?NVT4&sKr/^2Uj4IQ%T;'[hs"+tF#]1C;3c#SNGe!/"bG-&1kDW><fnshT1TnWm>[>\5mAZA]q]Q[Z-&RnA(D2[!lEHE$r^^bMZ!&0Vm#,7J/i4#&$q31F%^1fl$S-6XLhn(2D;Fs!@>r`0$J2]cN.).SI01%)+rWQ#?cV*P%.0r^-glRFd/+3=UCLs4[?!hHf6*7LGoW8g\k7Q<oPD8&HXbqaK%GHIZ<EDU0A_qc$o.32jhIIrrb#^`^5?:nDD[ei0<=.8N.-A2-gZd=!IC`3"[n;^q@0LY%d,7ut>Mi;L%@@_?h`PY`E+E<j6UA?.$%<b60$?kp#3*%+_nC,N(]"V[)OKg_aeSuQRkifp85qtUn2X-BB]MLo'/M^l'oeV^"*c++$q9@@$NYA9E_emVi8J"g_D8lV6H::WD9%.S[fJo,*r2EtQ45'`>=5?D%*Omm4>m2`36?KDCa'S`J$BR$&`D&Y,)_T9dbO$1'iG<AU$<*;da5ad#OTbg1m8NVTrM.>9S,d>DN7%Y%t3n_<R%M._N6M@L@1b!aN7X/Pk!#a/)83E#cOL]faqAqoW(uY;M1=][WU2mO[q?dZeJI7X)M4QI\qnaq^g-acCsUMOd5Xj1Cj*%orEf0qC'R\GV'q]ke!*VR'U_EThS?ZZ7CdHV34g^!)&I`s!3dKKUB]X1(S<!AS%YA``(t2JW<u5PMAnA,a6;dE]$d;LB;5O3B/J-%C3W@B"8OC^h4I3%o,QtU`^Ni&Q?C`uo%9q8J7<i.*Qk?0.?-uh-&m'9hc>'<Io0i>C8L1`9XBW%;--B[aKRHP?0)cVBu]`-mnE96%nf3I"f$cV_@O_Cm8)_=Bd\2T(>$hmGW&FoW2%POU'VLa?XlQ%%=qmXd(dODXT5.6R(BXs3`QjMGe/JLgYDS_\9_?=)E]<H-S#dJ2%W&FoW=-S[g3:t2j.T1_$;1Nt&!)M(+Q#>L/@fRTT#),dcDG`UjMJUlob'-/dVa`52)Tfcq"eACaB,BZnX2oJ_U3oRTm(,X]%%728%f-ndsV7t+0>a/$d>1WA(ngW.n]Vm6NGY7U7CfM$lK])Z>Ka'>UrIcshY3L4CDQ'>AIcpLCSR0oD8O9:]0fRUfHA1-N3pQS+n5Hnb%>sJ"^Ien+QWRpglSK$jg\pjPeWTT#IXKJ2,b9@qf)Kl#."a4#ZU,2*2a[C.Uj;*$1P$S<aYNr+ScXaO`>sJ"Y6&8gAY2=@OJ8!L+%;dU*Z`@e:Y`s(8?L<H/,?[6\^%tV`E*0YVJplTsnd@bDH2nW4jlR1_B,H0mO=]ChrZ`nTW.XcI<e5]f2$i70?IN5^P]q@$XlZZOV%qmgkJA9r61;9RGSqPj4`XGNQMf2)'+"\5@pTroIfC<BWN_tN0W7#<?op#GV)>ZfTRr@/FpYLf`=Vs\M`:Z^\\rR;gigM;&SGE'1_%l>&<AO*dPMlM@JeFNMIYSlOB<l9m;.l?>f_55dp%ea)a2SAg,[l?AeFHs/kLSnJTsFoBgnLkX]oQdk\lMgOB_qM@\PTWXpN(`l]M%4#\W`,;<;A#Z8R2/(F7@b!:*?\pionQ;=O$GBU*+8Njf2O.gAi^GG3GSZ#3)AoBZ3lZZ5U^>l5Bb*K(A1[:o>oi$it4JAq8<MIno%'QXC:G#;O0or<IRASmU0lZ\Akn+=2?MS1-Jehua_Ba[5<lLA."%$*2t\5hO-:Q'L]YNg=(mW>kJIY,Wj)7u3'"oaatIe$ruOGdD>%Y+Ia'dI(A8Xre0/3ON->0:\W$Vk^hP-e^/k&CXq::J7n(:0g(a5's$uTQ4=&FhpmFa"F@WV_/f-h^"dpf1u^;\>l1\c,b`arR@nE%@:"5)>sEI]@"mguPO&&o6OZEkB\t-#X6Z[4JKp/W4h%Sd3cd9<i]OQMT)s),nNEXX'RHs'mD88qjWp_UZo_tj]b848jHZjGb&LI+%]U+:'MQS0^]FBeXQ!eYO3W@Zh9O?#0&-s[XJ.$oHgobZ+4B[:Ro3.d3D7@XM=k^KK<t4:#)1I"-XNB3ZC'<Rrb0FU/YVhm,SJEG,%"<">6j_pnAnWRt4P.qTA4SIQQ2J;V=;(2?eM8G<88ec&:H(qg?eVV^Q`(e`3%t11dS4nd["oSlQp2]V[&C&A!9sf*$';A4f(I\-V%E?JTDD&^lD[HtiPnFi">r9R+5rj-N=I/,g(ip5Ip[,#U-hX0`Z*SVXV<I9)VLM]+ga8uNsk<4dj[(9o11=3t_&!9GprR%)Q*>W^o%E>OWeZKB/"WG;7#Rr<3ih?TNa0eui.&^05(Vj!0'fMFin_6retI%`..@;hQCZY:cSkV;k7Z0!KkaO88u$]6Unm9i1nh<<.-rIPZD%9HCr_<WQ<"56/^^QhZGfg:,fA[hGmn@$Y0#hqi@mIF^5Pbgs'fEAFO,V8nAQcL_to_T5_%1LBX]i(SeGh?\&)DhKj%:ILlslD#PQ%K_LUPM01P'2Ibpn,!n-@P..n-QH!tf+WU1kUHSV72nH]R2N5/j)pH=6I+W4Vg!a[1CXqWr\p]*[[h%sob37.G`^\R.VegJQR_VN#%^L7>EM[)eb.4:p\GGHHR`cAD:Q\;F)Vdjl0(2ZgO5i%4CH$S))Y3@bL5.,m&>#0D+[iY1Mmk1p$'84Wj7:.38Zn\2%BErdWCrbWu%-e;WPr9@h,7W!&<eW%;[ZX<G_>lZ@Y09#&.&],Kc&=MXk^<>#4?U"N*fLM<c-:;tUJT(e7KN%AJE0j5%%ruQ,._/&K[b"-VO"+K8%!Kb!l)>:lkaZ]D%)eNCfhGV5,s!A_rP]NN'?ki6(0QsGT!Ut7m!%WD?JppC:l=9R0!"YYmo[T:C)8XooRd[kL6q$NKd06"!J;d38%&M8Qe0T9HSl<ur>*l6Dc*kfq+lp?XIHu5Qp*I)Y<NAmL(rakL"D`7^l9lUhol3%36Q@u_OGB8CcZ(l]#S]P7M5V2@E`%BC$b1\>b%$iV4Kai#I4e9MZVY,q?>Eo21r-(.GfEr@`$EP4N@<#,(>YD/YniDMCIV47;'Qmk`9<n/?*rk^NkcFh>J0URd,Ehu+U(OZsL?JU1)%>P^U@?Gf8l"Ha&l27*El>@%O$LE1sdegkq5l&EV:YBTb5,pO-3m+$%T1EA3Ba*uMAZaKC;e>!s;E:C9qA_s#n&aZDk*nuF"J(Bh-%D!#6"i5)>=f*?*UgYZbqfDVljX[UHJF$eFbYZ=;,3%CRqAcRO9KEb><3;ca0Io;Zb\:-Atnmk3nV:TL6$b%io$Xa+]EZ]!#3q#VG%G]=j6+jpMbUr++F!<RE&9>))FBXs57GTbD<iGtO^D@R\db799&OLJOGms]<Z\rgs:]+6>!nq.+\jucHKl<p/'r38'+GbF8c2o,Lj%_]gA5Up/tq5T0JXW%*=-D6lZ6C(YS2WR#*"$_QH<1hG*8G=">l_fQBMd=aGcNNWZ8]]]r*S]H2@?/2T?V#.=cbnAt?45(Z*H^*g)%*je,@Q;ZECp\,`#L_)PRBn16#U)Oa^CZ>.k5=Y!V;)sTnHkl#,,\<GT]KXM+mtK<7Qt!3`GTGu;fao*OM+QT+nn#Lm#+/-8:$&"5%=f'o+!]SGt!>m*m1__DNVu#Kq#mL>EK;".i$aXtblUu9.!%ML:YmfP%G017?=3Ka=Tc-)B4"EH1i(gl*dWCo:-!dLia'2%a50IbA%Kun`e50I$<K!p>lVlq_6M&sMlQNManRO(I98'lUtp;FYN7YasQ7i&T9S[Dmj_\fBM/B60Ai"-&FWl41Hr&mF#KB!%+'i-!f5#^$$%QH2SjhmP#%8Zub'/ARr%7/\!RQYou%9,+m=Im&b;-kp6"5#`AI.FIh+H23S3.b8)]=@[Q0/9)k.<(i'1*01)eookT#"[Rq4a<ntN%NOW:LUL#4Y5E,;noEg,`%=%]jUYj;pL\qf?2Qu\Eq:7!Z2c1C]e;KuPb.GhAmbg1[l8u3R*[q-%Q7/^=(<K;/\*sFMFLUn@WaN_@%\rB&SZ+tMOFPO\5GJN8_0j;_cZB-4)?Z;_J7*GZ(I\>VY*Mh_,-iE&aIe.Tp!FF`2q1Zb'MjZX<8UCM"B&Qehm4cS??\2f7N,jLX%]>"Gn`ErZW8<6/>k>[-GJOU33/YA.\!&P'101s/.;rjJ):p_lYHd0YZfdM>pDLYht"jS=;9EQSZ1`O%YosWd;#@1N=&G(Ssk=gaG%l9N3PDj`m]O8"aDhB$6BES`b[+F)Z;L+EU\cHUn?-6)bK*YAY`i_2@>ra--@T0aYsdjJ0@ZM0"p!4*8h@%[AY6%CXl"pfkV!tPOl%gO]hAMEu^XL*#<H9KnmU71^<[@N]o?m-beCh?!nu2VWZ/LBm&GMqA7Z%g!k&q0-`m%L='i4FfH'=X_#-Torji>]q6WS,0cMfFC_-%CAA@tH-t(E8u&G-,1Op@ZG=6T?FYsn<kST_.TO)G8`.g"#34$ZiA/,YO\14'#a6"8=;Z1&TgkU,(o8q)c8sd@mTM8h@-H6_([mj:%-qpBh+AitbVs[#a\<W\=YQM]]^flc0TQcj:iOBQF+dMq1M`UXi92LM"R/U[@&#Wp6a9n8MXGtqq:h=q,>IK1P;FiBrnpP^-ZEh2c%\C22:Q7.3H74.8:?O)1)`&K*3<-NR1e`kLd,okBlVVQ0-";/pF#04;r.>jY,N7C2q8e/m`04T>5eIghDpMbK4M=6j+g)QO7^%5MH%XmPQn@2Hi?\Q"@Ea@#f*$PFA!pf=%K?k*6uX9OO?I!5ldTR5bMr\D>Jr7.H$arG]E=EaBe-T#Q@'F[sQ&^E/rcM0T]Ve9gmEdKAq%50"p]]+?JmJq!Xn)/#rV+SuI#Z;B6"gQjWQ#*>d[BK_PKEDjFVKVnlG5#euV/?j=n-D9"UAfbK3'q&6.1M5bupQi!_N%^DQOXP.W%ai)P6cDR0cc$[YlmSTj(1I;j=V-Df@!A2JQ)26Qkp2%lLp8<3<c7nBR2>>e>^2ZZ05'l1%k2gP@1RJQ`EJ&f(;US]]GKRuH9RRmE%du8S<Ht0/>^(O]kdm%r1^K#o04[4iie=(L?hKmOpemn1?A5\,%2CrZ/_3]-IP`7;:B7VXl//FpZ_i6'KZ+3]K('IWZFS"J4"?b[M%T$Tn3T=k77gC?SuEhc.!#C23r#,4l]IFB&\7iljl.5<N[Mq;SjPTMl'<-4IT92))+.<:Z51cR^rq1sVU@]L*+mJ4m1#ek--(QNnp%qc3We&JaY@2PMuL?ooQj\uurL$2\"q+J7J0A7&_-\s_eClFsm/-gCT$R+#GT%6$(5A1-cggPB>9/6",$n?*IW&A*R%__>aTm7c3X%#G:+,MDOYrmUCl"Db2[N.Jl(+7bkH[0POXRb4g&_T>_YH_gW5/M6)6(=*t$^ML1[,cD^`jR&''l7i@6u97hFZdo?@,#_9&SBR"0m%"Sd:fr^=@/#RQF-mf4>6.qP3!AuUBW)$dbcEe(>X75P^ajl5T6Co(REEcZ?3/:*t:?b(hhW=&+Qb/W1@k#Uk]n!IYD#Gmpu9aRqu%rQEts1WC$9?tSomn_%:]S%&:]N$$V51(+Jn!O7'E,-g7pNj>S2Z"!hir5gS.-A:2%\A!OAeK6`dT2EpJkmScWHm?"'U"`"l=^l`J%JTWX.NF1KW_..MiQ&+QX/PGF\pDp8N1<n&.(#Sarh]/9`^;E/"bZNVEduUYSn>/lD'cNbN#\(!ig.pb%E\M>$e]SeJ"0[6j%6qdK%Q&s-5SoXrn'#msFDf]IqOqp'0&<e8-d-orsJoi>"68aJi';Ui5&\92qDKtsr/V_`3?4?d7b=VLq7s9cgG3^#2@7]8f3>u$oM#IBJ%cBAfKp6_+j^:/5RB&hKi5h8&;80u-eb\O<\W6&<WF;mr)YE:r^.UT4S:_T:J7:aSL-AU&NL)f%J'P%JNP8N&G]?H8bDJg2l"^P/K%!)*T35i>4Mb]6Yf7gmHQ,b[Ya5oX@_MSGIlK:-b!rIXCOr'h[:X73NgiJYGVZ`kmloZ:56+K9>MncJl2@]SrEnVF9_;gAgT86lip%?I2c8L"%Cl-sL"F(.*ZWm#\?n3_.^&_R7/l3A+nF*Ps)80AqDA6T't/$,!_+Gs'WemD;f]4Ji1E$W$kb'kP]$fJKa6=T9'QC')M9%=KnI4eg7P/SK7_15R]kte2$NZf$9eA$3BPPAXDUK+;Y%=>/)p&Qo8Iq4O]&*X=L0!c^=15\@"<,3s6qO-oqp^;=TQ5`BhUdaB8(;%[Z`(fL.i"/+D-WHA4KM\EY3Dj@a9TYWq0'.'9b=oO7*.8W",tm.]#4;WEr@320+ej%b3;Td[ejd:>n(bI/ld$WW:K=ocPD@_CT=T%DsJZ3\\1&g&bmdR4_bfX4\usl>LbDqH4VG'SSAud_b_HPBN:)fkU/NpGGHGI@3er8iWJ9NqfPF?7q%F7cP9"^TU&3g7ne6aQ]N8m%05t$<8KJ*a^6=gS>`eSC*@h>;\cI&YrH;!0(\KHuD"4C&3CTorjfSgR,u$=o7!A_(l0lUfE/\na6ZLQID=g\4Y9/h^=eet?Wgt;)%3K3&D=dj4XX;_U_j1K9rd*Ko:ku]'pUV?.T!>NrFSTWfsE%$<[=hj?MW/g)XnQe<)DP0]Q=esO'IC>a@mKQPX.94QUIGQDK>]_Dc%QtALk(nh@U)#hJ./qCH6YB,IG.`>[GA!9iiXs%FEs,5-7*\H4+=?h*KIi,FGZqAApp)R<@U:#Qk&.#k\@a?AFW,2D9WQtnbDo-ch%2[RlW+haaYgt@R%K?9GZ+VX\hgDD-bHSMg$Ec2Z\*sbuu-Hd$l\k>;FYVY8-fn5,XiB;,"hG>gi:"jJkKk2]ZeL76WJ0(q1JN956%h1a4Z%4Z)4J9E`;3-O'hSZKli'7H3X.)/m3GSm4h">$s_m@o6A3.e=$_5WZ43n`]i_m(+,X.LP=K01e-n3#co)]3[JV>0Y4<+\Ti%()g[,.gWb;6`BcNB\Vm(nfL=<]Se]Al4tL[pI-t_YluNVKpDkl*u4b0*'_jI?rh@<ks1YbQMrKH)EX/,fCguF<?Zg$o"li<T`h#=%`=,oCgejs^Thua?Thcdj4gea,?aRr%`C*7sMoh-Um5AfU!X\)N^=Z-IT*j?!kbh`E$qWdEh,7/e.NZl7_cTY2mo@8e,_UCADcFW9%,UDmC^.9"@8=Z_08jZo;H=S05KQi_##"NZhU29f=2%2VJBE.F#_baEd[<O<)_l.rt&-KM2[3h#hOA/:h$NV;7-*:8bb'*Ju2S[`<%:0"(jUaK:r&@Gak/>XZ>M%&(%Pgm7s;h=f9PoF\TW'm2/[eM-faPaOcM#,mW1p4S@;*Ao]?`l#\8B0Buh:K3Ned%s3m-ZTPARY<X%Z:..8`VJ(u)-\p@B8^AB6_.qNen^1u;W%<$BYCifKD?-qZsHrnT=k743mf>$KpQ<K?TD=Ij=`QqdBI)t"d`_>)W13@a12&5-Wm/&%oLQV63c3:>Ajg<l:>&nU;4W2;Klc=VdI9&QUH`2VeReAUm#PRk,Z5gV5Sk(HUotOV8<j6%CN2@dUdC*M5h,Xf5<K"OF[Hd^"CnK.%+@p..,C)A0d4noc_QH8t47`&,UQ_g@cDS/rjCri2pq.U&eu*<f(OpIM0h7!"$D.Pe:(LQ"Le2@j_qph'iRKBX1iZqtCW<8^e$<A5%H^>6^NL&BQ"T=kbl9S@'CBcdR+\mg_S>/;$;=mf$S:DUTe\b4[?A0Q4q9`[PIe*#XlB&f.6j+Qm#GF(rFbtn:"?LND&f0\=,=j`R%+Zn!@#;&")V7IWk&7&(5X>)WgkK#6IZ];>Oq09M_m64>T3`b&(O\R9L&1Mf60QBe+cIu_'bBO9r'+(k#Od_8#O&3.g,3OH<W[&a1%h$E;'`B^AO-Fu*)k%DV7-t"+0(iUu7$K\O7&WRYi<mkA.]]"5CAaFr`$m])!'KQ0X1/i\9QH@NqiVoX"H$oK)#L-I%b&0-6Nto8W%grhKV!YbqRchYN!&K<"$Ycqd7P<BlZ.mDaOf.d8C/3JmYJn<Nh/YbStD'#LF1-o_AG\97'2Pg+%.L0&`;Q^!`<AnONd8r`@:a?s+%-OtdT3-CME%l%$X\R=3]?2,PJ+)ha\_?Y32-[+"pqu^Wuq[Cm-,HpU-9lA*:+9`9JfjB!B*ur/T>.,RjRcY5HR/4i-1\\tC`%J?C%QR6[-ES4WNdAIMBqi^'j1]7(pm!C^76HD@$E0J[TLl"`Vd<dhQDWFQSke'$'dJ5(YW<rd_'@Z@4WJ.qV$"@/5.`"Z?DEeh#RVj:B%'M=e>fnF&Ge;2MJDD3;p=.n"d7@D\>/Ot,'\JU\!8%f_VQ1a*3+3+ig_VIFN*X/0,2H]PcBaJSMaiAi#islF$,nObl4Z7m2g57$J%HX?F5*l37;?l&E(I<&e<cR4+%TAMB_ao!O%ZPMaa(uTcUogP-P&lX[+'(nYX?4p2Z<W1C*._R+)e6piH<N8-XFT&sG6RWoaGQKh_%5WAoGnNJ$1o_*8dS'G%n/jmk@bu@6>[2Q6,>FKHXs4ZYfUVi7$m;J^XhTSWq;@*U!oOpCbD_SQ56@sPg]]Y5!kYi*+nJTGE,,KS<%oUHcZ-U]mBPrnBIEWU!ncT%4NDR;Y#,!\VeJOa&\O3r6/^-DqO][9I/;huYK`W]hrYSUR<ipO#03qV\^`c=!MM.+E3H)RTUO^0_I%Nk]mtl^kjsfY7*9I';1>()*+S#dK6Hr$_5oZ:'WTl&Xg)elDbLknm^ncN9L3CWC+0%rSo`m25JTD*X07:SW?H8/g<bVg%?c(4d[=%=X)o>oKF9bm#k.[+I!_b_;4Z&lat_92h2E?[aRbEbfpc]pDs1SSU@A*17rAb"UF55+[/mYel%0NaEc,eoPcI0GtC;HlN#4d+=2^9%TEm;;'L&:3p-ICYb5<B<X;@ED+Y?F>"c4U[_j@*@F<6)[K6&9[r#cgq*$66'W:1u*Xj4rcQQ?H(PFP=<L/NprBcD_k9Ha>-bRTS6%dAXQ8h_UX&#To=$h1O0@?kKp=9L(J("FnG\CBo%kcHFAJnA78JSIoPH'c4=W$;t#K+$Igr=CS-lm??=LYkZ:A?d>mY4F?2dK@K/@%*qfC?ZIojYp)5%!6r1DD&m]4>>WeWeDMXBK'VJ@:Jj(nn4.HLoq?ME:2fEu7c'JRF(:KqBT^RgKIhF":R1C]3jp.9Z`*d1!:&QV!%l3/I,Bh?Sp<qbH>C"7Q'-@,_+)C_'T`7)`%RQ3bTOOfYU/pjTI6Y>b^A-QO+TW_HAKZh=i[Y$a55RGJj#/>%Vj9@(6-ZX:@f8:eE%ko\X$h!mYT/P%SE?$if_D+ts6R,*N3#4>O0Kf6t5lg-c:QCGF8@K\i-OLqf'2I,=1K+X:DK.\1\.%r687O+]_bZRXeSEuJUN)]+X%OWH')-U[9AmVAC3M\=Fe#pM()V.=-,+P<4K,N=tR,\L1la#O:lM83_,n/GCg@+#q?V5kM(LeNZBS.*gRAs'-8=r7Jc=;N9'i/IOh%'*mB[`.;FqX^0S5CK?O=iQU,S$;N3aQa0&k5"W]im;4UY@O'a]%S=UN_7[B3(,^^+4.SiqlXFH>R64(L7aQhc=*Te:I?rM)$"09I%_)j[o;eZX<$M\)bK7EjPomMWLZ7#^V1^/sGHGCt<bQr@ngR?[7a)\(b*<WikFr3LDTb,61>Ud\gk`#Q/\lP/NZXa#)-Nf&"mY(b[%]+>7'[mpo6*H<@6e#=A5DD7i9G(jo/d.X2A-X</PJ,j0r_o#q+0O(7\"Cu`,)puuE(_?\`lb"d=h/7:ko-,<<d$$400GPd,9!'5]%m12j9>aCqsmZ]dDBOCD'#eTEH3UjRjm-[N5iDD_g#.)TdGV>Heek(]kOc!-,!;i:eG2]am38J=^gZ8uW8ia59b:/CnV9jp&N,W3i%@N_Q#KkLtE0)fcNa4f=WNVitX&"HsJ-e/hu!!FB=gTtBONN\5qeB-8$Ui@f@[ZsILL8+"t97M:)%t`<K$>g*,Q&.ZP/:]#^"S]S@%bImCtm(B?!eU'NtruOs2YnU-A$$)>`*IHEQW5Ma!P/1^ZH4$0:iVk>DYL.PYs0=S7fDIhQHP2O?^Il0%I6<@q<Jng4h,Ue?ehJW^%Ve@X'k=r"m@h4duAn_Ikh^pWIKtZhi'XWltH.ZulH`_kjf^pZ7kG@R"oA`ILlhMH^T.$+p!)IC$g`i*@$!b7F)Q#&@?C%Rp23/to%/FoO5J]g#3>]EK;XkY+1].@;aX[2r\inlgBOX69rC<KDsr@XksC*?8$jF*&`=D"j7s(pWb(S*StCIRrNjeCG9QHVe4q+cUD=fN;]%p9&[IU_d#0,I=XsHV4RO]Ojc[)P[&J-kc2!o&PQJ50/!CrD$\P.5%rE`uigHpCk*OqHcT*G^_(WGT^tmVu`qYE:r7f)CUoTV@q1K%7_l=SWciMaXBe-=Ue2=kNT.`mRm"\7Q!6AV7IfPpgL:]`8/rX:mIul"rrqVe/V2Cm,0%a.)TlQ=,(=P9I?lE.\U/.a=#P9ddD_#R%hNZJqS@q?oVX4,EHAu[*\&:.J>A_U&.083cW>sE?gAC4:pB(n@2m\<YAM`'3c7p0$d`9*;Hd+W^YkWkPX$aub##F`;mgYT0c.i!P%m*7mK4I6VnU21/dVDpfp@5FKXqud]q?R*^NXJd[G079^h?KY,aXEYTA_pcn$<GlhVeuu4Djc%eQ9'!&DCmC\K?^59)pmY,<jf@rg%'t5ibnl8mD>:&oDaaDY&n"5Q:7YMS>c4Ao0Z%-@a.aW5LV)Lbr5gQ&k=5CA$NhaNXVYIXZT7)';M6Lo-8teORDl[_S3Ne3RAd\[&%oB'qRmWU>4mN<"'Z+8,j:1(Hd*:B<NVSG>"go"a!<b%a(2@S,<eV`B-Yn@heB[.lI%`3%SqRm`#)e#0^h=aP]NT?nI8J9<V?!MT#%SKs'r%Q9f3ELMroYB2mc`+\g)9o%KJk3_Q<Fk,ea?B2.G6,."i:Ol>j20mk^@IGPTNqJIA`?f`$a'i=abJiT<p#YWM/\J:5hn[A6%Im/@1h&RO.,/u*DmU>5jh@C^G2L",$H>D:Qc'*.^4m3p+UGRo_fH[N8Nb4b"8*TC`q9unroHUCO%b&7uAt&:ZhkEc211SEq?og4*%"k2'p(lp9S8cN?-C]">%D?ORZAtK!>]U@*3<Fje\ca7<b2+4D.U=cKNb=&tH)7uG*4$%8/N%S!o>X"iq%\BPiZ6f7^1jW57AEo,*%rN9`ZK9UR8)7.95]39blRbd8IY4!hE@<<iN$6A+tM#Dt(0o!^J!;Hh*\#*ZL1uJ:@RiV3qIPWrQa)L,uhE]+FI#\Z@9a$jl!:bOW%_?DWWj\nB/TJe>;3B$Ej>m[/++5]3:PtT&)M9,3]-c#5=qZakSg_-h9@#e0=,u/gdZaZcAYh_=M%YrGI,o1ldDA\]qFidT/>QOW$%o$/`SJAb[-onRN7qBXcBko^jVD;[Q].8IUt',u3%5D$7+)[q%%;0tk;4OA@353rdb8K&lgc`bQ7V:]#F&-@r&n's0P&?3#3FY`L0%Fp%m\AUOjS*O0]W4Ju*_&lTtr0TjCtjh!Apb%hf'iqX^[R35Gd#cbgB[\NmrbfSEs"WDe&kc[IK*=j!"%0Ff=bRnNL*U*>L"WBCm%8NaqnZ@H*[_Ci=7'+c6kMt#`05^7-R=e3D;o5B<O@ODBe(;`_P=C\"&#81i[Aum^nq/4F_09\hcg6`2<lNOFe3+-5)_I`s0Eh.$!%Vkif6##pe5mG&k.*T8DF@UUaUXdLNf8m1IjrY+id/!`NdP[&EGLtI<(Y+cBkoPEANEa>F$ad-.5jW2L]rQHb[@_]o6s#"gf%8o9o%*k"8e_2-V.$,_=Ac!fKD$SE[##[8pYfpF,"-&C&P^FQAV1iOKsO?fS=JU-HE!rY=%9%4J#=_uq2YjK<'+OQR$P7?O1[AtN<QghCC%!!R0jNh&IVFS4p3Nik[+'TlH1I&Os\0e.;V9c-+]X]GNd^k")A)n*;V5X&[)Ga,A'2d<RZJum(VVj[tgntAfnGo)`^XGbe/k)`D4%YU%c7O3AY#!h8/F&s=bo=(@'.l-t:&L+%Klpc1N>r&fBP)Qh*c=G.*1Yi];MV5^4p4=g/4<mB'OM?`OG^sQ<M?;'oZWQn`sO1qRd%,RNH6N0WqALf5FNEUo1p5b?/h!131gp)iGI+NIL*6f?4"5no*"OOYi=I&Z&(^jFd-CFnAJ\Y3#UHA+Y5b/qhMl#DGY`Ms>d[9$pq%X'67&.tP0J7bp$BNNBg5Y7&'RE`XF>70/3"eQE3&?'9cQY>8C`R6"/H:F08,j!2`M;ZBXP7.*dJg?GL#.sSai06M=L7U;g+"G`h5%aDnqYNIW]JIfbWBfjH>h>J@$+Dot\RG)J>>a(uu*m&<=D:)h%6XM[N_YO"\:2Q*3oGlCZPfaHgLWECH-a:Ft(qH007W<8"ARPdKB%VW`Fj%.8RA#/AJV]m2,Vr6g?W9Af$`<naBG'qP"h+"KCuOZojPqLl'<#*."l7$f$>qSU:.o(+!R-SAj1q.ERd3A?:'Lh$cUPC'bp%l]cL'n$=]J>)$Sk@MoX[:aTZ,*6\spm`j#`h&#Qa6g%le->\[@Zc%ml;oG^f-g05POM5QuI%Q5WAGT1C5ubpbWD5C&dA[5)a(=b2%D]\:)O*6^Lg=A(M'<6\p_ggn"BGd#WYMiLR3XNF3-o%koiEq]b`\CiP&4XmE,T6]I8*9#]E6ERcOpo$%3B2J*qu]q38>#~>%AI9_PrivateDataEnd